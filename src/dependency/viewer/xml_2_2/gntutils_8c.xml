<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd"
         version="1.8.5">
    <compounddef id="gntutils_8c" kind="file">
        <compoundname>gntutils.c</compoundname>
        <includes refid="gntbutton_8h" local="yes">gntbutton.h</includes>
        <includes refid="gntcheckbox_8h" local="yes">gntcheckbox.h</includes>
        <includes refid="gntcombobox_8h" local="yes">gntcombobox.h</includes>
        <includes refid="gntentry_8h" local="yes">gntentry.h</includes>
        <includes refid="gntlabel_8h" local="yes">gntlabel.h</includes>
        <includes refid="gntline_8h" local="yes">gntline.h</includes>
        <includes refid="gnttextview_8h" local="yes">gnttextview.h</includes>
        <includes refid="gnttree_8h" local="yes">gnttree.h</includes>
        <includes refid="gntutils_8h" local="yes">gntutils.h</includes>
        <includes refid="gntwindow_8h" local="yes">gntwindow.h</includes>
        <includes local="yes">config.h</includes>
        <includes local="no">stdarg.h</includes>
        <includes local="no">stdlib.h</includes>
        <includes local="no">string.h</includes>
        <includes local="no">libxml/parser.h</includes>
        <includes local="no">libxml/tree.h</includes>
        <incdepgraph>
            <node id="2194">
                <label>gntbox.h</label>
                <link refid="gntbox_8h"/>
                <childnode refid="2175" relation="include">
                </childnode>
                <childnode refid="2176" relation="include">
                </childnode>
            </node>
            <node id="2198">
                <label>stdarg.h</label>
            </node>
            <node id="2190">
                <label>gntline.h</label>
                <link refid="gntline_8h"/>
                <childnode refid="2176" relation="include">
                </childnode>
                <childnode refid="2175" relation="include">
                </childnode>
                <childnode refid="2181" relation="include">
                </childnode>
                <childnode refid="2182" relation="include">
                </childnode>
            </node>
            <node id="2196">
                <label>gntmenuitem.h</label>
                <link refid="gntmenuitem_8h"/>
                <childnode refid="2173" relation="include">
                </childnode>
                <childnode refid="2174" relation="include">
                </childnode>
                <childnode refid="2195" relation="include">
                </childnode>
            </node>
            <node id="2199">
                <label>stdlib.h</label>
            </node>
            <node id="2185">
                <label>gntcheckbox.h</label>
                <link refid="gntcheckbox_8h"/>
                <childnode refid="2172" relation="include">
                </childnode>
                <childnode refid="2175" relation="include">
                </childnode>
                <childnode refid="2181" relation="include">
                </childnode>
                <childnode refid="2182" relation="include">
                </childnode>
            </node>
            <node id="2184">
                <label>term.h</label>
            </node>
            <node id="2201">
                <label>libxml/parser.h</label>
            </node>
            <node id="2187">
                <label>gntentry.h</label>
                <link refid="gntentry_8h"/>
                <childnode refid="2176" relation="include">
                </childnode>
                <childnode refid="2175" relation="include">
                </childnode>
                <childnode refid="2181" relation="include">
                </childnode>
                <childnode refid="2182" relation="include">
                </childnode>
            </node>
            <node id="2175">
                <label>gnt.h</label>
                <link refid="gnt_8h"/>
                <childnode refid="2173" relation="include">
                </childnode>
                <childnode refid="2176" relation="include">
                </childnode>
                <childnode refid="2180" relation="include">
                </childnode>
                <childnode refid="2181" relation="include">
                </childnode>
                <childnode refid="2182" relation="include">
                </childnode>
            </node>
            <node id="2183">
                <label>curses.h</label>
            </node>
            <node id="2176">
                <label>gntwidget.h</label>
                <link refid="gntwidget_8h"/>
                <childnode refid="2177" relation="include">
                </childnode>
                <childnode refid="2173" relation="include">
                </childnode>
                <childnode refid="2178" relation="include">
                </childnode>
                <childnode refid="2179" relation="include">
                </childnode>
            </node>
            <node id="2181">
                <label>gntcolors.h</label>
                <link refid="gntcolors_8h"/>
                <childnode refid="2173" relation="include">
                </childnode>
            </node>
            <node id="2189">
                <label>gnttextview.h</label>
                <link refid="gnttextview_8h"/>
                <childnode refid="2176" relation="include">
                </childnode>
                <childnode refid="2175" relation="include">
                </childnode>
                <childnode refid="2181" relation="include">
                </childnode>
                <childnode refid="2182" relation="include">
                </childnode>
            </node>
            <node id="2171">
                <label>libgnt/gntutils.c</label>
                <link refid="gntutils.c"/>
                <childnode refid="2172" relation="include">
                </childnode>
                <childnode refid="2185" relation="include">
                </childnode>
                <childnode refid="2186" relation="include">
                </childnode>
                <childnode refid="2187" relation="include">
                </childnode>
                <childnode refid="2188" relation="include">
                </childnode>
                <childnode refid="2190" relation="include">
                </childnode>
                <childnode refid="2189" relation="include">
                </childnode>
                <childnode refid="2191" relation="include">
                </childnode>
                <childnode refid="2192" relation="include">
                </childnode>
                <childnode refid="2193" relation="include">
                </childnode>
                <childnode refid="2197" relation="include">
                </childnode>
                <childnode refid="2198" relation="include">
                </childnode>
                <childnode refid="2199" relation="include">
                </childnode>
                <childnode refid="2200" relation="include">
                </childnode>
                <childnode refid="2201" relation="include">
                </childnode>
                <childnode refid="2202" relation="include">
                </childnode>
            </node>
            <node id="2192">
                <label>gntutils.h</label>
                <link refid="gntutils_8h"/>
                <childnode refid="2173" relation="include">
                </childnode>
                <childnode refid="2175" relation="include">
                </childnode>
                <childnode refid="2189" relation="include">
                </childnode>
                <childnode refid="2176" relation="include">
                </childnode>
            </node>
            <node id="2200">
                <label>string.h</label>
            </node>
            <node id="2195">
                <label>gntmenu.h</label>
                <link refid="gntmenu_8h"/>
                <childnode refid="2191" relation="include">
                </childnode>
                <childnode refid="2181" relation="include">
                </childnode>
                <childnode refid="2182" relation="include">
                </childnode>
                <childnode refid="2196" relation="include">
                </childnode>
            </node>
            <node id="2172">
                <label>gntbutton.h</label>
                <link refid="gntbutton_8h"/>
                <childnode refid="2173" relation="include">
                </childnode>
                <childnode refid="2174" relation="include">
                </childnode>
                <childnode refid="2175" relation="include">
                </childnode>
                <childnode refid="2176" relation="include">
                </childnode>
            </node>
            <node id="2186">
                <label>gntcombobox.h</label>
                <link refid="gntcombobox_8h"/>
                <childnode refid="2175" relation="include">
                </childnode>
                <childnode refid="2181" relation="include">
                </childnode>
                <childnode refid="2182" relation="include">
                </childnode>
                <childnode refid="2176" relation="include">
                </childnode>
            </node>
            <node id="2173">
                <label>glib.h</label>
            </node>
            <node id="2193">
                <label>gntwindow.h</label>
                <link refid="gntwindow_8h"/>
                <childnode refid="2175" relation="include">
                </childnode>
                <childnode refid="2194" relation="include">
                </childnode>
                <childnode refid="2181" relation="include">
                </childnode>
                <childnode refid="2182" relation="include">
                </childnode>
                <childnode refid="2195" relation="include">
                </childnode>
            </node>
            <node id="2179">
                <label>gntbindable.h</label>
                <link refid="gntbindable_8h"/>
                <childnode refid="2177" relation="include">
                </childnode>
                <childnode refid="2173" relation="include">
                </childnode>
                <childnode refid="2174" relation="include">
                </childnode>
                <childnode refid="2178" relation="include">
                </childnode>
            </node>
            <node id="2178">
                <label>ncurses.h</label>
            </node>
            <node id="2191">
                <label>gnttree.h</label>
                <link refid="gnttree_8h"/>
                <childnode refid="2176" relation="include">
                </childnode>
                <childnode refid="2175" relation="include">
                </childnode>
                <childnode refid="2181" relation="include">
                </childnode>
                <childnode refid="2182" relation="include">
                </childnode>
                <childnode refid="2189" relation="include">
                </childnode>
            </node>
            <node id="2202">
                <label>libxml/tree.h</label>
            </node>
            <node id="2197">
                <label>config.h</label>
            </node>
            <node id="2177">
                <label>stdio.h</label>
            </node>
            <node id="2182">
                <label>gntkeys.h</label>
                <link refid="gntkeys_8h"/>
                <childnode refid="2183" relation="include">
                </childnode>
                <childnode refid="2184" relation="include">
                </childnode>
            </node>
            <node id="2188">
                <label>gntlabel.h</label>
                <link refid="gntlabel_8h"/>
                <childnode refid="2175" relation="include">
                </childnode>
                <childnode refid="2176" relation="include">
                </childnode>
                <childnode refid="2189" relation="include">
                </childnode>
            </node>
            <node id="2180">
                <label>gntclipboard.h</label>
                <link refid="gntclipboard_8h"/>
                <childnode refid="2177" relation="include">
                </childnode>
                <childnode refid="2173" relation="include">
                </childnode>
                <childnode refid="2174" relation="include">
                </childnode>
            </node>
            <node id="2174">
                <label>glib-object.h</label>
            </node>
        </incdepgraph>
        <innerclass refid="structduplicate__fns" prot="public">duplicate_fns</innerclass>
        <innerclass refid="struct_binding_view" prot="public">BindingView</innerclass>
        <innerclass refid="struct_trigger_button" prot="public">TriggerButton</innerclass>
        <sectiondef kind="func">
            <memberdef kind="function" id="gntutils_8c_1ad83a4c9fc7023ffadca1d49c5210ffc7" prot="public" static="no"
                       const="no" explicit="no" inline="no" virt="non-virtual">
                <type>void</type>
                <definition>void gnt_util_get_text_bound</definition>
                <argsstring>(const char *text, int *width, int *height)</argsstring>
                <name>gnt_util_get_text_bound</name>
                <param>
                    <type>const char *</type>
                    <declname>text</declname>
                </param>
                <param>
                    <type>int *</type>
                    <declname>width</declname>
                </param>
                <param>
                    <type>int *</type>
                    <declname>height</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                    <para>GNT - The GLib Ncurses Toolkit</para>
                    <para>GNT is the legal property of its developers, whose names are too numerous to list here. Please
                        refer to the COPYRIGHT file distributed with this source distribution.
                    </para>
                    <para>This library is free software; you can redistribute it and/or modify it under the terms of the
                        GNU General Public License as published by the Free Software Foundation; either version 2 of the
                        License, or (at your option) any later version.
                    </para>
                    <para>This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
                        without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See
                        the GNU General Public License for more details.
                    </para>
                    <para>You should have received a copy of the GNU General Public License along with this program; if
                        not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
                        02111-1301 USA
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.2.0.tar/pidgin-2.2.0/finch/libgnt/gntutils.c"
                          line="47" column="1"
                          bodyfile="C:/Users/David/Downloads/pidgin-2.2.0.tar/pidgin-2.2.0/finch/libgnt/gntutils.c"
                          bodystart="47" bodyend="79"/>
            </memberdef>
            <memberdef kind="function" id="gntutils_8c_1a8accc80ef45b27fb238d66236f161a8a" prot="public" static="no"
                       const="no" explicit="no" inline="no" virt="non-virtual">
                <type>int</type>
                <definition>int gnt_util_onscreen_width</definition>
                <argsstring>(const char *start, const char *end)</argsstring>
                <name>gnt_util_onscreen_width</name>
                <param>
                    <type>const char *</type>
                    <declname>start</declname>
                </param>
                <param>
                    <type>const char *</type>
                    <declname>end</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                    <para>Get the onscreen width of a string, or a substring.</para>
                    <para>
                        <parameterlist kind="param">
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>start</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>The beginning of the string.</para>
                                </parameterdescription>
                            </parameteritem>
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>end</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>The end of the string. The width returned is the width upto (but not
                                        including) end. If end is NULL, then start is considered as a
                                        <computeroutput>NULL-terminated</computeroutput>
                                        string.
                                    </para>
                                </parameterdescription>
                            </parameteritem>
                        </parameterlist>
                        <simplesect kind="return">
                            <para>The on-screen width of the string.</para>
                        </simplesect>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.2.0.tar/pidgin-2.2.0/finch/libgnt/gntutils.c"
                          line="81" column="1"
                          bodyfile="C:/Users/David/Downloads/pidgin-2.2.0.tar/pidgin-2.2.0/finch/libgnt/gntutils.c"
                          bodystart="81" bodyend="93"/>
            </memberdef>
            <memberdef kind="function" id="gntutils_8c_1a35086b64cb7a2b574ab7a7fafecdeed5" prot="public" static="no"
                       const="no" explicit="no" inline="no" virt="non-virtual">
                <type>const char *</type>
                <definition>const char* gnt_util_onscreen_width_to_pointer</definition>
                <argsstring>(const char *string, int len, int *w)</argsstring>
                <name>gnt_util_onscreen_width_to_pointer</name>
                <param>
                    <type>const char *</type>
                    <declname>str</declname>
                    <defname>string</defname>
                </param>
                <param>
                    <type>int</type>
                    <declname>len</declname>
                </param>
                <param>
                    <type>int *</type>
                    <declname>w</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                    <para>Computes and returns the string after a specific number of onscreen characters.</para>
                    <para>
                        <parameterlist kind="param">
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>str</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>The string.</para>
                                </parameterdescription>
                            </parameteritem>
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>len</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>The length to consider. If non-positive, the entire screenlength is used.
                                    </para>
                                </parameterdescription>
                            </parameteritem>
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>w</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>The actual width of the string upto the returned offset, if not
                                        <computeroutput>NULL</computeroutput>.
                                    </para>
                                </parameterdescription>
                            </parameteritem>
                        </parameterlist>
                        <simplesect kind="return">
                            <para>The string after len offset.</para>
                        </simplesect>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.2.0.tar/pidgin-2.2.0/finch/libgnt/gntutils.c"
                          line="95" column="1"
                          bodyfile="C:/Users/David/Downloads/pidgin-2.2.0.tar/pidgin-2.2.0/finch/libgnt/gntutils.c"
                          bodystart="95" bodyend="115"/>
            </memberdef>
            <memberdef kind="function" id="gntutils_8c_1a9a74566ea2b80ce87b911f1ee428329c" prot="public" static="no"
                       const="no" explicit="no" inline="no" virt="non-virtual">
                <type>char *</type>
                <definition>char* gnt_util_onscreen_fit_string</definition>
                <argsstring>(const char *string, int maxw)</argsstring>
                <name>gnt_util_onscreen_fit_string</name>
                <param>
                    <type>const char *</type>
                    <declname>string</declname>
                </param>
                <param>
                    <type>int</type>
                    <declname>maxw</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                    <para>Inserts newlines in &apos;string&apos; where necessary so that its onscreen width is no more
                        than &apos;maxw&apos;.
                    </para>
                    <para>
                        <parameterlist kind="param">
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>string</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>The string.</para>
                                </parameterdescription>
                            </parameteritem>
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>maxw</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>The width that the string should fit into. If maxw is &lt;= 0, then the
                                        available maximum width is used.
                                    </para>
                                </parameterdescription>
                            </parameteritem>
                        </parameterlist>
                        <simplesect kind="return">
                            <para>A newly allocated string that needs to be freed by the caller.</para>
                        </simplesect>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.2.0.tar/pidgin-2.2.0/finch/libgnt/gntutils.c"
                          line="117" column="1"
                          bodyfile="C:/Users/David/Downloads/pidgin-2.2.0.tar/pidgin-2.2.0/finch/libgnt/gntutils.c"
                          bodystart="117" bodyend="145"/>
            </memberdef>
            <memberdef kind="function" id="gntutils_8c_1ae9a336eca799377f101a1b112cd2211b" prot="public" static="yes"
                       const="no" explicit="no" inline="no" virt="non-virtual">
                <type>void</type>
                <definition>static void duplicate_values</definition>
                <argsstring>(gpointer key, gpointer value, gpointer data)</argsstring>
                <name>duplicate_values</name>
                <param>
                    <type>gpointer</type>
                    <declname>key</declname>
                </param>
                <param>
                    <type>gpointer</type>
                    <declname>value</declname>
                </param>
                <param>
                    <type>gpointer</type>
                    <declname>data</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.2.0.tar/pidgin-2.2.0/finch/libgnt/gntutils.c"
                          line="155" column="1"
                          bodyfile="C:/Users/David/Downloads/pidgin-2.2.0.tar/pidgin-2.2.0/finch/libgnt/gntutils.c"
                          bodystart="155" bodyend="160"/>
            </memberdef>
            <memberdef kind="function" id="gntutils_8c_1a1a59e8b19bfca4c11339aaa672adc256" prot="public" static="no"
                       const="no" explicit="no" inline="no" virt="non-virtual">
                <type>GHashTable *</type>
                <definition>GHashTable* g_hash_table_duplicate</definition>
                <argsstring>(GHashTable *src, GHashFunc hash, GEqualFunc equal, GDestroyNotify key_d, GDestroyNotify
                    value_d, GDupFunc key_dup, GDupFunc value_dup)
                </argsstring>
                <name>g_hash_table_duplicate</name>
                <param>
                    <type>GHashTable *</type>
                    <declname>src</declname>
                </param>
                <param>
                    <type>GHashFunc</type>
                    <declname>hash</declname>
                </param>
                <param>
                    <type>GEqualFunc</type>
                    <declname>equal</declname>
                </param>
                <param>
                    <type>GDestroyNotify</type>
                    <declname>key_d</declname>
                </param>
                <param>
                    <type>GDestroyNotify</type>
                    <declname>value_d</declname>
                </param>
                <param>
                    <type>
                        <ref refid="gntutils_8h_1a3f3734c8ea24f4c77a4f2774792a548b" kindref="member">GDupFunc</ref>
                    </type>
                    <declname>key_dup</declname>
                </param>
                <param>
                    <type>
                        <ref refid="gntutils_8h_1a3f3734c8ea24f4c77a4f2774792a548b" kindref="member">GDupFunc</ref>
                    </type>
                    <declname>value_dup</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                    <para>Duplicate the contents of a hastable.</para>
                    <para>
                        <parameterlist kind="param">
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>src</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>The source hashtable.</para>
                                </parameterdescription>
                            </parameteritem>
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>hash</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>The hash-function to use.</para>
                                </parameterdescription>
                            </parameteritem>
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>equal</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>The hash-equal function to use.</para>
                                </parameterdescription>
                            </parameteritem>
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>key_d</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>The key-destroy function to use.</para>
                                </parameterdescription>
                            </parameteritem>
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>value_d</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>The value-destroy function to use.</para>
                                </parameterdescription>
                            </parameteritem>
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>key_dup</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>The function to use to duplicate the key.</para>
                                </parameterdescription>
                            </parameteritem>
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>value_dup</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>The function to use to duplicate the value.</para>
                                </parameterdescription>
                            </parameteritem>
                        </parameterlist>
                        <simplesect kind="return">
                            <para>The new hashtable.</para>
                        </simplesect>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.2.0.tar/pidgin-2.2.0/finch/libgnt/gntutils.c"
                          line="162" column="1"
                          bodyfile="C:/Users/David/Downloads/pidgin-2.2.0.tar/pidgin-2.2.0/finch/libgnt/gntutils.c"
                          bodystart="162" bodyend="170"/>
            </memberdef>
            <memberdef kind="function" id="gntutils_8c_1aabbf0de8b1c162e032dbd876e7429243" prot="public" static="no"
                       const="no" explicit="no" inline="no" virt="non-virtual">
                <type>gboolean</type>
                <definition>gboolean gnt_boolean_handled_accumulator</definition>
                <argsstring>(GSignalInvocationHint *ihint, GValue *return_accu, const GValue *handler_return, gpointer
                    dummy)
                </argsstring>
                <name>gnt_boolean_handled_accumulator</name>
                <param>
                    <type>GSignalInvocationHint *</type>
                    <declname>ihint</declname>
                </param>
                <param>
                    <type>GValue *</type>
                    <declname>return_accu</declname>
                </param>
                <param>
                    <type>const GValue *</type>
                    <declname>handler_return</declname>
                </param>
                <param>
                    <type>gpointer</type>
                    <declname>dummy</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                    <para>To be used with g_signal_new. Look in the key_pressed signal-definition in gntwidget.c for
                        usage.
                    </para>
                    <para>
                        <parameterlist kind="param">
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>ihint</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>NA</para>
                                </parameterdescription>
                            </parameteritem>
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>return_accu</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>NA</para>
                                </parameterdescription>
                            </parameteritem>
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>handler_return</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>NA</para>
                                </parameterdescription>
                            </parameteritem>
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>dummy</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>NA</para>
                                </parameterdescription>
                            </parameteritem>
                        </parameterlist>
                        <simplesect kind="return">
                            <para>NA</para>
                        </simplesect>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.2.0.tar/pidgin-2.2.0/finch/libgnt/gntutils.c"
                          line="172" column="1"
                          bodyfile="C:/Users/David/Downloads/pidgin-2.2.0.tar/pidgin-2.2.0/finch/libgnt/gntutils.c"
                          bodystart="172" bodyend="185"/>
            </memberdef>
            <memberdef kind="function" id="gntutils_8c_1a110faf05ed1cf9659cad107e92e97b74" prot="public" static="yes"
                       const="no" explicit="no" inline="no" virt="non-virtual">
                <type>void</type>
                <definition>static void add_binding</definition>
                <argsstring>(gpointer key, gpointer value, gpointer data)</argsstring>
                <name>add_binding</name>
                <param>
                    <type>gpointer</type>
                    <declname>key</declname>
                </param>
                <param>
                    <type>gpointer</type>
                    <declname>value</declname>
                </param>
                <param>
                    <type>gpointer</type>
                    <declname>data</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.2.0.tar/pidgin-2.2.0/finch/libgnt/gntutils.c"
                          line="193" column="1"
                          bodyfile="C:/Users/David/Downloads/pidgin-2.2.0.tar/pidgin-2.2.0/finch/libgnt/gntutils.c"
                          bodystart="193" bodyend="205"/>
            </memberdef>
            <memberdef kind="function" id="gntutils_8c_1a944eaa420060812cc716ea9d9a2ba308" prot="public" static="yes"
                       const="no" explicit="no" inline="no" virt="non-virtual">
                <type>void</type>
                <definition>static void add_action</definition>
                <argsstring>(gpointer key, gpointer value, gpointer data)</argsstring>
                <name>add_action</name>
                <param>
                    <type>gpointer</type>
                    <declname>key</declname>
                </param>
                <param>
                    <type>gpointer</type>
                    <declname>value</declname>
                </param>
                <param>
                    <type>gpointer</type>
                    <declname>data</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.2.0.tar/pidgin-2.2.0/finch/libgnt/gntutils.c"
                          line="208" column="1"
                          bodyfile="C:/Users/David/Downloads/pidgin-2.2.0.tar/pidgin-2.2.0/finch/libgnt/gntutils.c"
                          bodystart="208" bodyend="212"/>
            </memberdef>
            <memberdef kind="function" id="gntutils_8c_1a879657504a9924156cfae84d1de3afdb" prot="public" static="no"
                       const="no" explicit="no" inline="no" virt="non-virtual">
                <type>
                    <ref refid="gntwidget_8h_1a8bad7b03fe24fa49b0b5227a621db767" kindref="member">GntWidget</ref>
                    *
                </type>
                <definition>GntWidget* gnt_widget_bindings_view</definition>
                <argsstring>(GntWidget *widget)</argsstring>
                <name>gnt_widget_bindings_view</name>
                <param>
                    <type>
                        <ref refid="gntwidget_8h_1a8bad7b03fe24fa49b0b5227a621db767" kindref="member">GntWidget</ref>
                        *
                    </type>
                    <declname>widget</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                    <para>Get a helpful display about the bindings of a widget.</para>
                    <para>
                        <parameterlist kind="param">
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>widget</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>The widget to get bindings for.</para>
                                </parameterdescription>
                            </parameteritem>
                        </parameterlist>
                        <simplesect kind="return">
                            <para>Returns a GntTree populated with &quot;key&quot; -&gt; &quot;binding&quot; for the
                                widget.
                            </para>
                        </simplesect>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.2.0.tar/pidgin-2.2.0/finch/libgnt/gntutils.c"
                          line="214" column="1"
                          bodyfile="C:/Users/David/Downloads/pidgin-2.2.0.tar/pidgin-2.2.0/finch/libgnt/gntutils.c"
                          bodystart="214" bodyend="233"/>
            </memberdef>
            <memberdef kind="function" id="gntutils_8c_1a05e53d17a2ef20d1537bf9c96620223a" prot="public" static="yes"
                       const="no" explicit="no" inline="no" virt="non-virtual">
                <type>
                    <ref refid="gntwidget_8h_1a8bad7b03fe24fa49b0b5227a621db767" kindref="member">GntWidget</ref>
                    *
                </type>
                <definition>static GntWidget* gnt_widget_from_xmlnode</definition>
                <argsstring>(xmlNode *node, GntWidget **data[], int max)</argsstring>
                <name>gnt_widget_from_xmlnode</name>
                <param>
                    <type>xmlNode *</type>
                    <declname>node</declname>
                </param>
                <param>
                    <type>
                        <ref refid="gntwidget_8h_1a8bad7b03fe24fa49b0b5227a621db767" kindref="member">GntWidget</ref>
                        **
                    </type>
                    <declname>data</declname>
                    <array>[]</array>
                </param>
                <param>
                    <type>int</type>
                    <declname>max</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.2.0.tar/pidgin-2.2.0/finch/libgnt/gntutils.c"
                          line="237" column="1"
                          bodyfile="C:/Users/David/Downloads/pidgin-2.2.0.tar/pidgin-2.2.0/finch/libgnt/gntutils.c"
                          bodystart="237" bodyend="347"/>
            </memberdef>
            <memberdef kind="function" id="gntutils_8c_1a8d1bd6b9c45c17bd88f49add43a9b284" prot="public" static="no"
                       const="no" explicit="no" inline="no" virt="non-virtual">
                <type>void</type>
                <definition>void gnt_util_parse_widgets</definition>
                <argsstring>(const char *string, int num,...)</argsstring>
                <name>gnt_util_parse_widgets</name>
                <param>
                    <type>const char *</type>
                    <declname>string</declname>
                </param>
                <param>
                    <type>int</type>
                    <declname>num</declname>
                </param>
                <param>
                    <type>...</type>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                    <para>Parse widgets from an XML description. For example,</para>
                    <para>
                        <programlisting>
                            <codeline>
                                <highlight class="normal">*
                                    <sp/>
                                    <ref refid="struct___gnt_widget" kindref="compound">GntWidget</ref>
                                    <sp/>*<ref refid="namespacegntrss-ui_1a0ece6388711a16053156a275113f6222"
                                               kindref="member">win</ref>,<sp/>*<ref
                                            refid="namespacetest_1a6a35dc97cc575e3e1f108d7a19e8be11" kindref="member">
                                        button</ref>;
                                </highlight>
                            </codeline>
                            <codeline>
                                <highlight class="normal">*
                                    <sp/>
                                    <ref refid="gntutils_8c_1a8d1bd6b9c45c17bd88f49add43a9b284" kindref="member">
                                        gnt_util_parse_widgets</ref>(
                                </highlight>
                                <highlight class="stringliteral">&quot;\</highlight>
                            </codeline>
                            <codeline>
                                <highlight class="stringliteral">*
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>&lt;vwindow<sp/>id=&apos;0&apos;<sp/>fill=&apos;0&apos;<sp/>align=&apos;2&apos;&gt;
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>\
                                </highlight>
                            </codeline>
                            <codeline>
                                <highlight class="stringliteral">*
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>&lt;label&gt;This<sp/>is<sp/>a<sp/>test&lt;/label&gt;
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>\
                                </highlight>
                            </codeline>
                            <codeline>
                                <highlight class="stringliteral">*
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>&lt;button<sp/>id=&apos;1&apos;&gt;OK&lt;/button&gt;
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>\
                                </highlight>
                            </codeline>
                            <codeline>
                                <highlight class="stringliteral">*
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>&lt;/vwindow&gt;&quot;
                                </highlight>
                                <highlight class="normal">,</highlight>
                            </codeline>
                            <codeline>
                                <highlight class="normal">*
                                    <sp/>
                                    <sp/>
                                    <sp/>2,<sp/>&amp;win,<sp/>&amp;button);
                                </highlight>
                            </codeline>
                            <codeline>
                                <highlight class="normal">*
                                    <sp/>
                                </highlight>
                            </codeline>
                        </programlisting>
                    </para>
                    <para>
                        <parameterlist kind="param">
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>string</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>The XML string.</para>
                                </parameterdescription>
                            </parameteritem>
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>num</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>The number of widgets to return, followed by &apos;num&apos; GntWidget **
                                    </para>
                                </parameterdescription>
                            </parameteritem>
                        </parameterlist>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.2.0.tar/pidgin-2.2.0/finch/libgnt/gntutils.c"
                          line="350" column="1"
                          bodyfile="C:/Users/David/Downloads/pidgin-2.2.0.tar/pidgin-2.2.0/finch/libgnt/gntutils.c"
                          bodystart="350" bodyend="377"/>
            </memberdef>
            <memberdef kind="function" id="gntutils_8c_1a950170817eb281462e7e1a6f37993edc" prot="public" static="yes"
                       const="no" explicit="no" inline="no" virt="non-virtual">
                <type>void</type>
                <definition>static void util_parse_html_to_tv</definition>
                <argsstring>(xmlNode *node, GntTextView *tv, GntTextFormatFlags flag)</argsstring>
                <name>util_parse_html_to_tv</name>
                <param>
                    <type>xmlNode *</type>
                    <declname>node</declname>
                </param>
                <param>
                    <type>
                        <ref refid="gnttextview_8h_1a0f0993c949fa79d7d2b1d128ca9000f3" kindref="member">GntTextView
                        </ref>
                        *
                    </type>
                    <declname>tv</declname>
                </param>
                <param>
                    <type>
                        <ref refid="gnttextview_8h_1a271a981817202e72d3566da4d94c9ddf" kindref="member">
                            GntTextFormatFlags
                        </ref>
                    </type>
                    <declname>flag</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.2.0.tar/pidgin-2.2.0/finch/libgnt/gntutils.c"
                          line="381" column="1"
                          bodyfile="C:/Users/David/Downloads/pidgin-2.2.0.tar/pidgin-2.2.0/finch/libgnt/gntutils.c"
                          bodystart="381" bodyend="447"/>
            </memberdef>
            <memberdef kind="function" id="gntutils_8c_1acbd43d2575e53bbf75a46b07bbfdce5b" prot="public" static="no"
                       const="no" explicit="no" inline="no" virt="non-virtual">
                <type>gboolean</type>
                <definition>gboolean gnt_util_parse_xhtml_to_textview</definition>
                <argsstring>(const char *string, GntTextView *tv)</argsstring>
                <name>gnt_util_parse_xhtml_to_textview</name>
                <param>
                    <type>const char *</type>
                    <declname>string</declname>
                </param>
                <param>
                    <type>
                        <ref refid="gnttextview_8h_1a0f0993c949fa79d7d2b1d128ca9000f3" kindref="member">GntTextView
                        </ref>
                        *
                    </type>
                    <declname>tv</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                    <para>Parse an XHTML string and add it in a GntTextView with appropriate text flags.</para>
                    <para>
                        <parameterlist kind="param">
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>string</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>The XHTML string</para>
                                </parameterdescription>
                            </parameteritem>
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>tv</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>The GntTextView</para>
                                </parameterdescription>
                            </parameteritem>
                        </parameterlist>
                        <simplesect kind="return">
                            <para>
                                <computeroutput>TRUE</computeroutput>
                                if the string was added to the textview properly,
                                <computeroutput>FALSE</computeroutput>
                                otherwise.
                            </para>
                        </simplesect>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.2.0.tar/pidgin-2.2.0/finch/libgnt/gntutils.c"
                          line="450" column="1"
                          bodyfile="C:/Users/David/Downloads/pidgin-2.2.0.tar/pidgin-2.2.0/finch/libgnt/gntutils.c"
                          bodystart="450" bodyend="472"/>
            </memberdef>
            <memberdef kind="function" id="gntutils_8c_1a1749b9b02d0825db8af0ded5ef030eef" prot="public" static="yes"
                       const="no" explicit="no" inline="no" virt="non-virtual">
                <type>void</type>
                <definition>static void free_trigger_button</definition>
                <argsstring>(TriggerButton *b)</argsstring>
                <name>free_trigger_button</name>
                <param>
                    <type>
                        <ref refid="struct_trigger_button" kindref="compound">TriggerButton</ref>
                        *
                    </type>
                    <declname>b</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.2.0.tar/pidgin-2.2.0/finch/libgnt/gntutils.c"
                          line="481" column="1"
                          bodyfile="C:/Users/David/Downloads/pidgin-2.2.0.tar/pidgin-2.2.0/finch/libgnt/gntutils.c"
                          bodystart="481" bodyend="485"/>
            </memberdef>
            <memberdef kind="function" id="gntutils_8c_1a064427f3f7c132c67f1d5cec8ce4a14c" prot="public" static="yes"
                       const="no" explicit="no" inline="no" virt="non-virtual">
                <type>gboolean</type>
                <definition>static gboolean key_pressed</definition>
                <argsstring>(GntWidget *widget, const char *text, TriggerButton *trig)</argsstring>
                <name>key_pressed</name>
                <param>
                    <type>
                        <ref refid="gntwidget_8h_1a8bad7b03fe24fa49b0b5227a621db767" kindref="member">GntWidget</ref>
                        *
                    </type>
                    <declname>widget</declname>
                </param>
                <param>
                    <type>const char *</type>
                    <declname>text</declname>
                </param>
                <param>
                    <type>
                        <ref refid="struct_trigger_button" kindref="compound">TriggerButton</ref>
                        *
                    </type>
                    <declname>trig</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.2.0.tar/pidgin-2.2.0/finch/libgnt/gntutils.c"
                          line="488" column="1"
                          bodyfile="C:/Users/David/Downloads/pidgin-2.2.0.tar/pidgin-2.2.0/finch/libgnt/gntutils.c"
                          bodystart="488" bodyend="496"/>
            </memberdef>
            <memberdef kind="function" id="gntutils_8c_1ae845c3ce26e9fc38b187b8481da54ca2" prot="public" static="no"
                       const="no" explicit="no" inline="no" virt="non-virtual">
                <type>void</type>
                <definition>void gnt_util_set_trigger_widget</definition>
                <argsstring>(GntWidget *wid, const char *text, GntWidget *button)</argsstring>
                <name>gnt_util_set_trigger_widget</name>
                <param>
                    <type>
                        <ref refid="gntwidget_8h_1a8bad7b03fe24fa49b0b5227a621db767" kindref="member">GntWidget</ref>
                        *
                    </type>
                    <declname>wid</declname>
                </param>
                <param>
                    <type>const char *</type>
                    <declname>text</declname>
                </param>
                <param>
                    <type>
                        <ref refid="gntwidget_8h_1a8bad7b03fe24fa49b0b5227a621db767" kindref="member">GntWidget</ref>
                        *
                    </type>
                    <declname>button</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                    <para>Make some keypress activate a button when some key is pressed with &apos;wid&apos; in focus.
                    </para>
                    <para>
                        <parameterlist kind="param">
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>widget</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>The widget</para>
                                </parameterdescription>
                            </parameteritem>
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>key</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>The key to trigger the button</para>
                                </parameterdescription>
                            </parameteritem>
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>button</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>The button to trigger</para>
                                </parameterdescription>
                            </parameteritem>
                        </parameterlist>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.2.0.tar/pidgin-2.2.0/finch/libgnt/gntutils.c"
                          line="498" column="1"
                          bodyfile="C:/Users/David/Downloads/pidgin-2.2.0.tar/pidgin-2.2.0/finch/libgnt/gntutils.c"
                          bodystart="498" bodyend="505"/>
            </memberdef>
        </sectiondef>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <programlisting>
            <codeline lineno="1"></codeline>
            <codeline lineno="23">
                <highlight class="preprocessor">#include<sp/>&quot;<ref refid="gntbutton_8h" kindref="compound">
                    gntbutton.h</ref>&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="24">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&quot;<ref refid="gntcheckbox_8h" kindref="compound">
                    gntcheckbox.h</ref>&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="25">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&quot;<ref refid="gntcombobox_8h" kindref="compound">
                    gntcombobox.h</ref>&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="26">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&quot;<ref refid="gntentry_8h" kindref="compound">
                    gntentry.h</ref>&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="27">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&quot;<ref refid="gntlabel_8h" kindref="compound">
                    gntlabel.h</ref>&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="28">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&quot;<ref refid="gntline_8h" kindref="compound">
                    gntline.h</ref>&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="29">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&quot;<ref refid="gnttextview_8h" kindref="compound">
                    gnttextview.h</ref>&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="30">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&quot;<ref refid="gnttree_8h" kindref="compound">
                    gnttree.h</ref>&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="31">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&quot;<ref refid="gntutils_8h" kindref="compound">
                    gntutils.h</ref>&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="32">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&quot;<ref refid="gntwindow_8h" kindref="compound">
                    gntwindow.h</ref>&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="33">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="34">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&quot;config.h&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="35">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="36">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&lt;stdarg.h&gt;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="37">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="38">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&lt;string.h&gt;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="39">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="40">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#ifndef<sp/>NO_LIBXML
                </highlight>
            </codeline>
            <codeline lineno="41">
                <highlight class="preprocessor"></highlight>
                <highlight class="preprocessor">#include<sp/>&lt;libxml/parser.h&gt;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="42">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&lt;libxml/tree.h&gt;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="43">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
            </codeline>
            <codeline lineno="44">
                <highlight class="preprocessor"></highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="45">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&quot;config.h&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="46">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="47">
                <highlight class="normal"></highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="gntutils_8c_1ad83a4c9fc7023ffadca1d49c5210ffc7" kindref="member">
                        gnt_util_get_text_bound</ref>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*text,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>*width,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>*height)
                </highlight>
            </codeline>
            <codeline lineno="48">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="49">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*
                    <ref refid="namespacegntrss-ui_1a5fcf9c70fa717a8efd481752dcb8ffa4" kindref="member">s</ref>
                    <sp/>=<sp/>text,<sp/>*<ref refid="namespacetest_1a13ff37efc743b2f76b3af2c5c09070fb"
                                               kindref="member">last</ref>;
                </highlight>
            </codeline>
            <codeline lineno="50">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>count<sp/>=<sp/>1,<sp/>max<sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="51">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>len;
                </highlight>
            </codeline>
            <codeline lineno="52">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="53">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>XXX:<sp/>ew<sp/>...<sp/>everyone<sp/>look<sp/>away<sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="54">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>last<sp/>=
                    <sp/>
                    <ref refid="namespacegntrss-ui_1a5fcf9c70fa717a8efd481752dcb8ffa4" kindref="member">s</ref>;
                </highlight>
            </codeline>
            <codeline lineno="55">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(s)
                </highlight>
            </codeline>
            <codeline lineno="56">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="57">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">while</highlight>
                <highlight class="normal"><sp/>(*s)
                </highlight>
            </codeline>
            <codeline lineno="58">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="59">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(*s<sp/>==
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\n&apos;</highlight>
                <highlight class="normal"><sp/>||<sp/>*s<sp/>==
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\r&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="60">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="61">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>count++;
                </highlight>
            </codeline>
            <codeline lineno="62">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>len<sp/>=
                    <sp/>
                    <ref refid="gntutils_8c_1a8accc80ef45b27fb238d66236f161a8a" kindref="member">
                        gnt_util_onscreen_width</ref>(last,<sp/>s);
                </highlight>
            </codeline>
            <codeline lineno="63">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(max<sp/>&lt;<sp/>len)
                </highlight>
            </codeline>
            <codeline lineno="64">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>max<sp/>=<sp/>len;
                </highlight>
            </codeline>
            <codeline lineno="65">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>last<sp/>=<sp/>s<sp/>+<sp/>1;
                </highlight>
            </codeline>
            <codeline lineno="66">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="67">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>s<sp/>=<sp/>g_utf8_next_char(s);
                </highlight>
            </codeline>
            <codeline lineno="68">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="69">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="70">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>len<sp/>=
                    <sp/>
                    <ref refid="gntutils_8c_1a8accc80ef45b27fb238d66236f161a8a" kindref="member">
                        gnt_util_onscreen_width</ref>(last,<sp/>s);
                </highlight>
            </codeline>
            <codeline lineno="71">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(max<sp/>&lt;<sp/>len)
                </highlight>
            </codeline>
            <codeline lineno="72">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>max<sp/>=<sp/>len;
                </highlight>
            </codeline>
            <codeline lineno="73">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="74">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="75">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(height)
                </highlight>
            </codeline>
            <codeline lineno="76">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*height<sp/>=<sp/>count;
                </highlight>
            </codeline>
            <codeline lineno="77">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(width)
                </highlight>
            </codeline>
            <codeline lineno="78">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*width<sp/>=<sp/>max<sp/>+<sp/>(count<sp/>&gt;<sp/>1);
                </highlight>
            </codeline>
            <codeline lineno="79">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="80">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="81">
                <highlight class="normal"></highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="gntutils_8c_1a8accc80ef45b27fb238d66236f161a8a" kindref="member">
                        gnt_util_onscreen_width</ref>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*start,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*end)
                </highlight>
            </codeline>
            <codeline lineno="82">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="83">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>width<sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="84">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="85">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(end<sp/>==
                    <sp/>
                    <ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)
                </highlight>
            </codeline>
            <codeline lineno="86">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>end<sp/>=<sp/>start<sp/>+<sp/>strlen(start);
                </highlight>
            </codeline>
            <codeline lineno="87">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="88">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">while</highlight>
                <highlight class="normal"><sp/>(start<sp/>&lt;<sp/>end)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="89">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>width<sp/>+=<sp/>g_unichar_iswide(g_utf8_get_char(start))<sp/>?<sp/>2<sp/>:<sp/>1;
                </highlight>
            </codeline>
            <codeline lineno="90">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>start<sp/>=<sp/>g_utf8_next_char(start);
                </highlight>
            </codeline>
            <codeline lineno="91">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="92">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>width;
                </highlight>
            </codeline>
            <codeline lineno="93">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="94">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="95">
                <highlight class="normal"></highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*<ref refid="gntutils_8c_1a35086b64cb7a2b574ab7a7fafecdeed5"
                                                     kindref="member">gnt_util_onscreen_width_to_pointer</ref>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keywordtype">string</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>len,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>*w)
                </highlight>
            </codeline>
            <codeline lineno="96">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="97">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="getopt_8c_1a439227feff9d7f55384e8780cfc2eb82" kindref="member">size</ref>;
                </highlight>
            </codeline>
            <codeline lineno="98">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>width<sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="99">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*str<sp/>=<sp/>string;
                </highlight>
            </codeline>
            <codeline lineno="100">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="101">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(len<sp/>&lt;=<sp/>0)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="102">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>len<sp/>=
                    <sp/>
                    <ref refid="gntutils_8c_1a8accc80ef45b27fb238d66236f161a8a" kindref="member">
                        gnt_util_onscreen_width</ref>(
                </highlight>
                <highlight class="keywordtype">string</highlight>
                <highlight class="normal">,
                    <sp/>
                    <ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);
                </highlight>
            </codeline>
            <codeline lineno="103">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="104">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="105">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">while</highlight>
                <highlight class="normal"><sp/>(width<sp/>&lt;<sp/>len<sp/>&amp;&amp;<sp/>*str)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="106">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>size<sp/>=<sp/>g_unichar_iswide(g_utf8_get_char(str))<sp/>?<sp/>2<sp/>:<sp/>1;
                </highlight>
            </codeline>
            <codeline lineno="107">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(width<sp/>+<sp/>size<sp/>&gt;<sp/>len)
                </highlight>
            </codeline>
            <codeline lineno="108">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">break</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="109">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>str<sp/>=<sp/>g_utf8_next_char(str);
                </highlight>
            </codeline>
            <codeline lineno="110">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>width<sp/>+=
                    <sp/>
                    <ref refid="getopt_8c_1a439227feff9d7f55384e8780cfc2eb82" kindref="member">size</ref>;
                </highlight>
            </codeline>
            <codeline lineno="111">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="112">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(w)
                </highlight>
            </codeline>
            <codeline lineno="113">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*w<sp/>=<sp/>width;
                </highlight>
            </codeline>
            <codeline lineno="114">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>str;
                </highlight>
            </codeline>
            <codeline lineno="115">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="116">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="117">
                <highlight class="normal"></highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*<ref refid="gntutils_8c_1a9a74566ea2b80ce87b911f1ee428329c"
                                                     kindref="member">gnt_util_onscreen_fit_string</ref>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keywordtype">string</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>maxw)
                </highlight>
            </codeline>
            <codeline lineno="118">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="119">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*start,<sp/>*end;
                </highlight>
            </codeline>
            <codeline lineno="120">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>GString<sp/>*str;
                </highlight>
            </codeline>
            <codeline lineno="121">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="122">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(maxw<sp/>&lt;=<sp/>0)
                </highlight>
            </codeline>
            <codeline lineno="123">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>maxw<sp/>=<sp/>getmaxx(stdscr)<sp/>-<sp/>4;
                </highlight>
            </codeline>
            <codeline lineno="124">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="125">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>start<sp/>=<sp/>string;
                </highlight>
            </codeline>
            <codeline lineno="126">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>str<sp/>=<sp/>g_string_new(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4"
                                                         kindref="member">NULL</ref>);
                </highlight>
            </codeline>
            <codeline lineno="127">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="128">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">while</highlight>
                <highlight class="normal"><sp/>(*start)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="129">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>((end<sp/>=<sp/>strchr(start,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\n&apos;</highlight>
                <highlight class="normal">))<sp/>!=
                    <sp/>
                    <ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>
                    <sp/>||
                </highlight>
            </codeline>
            <codeline lineno="130">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>(end<sp/>=<sp/>strchr(start,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\r&apos;</highlight>
                <highlight class="normal">))<sp/>!=
                    <sp/>
                    <ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="131">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(<ref refid="gntutils_8c_1a8accc80ef45b27fb238d66236f161a8a"
                                                     kindref="member">gnt_util_onscreen_width</ref>(start,<sp/>end)<sp/>
                    &gt;<sp/>maxw)
                </highlight>
            </codeline>
            <codeline lineno="132">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>end<sp/>=
                    <sp/>
                    <ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;
                </highlight>
            </codeline>
            <codeline lineno="133">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="134">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(end<sp/>==
                    <sp/>
                    <ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)
                </highlight>
            </codeline>
            <codeline lineno="135">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>end<sp/>=
                    <sp/>
                    <ref refid="gntutils_8c_1a35086b64cb7a2b574ab7a7fafecdeed5" kindref="member">
                        gnt_util_onscreen_width_to_pointer</ref>(start,<sp/>maxw,
                    <sp/>
                    <ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);
                </highlight>
            </codeline>
            <codeline lineno="136">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>str<sp/>=<sp/>g_string_append_len(str,<sp/>start,<sp/>end<sp/>-<sp/>start);
                </highlight>
            </codeline>
            <codeline lineno="137">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(*end)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="138">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>str<sp/>=<sp/>g_string_append_c(str,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\n&apos;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="139">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(*end<sp/>==
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\n&apos;</highlight>
                <highlight class="normal"><sp/>||<sp/>*end<sp/>==
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\r&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="140">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>end++;
                </highlight>
            </codeline>
            <codeline lineno="141">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="142">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>start<sp/>=<sp/>end;
                </highlight>
            </codeline>
            <codeline lineno="143">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="144">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>g_string_free(str,<sp/>FALSE);
                </highlight>
            </codeline>
            <codeline lineno="145">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="146">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="147" refid="structduplicate__fns" refkind="compound">
                <highlight class="normal"></highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="structduplicate__fns" kindref="compound">duplicate_fns</ref>
                </highlight>
            </codeline>
            <codeline lineno="148">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="149">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="gntutils_8h_1a3f3734c8ea24f4c77a4f2774792a548b" kindref="member">GDupFunc</ref>
                    <sp/>
                    <ref refid="structduplicate__fns_1a6ec4680938cc513abc017ab0f94697b0" kindref="member">key_dup</ref>;
                </highlight>
            </codeline>
            <codeline lineno="150">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="gntutils_8h_1a3f3734c8ea24f4c77a4f2774792a548b" kindref="member">GDupFunc</ref>
                    <sp/>
                    <ref refid="structduplicate__fns_1a3ce9d3bd18e9c27ac7dfb51a3cbf1257" kindref="member">
                        value_dup</ref>;
                </highlight>
            </codeline>
            <codeline lineno="151">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>GHashTable<sp/>*<ref refid="structduplicate__fns_1aaf3958805171c966e036b41e1f7d1ae9"
                                              kindref="member">table</ref>;
                </highlight>
            </codeline>
            <codeline lineno="152">
                <highlight class="normal">};</highlight>
            </codeline>
            <codeline lineno="153">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="154">
                <highlight class="normal"></highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="155">
                <highlight class="normal">duplicate_values(gpointer
                    <sp/>
                    <ref refid="namespacetest_1a29eb8dd921f77e19e24a20bcd820c2ed" kindref="member">key</ref>,<sp/>
                    gpointer
                    <sp/>
                    <ref refid="gntwm_8c_1a8378be79f6105367d446b3ac45cae716" kindref="member">value</ref>,<sp/>gpointer
                    <sp/>
                    <ref refid="gntwm_8c_1a10fb496e4431487bd53ab5a192614a0e" kindref="member">data</ref>)
                </highlight>
            </codeline>
            <codeline lineno="156">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="157">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="structduplicate__fns" kindref="compound">duplicate_fns</ref>
                    <sp/>*fns<sp/>=
                    <sp/>
                    <ref refid="gntwm_8c_1a10fb496e4431487bd53ab5a192614a0e" kindref="member">data</ref>;
                </highlight>
            </codeline>
            <codeline lineno="158">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>g_hash_table_insert(fns-&gt;<ref
                        refid="structduplicate__fns_1aaf3958805171c966e036b41e1f7d1ae9" kindref="member">table</ref>,
                    <sp/>fns-&gt;
                    <ref refid="structduplicate__fns_1a6ec4680938cc513abc017ab0f94697b0" kindref="member">key_dup</ref>
                    <sp/>?<sp/>fns-&gt;<ref refid="structduplicate__fns_1a6ec4680938cc513abc017ab0f94697b0"
                                            kindref="member">key_dup</ref>(key)<sp/>:
                    <sp/>
                    <ref refid="namespacetest_1a29eb8dd921f77e19e24a20bcd820c2ed" kindref="member">key</ref>,
                </highlight>
            </codeline>
            <codeline lineno="159">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>fns-&gt;
                    <ref refid="structduplicate__fns_1a3ce9d3bd18e9c27ac7dfb51a3cbf1257" kindref="member">value_dup
                    </ref>
                    <sp/>?<sp/>fns-&gt;<ref refid="structduplicate__fns_1a3ce9d3bd18e9c27ac7dfb51a3cbf1257"
                                            kindref="member">value_dup</ref>(value)<sp/>:
                    <sp/>
                    <ref refid="gntwm_8c_1a8378be79f6105367d446b3ac45cae716" kindref="member">value</ref>);
                </highlight>
            </codeline>
            <codeline lineno="160">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="161">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="162">
                <highlight class="normal">GHashTable<sp/>*<ref refid="gntutils_8c_1a1a59e8b19bfca4c11339aaa672adc256"
                                                               kindref="member">g_hash_table_duplicate</ref>(GHashTable
                    <sp/>*src,<sp/>GHashFunc<sp/>hash,
                </highlight>
            </codeline>
            <codeline lineno="163">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>GEqualFunc<sp/>equal,<sp/>GDestroyNotify<sp/>key_d,<sp/>GDestroyNotify<sp/>value_d,
                </highlight>
            </codeline>
            <codeline lineno="164">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="gntutils_8h_1a3f3734c8ea24f4c77a4f2774792a548b" kindref="member">GDupFunc</ref>
                    <sp/>
                    <ref refid="structduplicate__fns_1a6ec4680938cc513abc017ab0f94697b0" kindref="member">key_dup</ref>,
                    <sp/>
                    <ref refid="gntutils_8h_1a3f3734c8ea24f4c77a4f2774792a548b" kindref="member">GDupFunc</ref>
                    <sp/>
                    <ref refid="structduplicate__fns_1a3ce9d3bd18e9c27ac7dfb51a3cbf1257" kindref="member">
                        value_dup</ref>)
                </highlight>
            </codeline>
            <codeline lineno="165">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="166">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>GHashTable<sp/>*dest<sp/>=<sp/>g_hash_table_new_full(hash,<sp/>equal,<sp/>key_d,<sp/>value_d);
                </highlight>
            </codeline>
            <codeline lineno="167">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="structduplicate__fns" kindref="compound">duplicate_fns</ref>
                    <sp/>fns<sp/>=<sp/>{<ref refid="structduplicate__fns_1a6ec4680938cc513abc017ab0f94697b0"
                                             kindref="member">key_dup</ref>,
                    <sp/>
                    <ref refid="structduplicate__fns_1a3ce9d3bd18e9c27ac7dfb51a3cbf1257" kindref="member">
                        value_dup</ref>,<sp/>dest};
                </highlight>
            </codeline>
            <codeline lineno="168">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>g_hash_table_foreach(src,<sp/>duplicate_values,<sp/>&amp;fns);
                </highlight>
            </codeline>
            <codeline lineno="169">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>dest;
                </highlight>
            </codeline>
            <codeline lineno="170">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="171">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="172">
                <highlight class="normal">gboolean
                    <sp/>
                    <ref refid="gntutils_8c_1aabbf0de8b1c162e032dbd876e7429243" kindref="member">
                        gnt_boolean_handled_accumulator</ref>(GSignalInvocationHint<sp/>*ihint,
                </highlight>
            </codeline>
            <codeline lineno="173">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>GValue
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*return_accu,
                </highlight>
            </codeline>
            <codeline lineno="174">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>GValue
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*handler_return,
                </highlight>
            </codeline>
            <codeline lineno="175">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>gpointer
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>dummy)
                </highlight>
            </codeline>
            <codeline lineno="176">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="177">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>gboolean<sp/>continue_emission;
                </highlight>
            </codeline>
            <codeline lineno="178">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>gboolean<sp/>signal_handled;
                </highlight>
            </codeline>
            <codeline lineno="179">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="180">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>signal_handled<sp/>=<sp/>g_value_get_boolean<sp/>(handler_return);
                </highlight>
            </codeline>
            <codeline lineno="181">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>g_value_set_boolean<sp/>(return_accu,<sp/>signal_handled);
                </highlight>
            </codeline>
            <codeline lineno="182">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>continue_emission<sp/>=<sp/>!signal_handled;
                </highlight>
            </codeline>
            <codeline lineno="183">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="184">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>continue_emission;
                </highlight>
            </codeline>
            <codeline lineno="185">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="186">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="187">
                <highlight class="normal"></highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="188">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>GHashTable<sp/>*hash;
                </highlight>
            </codeline>
            <codeline lineno="189">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="struct___gnt_tree" kindref="compound">GntTree</ref>
                    <sp/>*<ref refid="gntcertmgr_8c_1a02b069dc0867c55ec3886c1cf6223359" kindref="member">tree</ref>;
                </highlight>
            </codeline>
            <codeline lineno="190">
                <highlight class="normal">}
                    <sp/>
                    <ref refid="struct_binding_view" kindref="compound">BindingView</ref>;
                </highlight>
            </codeline>
            <codeline lineno="191">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="192">
                <highlight class="normal"></highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="193">
                <highlight class="normal">add_binding(gpointer<sp/>key,<sp/>gpointer<sp/>value,<sp/>gpointer<sp/>data)
                </highlight>
            </codeline>
            <codeline lineno="194">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="195">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="struct_binding_view" kindref="compound">BindingView</ref>
                    <sp/>*bv<sp/>=
                    <sp/>
                    <ref refid="gntwm_8c_1a10fb496e4431487bd53ab5a192614a0e" kindref="member">data</ref>;
                </highlight>
            </codeline>
            <codeline lineno="196">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="struct___gnt_bindable_action_param" kindref="compound">GntBindableActionParam</ref>
                    <sp/>*act<sp/>=
                    <sp/>
                    <ref refid="gntwm_8c_1a8378be79f6105367d446b3ac45cae716" kindref="member">value</ref>;
                </highlight>
            </codeline>
            <codeline lineno="197">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*
                    <ref refid="gntbindable_8c_1a5ac083a645d964373f022d03df4849c8" kindref="member">name</ref>
                    <sp/>=<sp/>g_hash_table_lookup(bv-&gt;<ref
                            refid="struct_binding_view_1a40759edc131301b7d46180409f470842" kindref="member">hash</ref>,
                    <sp/>act-&gt;<ref refid="struct___gnt_bindable_action_param_1a3f685e0c78788c7222e108f0832c6bd7"
                                      kindref="member">action</ref>);
                </highlight>
            </codeline>
            <codeline lineno="198">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(name<sp/>&amp;&amp;<sp/>*name)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="199">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*k<sp/>=
                    <sp/>
                    <ref refid="gntkeys_8c_1aa70e031cf2eb6cbf10ac3c9bcffc381b" kindref="member">gnt_key_lookup</ref>
                    (key);
                </highlight>
            </codeline>
            <codeline lineno="200">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!k)
                </highlight>
            </codeline>
            <codeline lineno="201">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>k<sp/>=
                    <sp/>
                    <ref refid="namespacetest_1a29eb8dd921f77e19e24a20bcd820c2ed" kindref="member">key</ref>;
                </highlight>
            </codeline>
            <codeline lineno="202">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="gnttree_8c_1a9d5e5166f087b99ca0f39cae0a6a4cad" kindref="member">
                        gnt_tree_add_row_after</ref>(bv-&gt;<ref
                        refid="struct_binding_view_1a8cc2951d457c12f9a55d4081006d1d90" kindref="member">tree</ref>,<sp/>
                    (gpointer)k,
                </highlight>
            </codeline>
            <codeline lineno="203">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="gnttree_8c_1acef12ae8d90290b6620a15826d330b44" kindref="member">
                        gnt_tree_create_row</ref>(bv-&gt;<ref
                        refid="struct_binding_view_1a8cc2951d457c12f9a55d4081006d1d90" kindref="member">tree</ref>,<sp/>
                    k,<sp/>name),
                    <sp/>
                    <ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,
                    <sp/>
                    <ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);
                </highlight>
            </codeline>
            <codeline lineno="204">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="205">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="206">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="207">
                <highlight class="normal"></highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="208">
                <highlight class="normal">add_action(gpointer<sp/>key,<sp/>gpointer<sp/>value,<sp/>gpointer<sp/>data)
                </highlight>
            </codeline>
            <codeline lineno="209">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="210">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="struct_binding_view" kindref="compound">BindingView</ref>
                    <sp/>*bv<sp/>=
                    <sp/>
                    <ref refid="gntwm_8c_1a10fb496e4431487bd53ab5a192614a0e" kindref="member">data</ref>;
                </highlight>
            </codeline>
            <codeline lineno="211">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>g_hash_table_insert(bv-&gt;<ref refid="struct_binding_view_1a40759edc131301b7d46180409f470842"
                                                         kindref="member">hash</ref>,<sp/>value,<sp/>key);
                </highlight>
            </codeline>
            <codeline lineno="212">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="213">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="214">
                <highlight class="normal">
                    <ref refid="struct___gnt_widget" kindref="compound">GntWidget</ref>
                    <sp/>*<ref refid="gntutils_8c_1a879657504a9924156cfae84d1de3afdb" kindref="member">
                    gnt_widget_bindings_view</ref>(
                    <ref refid="struct___gnt_widget" kindref="compound">GntWidget</ref>
                    <sp/>*widget)
                </highlight>
            </codeline>
            <codeline lineno="215">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="216">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="struct___gnt_bindable" kindref="compound">GntBindable</ref>
                    <sp/>*bind<sp/>=
                    <sp/>
                    <ref refid="gntbindable_8h_1a385eb94df73d3d565c9b5e0e43dc5910" kindref="member">GNT_BINDABLE</ref>
                    (widget);
                </highlight>
            </codeline>
            <codeline lineno="217">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="struct___gnt_widget" kindref="compound">GntWidget</ref>
                    <sp/>*
                    <ref refid="gntcertmgr_8c_1a02b069dc0867c55ec3886c1cf6223359" kindref="member">tree</ref>
                    <sp/>=
                    <sp/>
                    <ref refid="gnttree_8c_1a205a33f959c06780881a03e5b5e712ff" kindref="member">
                        gnt_tree_new_with_columns</ref>(2);
                </highlight>
            </codeline>
            <codeline lineno="218">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="struct___gnt_bindable_class" kindref="compound">GntBindableClass</ref>
                    <sp/>*
                    <ref refid="gntbindable_8c_1aa084f6474fb231a7247cc6c5299bad55" kindref="member">klass</ref>
                    <sp/>=
                    <sp/>
                    <ref refid="gntbindable_8h_1ab063c4396dce13a1d35434e14f3766df" kindref="member">
                        GNT_BINDABLE_CLASS</ref>(<ref refid="gntbindable_8h_1ab63a10f1bc92bd6da0f0385ac7d692c5"
                                                      kindref="member">GNT_BINDABLE_GET_CLASS</ref>(bind));
                </highlight>
            </codeline>
            <codeline lineno="219">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>GHashTable<sp/>*hash<sp/>=<sp/>g_hash_table_new(g_direct_hash,<sp/>g_direct_equal);
                </highlight>
            </codeline>
            <codeline lineno="220">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="struct_binding_view" kindref="compound">BindingView</ref>
                    <sp/>bv<sp/>=<sp/>{hash,
                    <sp/>
                    <ref refid="gnttree_8h_1a6156e03cf5926bea202d98c201dacdfd" kindref="member">GNT_TREE</ref>(tree)};
                </highlight>
            </codeline>
            <codeline lineno="221">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="222">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="gnttree_8c_1ab5fa3bfe0a651c909caf80d7f691a7c8" kindref="member">
                        gnt_tree_set_compare_func</ref>(bv.<ref
                        refid="struct_binding_view_1a8cc2951d457c12f9a55d4081006d1d90" kindref="member">tree</ref>,<sp/>
                    (GCompareFunc)g_utf8_collate);
                </highlight>
            </codeline>
            <codeline lineno="223">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>g_hash_table_foreach(klass-&gt;<ref
                        refid="struct___gnt_bindable_class_1acbb393b838dbf38802e42cca30ffed1d" kindref="member">
                    actions</ref>,<sp/>add_action,<sp/>&amp;bv);
                </highlight>
            </codeline>
            <codeline lineno="224">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>g_hash_table_foreach(klass-&gt;<ref
                        refid="struct___gnt_bindable_class_1a5f68bd2cdf1965f1f5bdce4e6aea4b84" kindref="member">
                    bindings</ref>,<sp/>add_binding,<sp/>&amp;bv);
                </highlight>
            </codeline>
            <codeline lineno="225">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(<ref refid="gnttree_8h_1a6156e03cf5926bea202d98c201dacdfd"
                                                     kindref="member">GNT_TREE</ref>(tree)-&gt;list<sp/>==
                    <sp/>
                    <ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="226">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="gntwidget_8c_1a78927c2fe18c25b7feb1f8b4ebd78279" kindref="member">
                        gnt_widget_destroy</ref>(tree);
                </highlight>
            </codeline>
            <codeline lineno="227">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>tree<sp/>=
                    <sp/>
                    <ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;
                </highlight>
            </codeline>
            <codeline lineno="228">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="229">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="gnttree_8c_1ac32f79cbfe065409a602fe6a71a2299a" kindref="member">
                        gnt_tree_adjust_columns</ref>(bv.<ref
                        refid="struct_binding_view_1a8cc2951d457c12f9a55d4081006d1d90" kindref="member">tree</ref>);
                </highlight>
            </codeline>
            <codeline lineno="230">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>g_hash_table_destroy(hash);
                </highlight>
            </codeline>
            <codeline lineno="231">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="232">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="gntcertmgr_8c_1a02b069dc0867c55ec3886c1cf6223359" kindref="member">tree</ref>;
                </highlight>
            </codeline>
            <codeline lineno="233">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="234">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="235">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#ifndef<sp/>NO_LIBXML
                </highlight>
            </codeline>
            <codeline lineno="236">
                <highlight class="preprocessor"></highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="struct___gnt_widget" kindref="compound">GntWidget</ref>
                    <sp/>*
                </highlight>
            </codeline>
            <codeline lineno="237">
                <highlight class="normal">gnt_widget_from_xmlnode(xmlNode<sp/>*node,
                    <sp/>
                    <ref refid="struct___gnt_widget" kindref="compound">GntWidget</ref>
                    <sp/>**data[],
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>max)
                </highlight>
            </codeline>
            <codeline lineno="238">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="239">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="struct___gnt_widget" kindref="compound">GntWidget</ref>
                    <sp/>*widget<sp/>=
                    <sp/>
                    <ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;
                </highlight>
            </codeline>
            <codeline lineno="240">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*<ref refid="gntbindable_8c_1a5ac083a645d964373f022d03df4849c8"
                                                     kindref="member">name</ref>;
                </highlight>
            </codeline>
            <codeline lineno="241">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*id,<sp/>*prop,<sp/>*content;
                </highlight>
            </codeline>
            <codeline lineno="242">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>val;
                </highlight>
            </codeline>
            <codeline lineno="243">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="244">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(node<sp/>==
                    <sp/>
                    <ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>
                    <sp/>||<sp/>node-&gt;name<sp/>==
                    <sp/>
                    <ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>
                    <sp/>||<sp/>node-&gt;type<sp/>!=<sp/>XML_ELEMENT_NODE)
                </highlight>
            </codeline>
            <codeline lineno="245">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;
                </highlight>
            </codeline>
            <codeline lineno="246">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="247">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>name<sp/>=<sp/>(
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*)node-&gt;name;</highlight>
            </codeline>
            <codeline lineno="248">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>content<sp/>=<sp/>(
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*)xmlNodeGetContent(node);</highlight>
            </codeline>
            <codeline lineno="249">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(strcmp(name<sp/>+<sp/>1,
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;window&quot;</highlight>
                <highlight class="normal">)<sp/>==<sp/>0<sp/>||<sp/>strcmp(name<sp/>+<sp/>1,
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;box&quot;</highlight>
                <highlight class="normal">)<sp/>==<sp/>0)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="250">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>xmlNode<sp/>*ch;
                </highlight>
            </codeline>
            <codeline lineno="251">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*title;
                </highlight>
            </codeline>
            <codeline lineno="252">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>gboolean<sp/>vert<sp/>=<sp/>(*name<sp/>==
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;v&apos;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="253">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="254">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(name[1]<sp/>==
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;w&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="255">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>widget<sp/>=
                    <sp/>
                    <ref refid="gntwindow_8c_1aa58b576a0fb643b9694e22fa8f21f93b" kindref="member">
                        gnt_window_box_new</ref>(FALSE,<sp/>vert);
                </highlight>
            </codeline>
            <codeline lineno="256">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="257">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>widget<sp/>=
                    <sp/>
                    <ref refid="gntbox_8c_1ac304059b8993d55d11556c359497017c" kindref="member">gnt_box_new</ref>(FALSE,
                    <sp/>vert);
                </highlight>
            </codeline>
            <codeline lineno="258">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="259">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>title<sp/>=<sp/>(
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*)xmlGetProp(node,<sp/>(xmlChar*)
                </highlight>
                <highlight class="stringliteral">&quot;title&quot;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="260">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(title)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="261">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="gntbox_8c_1a44429c371d6ea90f89d63a57cffabc66" kindref="member">gnt_box_set_title</ref>(
                    <ref refid="gntbox_8h_1a89406b8f9518c0efb064d13b5d946fec" kindref="member">GNT_BOX</ref>(widget),
                    <sp/>title);
                </highlight>
            </codeline>
            <codeline lineno="262">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>xmlFree(title);
                </highlight>
            </codeline>
            <codeline lineno="263">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="264">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="265">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>prop<sp/>=<sp/>(
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*)xmlGetProp(node,<sp/>(xmlChar*)
                </highlight>
                <highlight class="stringliteral">&quot;fill&quot;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="266">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(prop)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="267">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(sscanf(prop,
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;%d&quot;</highlight>
                <highlight class="normal">,<sp/>&amp;val)<sp/>==<sp/>1)
                </highlight>
            </codeline>
            <codeline lineno="268">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="gntbox_8c_1ade48185acb40af09200649e416bb8ce1" kindref="member">gnt_box_set_fill</ref>(
                    <ref refid="gntbox_8h_1a89406b8f9518c0efb064d13b5d946fec" kindref="member">GNT_BOX</ref>(widget),
                    <sp/>!!val);
                </highlight>
            </codeline>
            <codeline lineno="269">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>xmlFree(prop);
                </highlight>
            </codeline>
            <codeline lineno="270">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="271">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="272">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>prop<sp/>=<sp/>(
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*)xmlGetProp(node,<sp/>(xmlChar*)
                </highlight>
                <highlight class="stringliteral">&quot;align&quot;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="273">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(prop)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="274">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(sscanf(prop,
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;%d&quot;</highlight>
                <highlight class="normal">,<sp/>&amp;val)<sp/>==<sp/>1)
                </highlight>
            </codeline>
            <codeline lineno="275">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="gntbox_8c_1afb6c544e642e187a84cd7c2e1b664ab0" kindref="member">
                        gnt_box_set_alignment</ref>(<ref refid="gntbox_8h_1a89406b8f9518c0efb064d13b5d946fec"
                                                         kindref="member">GNT_BOX</ref>(widget),<sp/>val);
                </highlight>
            </codeline>
            <codeline lineno="276">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>xmlFree(prop);
                </highlight>
            </codeline>
            <codeline lineno="277">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="278">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="279">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>prop<sp/>=<sp/>(
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*)xmlGetProp(node,<sp/>(xmlChar*)
                </highlight>
                <highlight class="stringliteral">&quot;pad&quot;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="280">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(prop)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="281">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(sscanf(prop,
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;%d&quot;</highlight>
                <highlight class="normal">,<sp/>&amp;val)<sp/>==<sp/>1)
                </highlight>
            </codeline>
            <codeline lineno="282">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="gntbox_8c_1a3b7044e63e2ae35e7c8efaf5a1f8efdc" kindref="member">gnt_box_set_pad</ref>(
                    <ref refid="gntbox_8h_1a89406b8f9518c0efb064d13b5d946fec" kindref="member">GNT_BOX</ref>(widget),
                    <sp/>val);
                </highlight>
            </codeline>
            <codeline lineno="283">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>xmlFree(prop);
                </highlight>
            </codeline>
            <codeline lineno="284">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="285">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="286">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(ch<sp/>=<sp/>node-&gt;children;<sp/>ch;<sp/>ch=ch-&gt;next)
                </highlight>
            </codeline>
            <codeline lineno="287">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="gntbox_8c_1addd5ae4c01ddef9e988beea5b6eb41db" kindref="member">gnt_box_add_widget</ref>(
                    <ref refid="gntbox_8h_1a89406b8f9518c0efb064d13b5d946fec" kindref="member">GNT_BOX</ref>(widget),
                    <sp/>gnt_widget_from_xmlnode(ch,<sp/>data,<sp/>max));
                </highlight>
            </codeline>
            <codeline lineno="288">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(strcmp(name,
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;button&quot;</highlight>
                <highlight class="normal">)<sp/>==<sp/>0)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="289">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>widget<sp/>=
                    <sp/>
                    <ref refid="gntbutton_8c_1aa28a2afc35e0a72e4565f7424a52713b" kindref="member">gnt_button_new</ref>
                    (content);
                </highlight>
            </codeline>
            <codeline lineno="290">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(strcmp(name,
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;label&quot;</highlight>
                <highlight class="normal">)<sp/>==<sp/>0)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="291">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>widget<sp/>=
                    <sp/>
                    <ref refid="gntlabel_8c_1a41ae500efcc7c1185c68177097bf7af4" kindref="member">gnt_label_new</ref>
                    (content);
                </highlight>
            </codeline>
            <codeline lineno="292">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(strcmp(name,
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;entry&quot;</highlight>
                <highlight class="normal">)<sp/>==<sp/>0)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="293">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>widget<sp/>=
                    <sp/>
                    <ref refid="gntentry_8c_1a21b7e87e8de08e042539b632b39b5fed" kindref="member">gnt_entry_new</ref>
                    (content);
                </highlight>
            </codeline>
            <codeline lineno="294">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(strcmp(name,
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;combobox&quot;</highlight>
                <highlight class="normal">)<sp/>==<sp/>0)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="295">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>widget<sp/>=
                    <sp/>
                    <ref refid="gntcombobox_8c_1a91db353f9a6cfcd0d312bbe88991e6f1" kindref="member">
                        gnt_combo_box_new</ref>();
                </highlight>
            </codeline>
            <codeline lineno="296">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(strcmp(name,
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;checkbox&quot;</highlight>
                <highlight class="normal">)<sp/>==<sp/>0)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="297">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>widget<sp/>=
                    <sp/>
                    <ref refid="gntcheckbox_8c_1ae04b63ddc8f367b865f0dcbd884a5db3" kindref="member">
                        gnt_check_box_new</ref>(content);
                </highlight>
            </codeline>
            <codeline lineno="298">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(strcmp(name,
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;tree&quot;</highlight>
                <highlight class="normal">)<sp/>==<sp/>0)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="299">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>widget<sp/>=
                    <sp/>
                    <ref refid="gnttree_8c_1a9970244840eebd4cf70c0fbd17e998af" kindref="member">gnt_tree_new</ref>();
                </highlight>
            </codeline>
            <codeline lineno="300">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(strcmp(name,
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;textview&quot;</highlight>
                <highlight class="normal">)<sp/>==<sp/>0)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="301">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>widget<sp/>=
                    <sp/>
                    <ref refid="gnttextview_8c_1a3bdd397329f307fbdc41e776772bd316" kindref="member">
                        gnt_text_view_new</ref>();
                </highlight>
            </codeline>
            <codeline lineno="302">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(strcmp(name<sp/>+<sp/>1,
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;line&quot;</highlight>
                <highlight class="normal">)<sp/>==<sp/>0)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="303">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>widget<sp/>=
                    <sp/>
                    <ref refid="gntline_8c_1a9c5f84737611dbfd8325e8dc00f96133" kindref="member">gnt_line_new</ref>(*name
                    <sp/>==
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;v&apos;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="304">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="305">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="306">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>xmlFree(content);
                </highlight>
            </codeline>
            <codeline lineno="307">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="308">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(widget<sp/>==
                    <sp/>
                    <ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="309">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>g_printerr(
                </highlight>
                <highlight class="stringliteral">&quot;Invalid<sp/>widget<sp/>name<sp/>%s\n&quot;
                </highlight>
                <highlight class="normal">,<sp/>name);
                </highlight>
            </codeline>
            <codeline lineno="310">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;
                </highlight>
            </codeline>
            <codeline lineno="311">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="312">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="313">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">id</highlight>
                <highlight class="normal"><sp/>=<sp/>(
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*)xmlGetProp(node,<sp/>(xmlChar*)
                </highlight>
                <highlight class="stringliteral">&quot;id&quot;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="314">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keywordtype">id</highlight>
                <highlight class="normal">)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="315">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>i;
                </highlight>
            </codeline>
            <codeline lineno="316">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(sscanf(
                </highlight>
                <highlight class="keywordtype">id</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;%d&quot;</highlight>
                <highlight class="normal">,<sp/>&amp;i)<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>i<sp/>&gt;=<sp/>0<sp/>&amp;&amp;
                    <sp/>i<sp/>&lt;<sp/>max)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="317">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*data[i]<sp/>=<sp/>widget;
                </highlight>
            </codeline>
            <codeline lineno="318">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>xmlFree(
                </highlight>
                <highlight class="keywordtype">id</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="319">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="320">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="321">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="322">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>prop<sp/>=<sp/>(
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*)xmlGetProp(node,<sp/>(xmlChar*)
                </highlight>
                <highlight class="stringliteral">&quot;border&quot;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="323">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(prop)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="324">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>val;
                </highlight>
            </codeline>
            <codeline lineno="325">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(sscanf(prop,
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;%d&quot;</highlight>
                <highlight class="normal">,<sp/>&amp;val)<sp/>==<sp/>1)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="326">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(val)
                </highlight>
            </codeline>
            <codeline lineno="327">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="gntwidget_8h_1ad937f43c2d5d70292e743dfcde05e8a9" kindref="member">
                        GNT_WIDGET_UNSET_FLAGS</ref>(widget,
                    <sp/>
                    <ref refid="gntwidget_8h_1adf5a237b339fb53cca180af6d7bcff18a8e7de21c4c04abced0009fc58414f00f"
                         kindref="member">GNT_WIDGET_NO_BORDER</ref>);
                </highlight>
            </codeline>
            <codeline lineno="328">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="329">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="gntwidget_8h_1a5f05379dd2b5934fcd802ba477b6d9a5" kindref="member">
                        GNT_WIDGET_SET_FLAGS</ref>(widget,
                    <sp/>
                    <ref refid="gntwidget_8h_1adf5a237b339fb53cca180af6d7bcff18a8e7de21c4c04abced0009fc58414f00f"
                         kindref="member">GNT_WIDGET_NO_BORDER</ref>);
                </highlight>
            </codeline>
            <codeline lineno="330">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="331">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>xmlFree(prop);
                </highlight>
            </codeline>
            <codeline lineno="332">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="333">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="334">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>prop<sp/>=<sp/>(
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*)xmlGetProp(node,<sp/>(xmlChar*)
                </highlight>
                <highlight class="stringliteral">&quot;shadow&quot;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="335">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(prop)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="336">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>val;
                </highlight>
            </codeline>
            <codeline lineno="337">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(sscanf(prop,
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;%d&quot;</highlight>
                <highlight class="normal">,<sp/>&amp;val)<sp/>==<sp/>1)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="338">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(val)
                </highlight>
            </codeline>
            <codeline lineno="339">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="gntwidget_8h_1ad937f43c2d5d70292e743dfcde05e8a9" kindref="member">
                        GNT_WIDGET_UNSET_FLAGS</ref>(widget,
                    <sp/>
                    <ref refid="gntwidget_8h_1adf5a237b339fb53cca180af6d7bcff18a8e7de21c4c04abced0009fc58414f00f"
                         kindref="member">GNT_WIDGET_NO_BORDER</ref>);
                </highlight>
            </codeline>
            <codeline lineno="340">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="341">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="gntwidget_8h_1a5f05379dd2b5934fcd802ba477b6d9a5" kindref="member">
                        GNT_WIDGET_SET_FLAGS</ref>(widget,
                    <sp/>
                    <ref refid="gntwidget_8h_1adf5a237b339fb53cca180af6d7bcff18a8e7de21c4c04abced0009fc58414f00f"
                         kindref="member">GNT_WIDGET_NO_BORDER</ref>);
                </highlight>
            </codeline>
            <codeline lineno="342">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="343">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>xmlFree(prop);
                </highlight>
            </codeline>
            <codeline lineno="344">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="345">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="346">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>widget;
                </highlight>
            </codeline>
            <codeline lineno="347">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="348">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
            </codeline>
            <codeline lineno="349">
                <highlight class="preprocessor"></highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="350">
                <highlight class="normal"></highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="gntutils_8c_1a8d1bd6b9c45c17bd88f49add43a9b284" kindref="member">
                        gnt_util_parse_widgets</ref>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keywordtype">string</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>num,<sp/>...)
                </highlight>
            </codeline>
            <codeline lineno="351">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="352">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#ifndef<sp/>NO_LIBXML
                </highlight>
            </codeline>
            <codeline lineno="353">
                <highlight class="preprocessor"></highlight>
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>xmlParserCtxtPtr<sp/>ctxt;
                </highlight>
            </codeline>
            <codeline lineno="354">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>xmlDocPtr<sp/>doc;
                </highlight>
            </codeline>
            <codeline lineno="355">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>xmlNodePtr<sp/>node;
                </highlight>
            </codeline>
            <codeline lineno="356">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>va_list<sp/>list;
                </highlight>
            </codeline>
            <codeline lineno="357">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="struct___gnt_widget" kindref="compound">GntWidget</ref>
                    <sp/>***<ref refid="gntwm_8c_1a10fb496e4431487bd53ab5a192614a0e" kindref="member">data</ref>;
                </highlight>
            </codeline>
            <codeline lineno="358">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>id;
                </highlight>
            </codeline>
            <codeline lineno="359">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="360">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ctxt<sp/>=<sp/>xmlNewParserCtxt();
                </highlight>
            </codeline>
            <codeline lineno="361">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>doc<sp/>=<sp/>xmlCtxtReadDoc(ctxt,<sp/>(xmlChar*)
                </highlight>
                <highlight class="keywordtype">string</highlight>
                <highlight class="normal">,
                    <sp/>
                    <ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,
                    <sp/>
                    <ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>
                    XML_PARSE_NOBLANKS);
                </highlight>
            </codeline>
            <codeline lineno="362">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="363">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>data<sp/>=<sp/>g_new0(
                    <ref refid="struct___gnt_widget" kindref="compound">GntWidget</ref>
                    <sp/>**,<sp/>num);
                </highlight>
            </codeline>
            <codeline lineno="364">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="365">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>va_start(list,<sp/>num);
                </highlight>
            </codeline>
            <codeline lineno="366">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keywordtype">id</highlight>
                <highlight class="normal"><sp/>=<sp/>0;
                    <sp/>
                </highlight>
                <highlight class="keywordtype">id</highlight>
                <highlight class="normal"><sp/>&lt;<sp/>num;
                    <sp/>
                </highlight>
                <highlight class="keywordtype">id</highlight>
                <highlight class="normal">++)</highlight>
            </codeline>
            <codeline lineno="367">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>data[
                </highlight>
                <highlight class="keywordtype">id</highlight>
                <highlight class="normal">]<sp/>=<sp/>va_arg(list,<sp/>gpointer);
                </highlight>
            </codeline>
            <codeline lineno="368">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="369">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>node<sp/>=<sp/>xmlDocGetRootElement(doc);
                </highlight>
            </codeline>
            <codeline lineno="370">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>gnt_widget_from_xmlnode(node,<sp/>data,<sp/>num);
                </highlight>
            </codeline>
            <codeline lineno="371">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="372">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>xmlFreeDoc(doc);
                </highlight>
            </codeline>
            <codeline lineno="373">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>xmlCleanupParser();
                </highlight>
            </codeline>
            <codeline lineno="374">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>va_end(list);
                </highlight>
            </codeline>
            <codeline lineno="375">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>g_free(data);
                </highlight>
            </codeline>
            <codeline lineno="376">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
            </codeline>
            <codeline lineno="377">
                <highlight class="preprocessor"></highlight>
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="378">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="379">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#ifndef<sp/>NO_LIBXML
                </highlight>
            </codeline>
            <codeline lineno="380">
                <highlight class="preprocessor"></highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="381">
                <highlight class="normal">util_parse_html_to_tv(xmlNode<sp/>*node,
                    <sp/>
                    <ref refid="struct___gnt_text_view" kindref="compound">GntTextView</ref>
                    <sp/>*<ref refid="gnttextview_8c_1a221a2db6d242cb297dde82bb9cca9858" kindref="member">tv</ref>,
                    <sp/>
                    <ref refid="gnttextview_8h_1a271a981817202e72d3566da4d94c9ddf" kindref="member">GntTextFormatFlags
                    </ref>
                    <sp/>flag)
                </highlight>
            </codeline>
            <codeline lineno="382">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="383">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*<ref refid="gntbindable_8c_1a5ac083a645d964373f022d03df4849c8"
                                                     kindref="member">name</ref>;
                </highlight>
            </codeline>
            <codeline lineno="384">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*content;
                </highlight>
            </codeline>
            <codeline lineno="385">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>xmlNode<sp/>*ch;
                </highlight>
            </codeline>
            <codeline lineno="386">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>gboolean<sp/>processed<sp/>=<sp/>FALSE;
                </highlight>
            </codeline>
            <codeline lineno="387">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*url<sp/>=
                    <sp/>
                    <ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;
                </highlight>
            </codeline>
            <codeline lineno="388">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>gboolean<sp/>insert_nl_s<sp/>=<sp/>FALSE,<sp/>insert_nl_e<sp/>=<sp/>FALSE;
                </highlight>
            </codeline>
            <codeline lineno="389">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="390">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(node<sp/>==
                    <sp/>
                    <ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>
                    <sp/>||<sp/>node-&gt;name<sp/>==
                    <sp/>
                    <ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>
                    <sp/>||<sp/>node-&gt;type<sp/>!=<sp/>XML_ELEMENT_NODE)
                </highlight>
            </codeline>
            <codeline lineno="391">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="392">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="393">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>name<sp/>=<sp/>(
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*)node-&gt;name;</highlight>
            </codeline>
            <codeline lineno="394">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="getopt_8c_1ae4f12ebd7baef57d8da4c43547b89a87" kindref="member">if</ref>
                    <sp/>(g_ascii_strcasecmp(name,
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;b&quot;</highlight>
                <highlight class="normal">)<sp/>==<sp/>0<sp/>||
                </highlight>
            </codeline>
            <codeline lineno="395">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>g_ascii_strcasecmp(name,
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;strong&quot;</highlight>
                <highlight class="normal">)<sp/>==<sp/>0<sp/>||
                </highlight>
            </codeline>
            <codeline lineno="396">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>g_ascii_strcasecmp(name,
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;i&quot;</highlight>
                <highlight class="normal">)<sp/>==<sp/>0<sp/>||
                </highlight>
            </codeline>
            <codeline lineno="397">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>g_ascii_strcasecmp(name,
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;blockquote&quot;</highlight>
                <highlight class="normal">)<sp/>==<sp/>0)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="398">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>flag<sp/>|=
                    <sp/>
                    <ref refid="gnttextview_8h_1a271a981817202e72d3566da4d94c9ddfa44fb1f1c685640d25a63350923fd0359"
                         kindref="member">GNT_TEXT_FLAG_BOLD</ref>;
                </highlight>
            </codeline>
            <codeline lineno="399">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(g_ascii_strcasecmp(name,
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;u&quot;</highlight>
                <highlight class="normal">)<sp/>==<sp/>0)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="400">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>flag<sp/>|=
                    <sp/>
                    <ref refid="gnttextview_8h_1a271a981817202e72d3566da4d94c9ddfa417fb816e5064925152e3a8c4f1699c8"
                         kindref="member">GNT_TEXT_FLAG_UNDERLINE</ref>;
                </highlight>
            </codeline>
            <codeline lineno="401">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(g_ascii_strcasecmp(name,
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;br&quot;</highlight>
                <highlight class="normal">)<sp/>==<sp/>0)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="402">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>insert_nl_e<sp/>=<sp/>TRUE;
                </highlight>
            </codeline>
            <codeline lineno="403">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(g_ascii_strcasecmp(name,
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;a&quot;</highlight>
                <highlight class="normal">)<sp/>==<sp/>0)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="404">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>flag<sp/>|=
                    <sp/>
                    <ref refid="gnttextview_8h_1a271a981817202e72d3566da4d94c9ddfa417fb816e5064925152e3a8c4f1699c8"
                         kindref="member">GNT_TEXT_FLAG_UNDERLINE</ref>;
                </highlight>
            </codeline>
            <codeline lineno="405">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>url<sp/>=<sp/>(
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*)xmlGetProp(node,<sp/>(xmlChar*)
                </highlight>
                <highlight class="stringliteral">&quot;href&quot;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="406">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(g_ascii_strcasecmp(name,
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;h1&quot;</highlight>
                <highlight class="normal">)<sp/>==<sp/>0<sp/>||
                </highlight>
            </codeline>
            <codeline lineno="407">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>g_ascii_strcasecmp(name,
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;h2&quot;</highlight>
                <highlight class="normal">)<sp/>==<sp/>0<sp/>||
                </highlight>
            </codeline>
            <codeline lineno="408">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>g_ascii_strcasecmp(name,
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;h3&quot;</highlight>
                <highlight class="normal">)<sp/>==<sp/>0<sp/>||
                </highlight>
            </codeline>
            <codeline lineno="409">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>g_ascii_strcasecmp(name,
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;h4&quot;</highlight>
                <highlight class="normal">)<sp/>==<sp/>0<sp/>||
                </highlight>
            </codeline>
            <codeline lineno="410">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>g_ascii_strcasecmp(name,
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;h5&quot;</highlight>
                <highlight class="normal">)<sp/>==<sp/>0<sp/>||
                </highlight>
            </codeline>
            <codeline lineno="411">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>g_ascii_strcasecmp(name,
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;h6&quot;</highlight>
                <highlight class="normal">)<sp/>==<sp/>0)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="412">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>insert_nl_s<sp/>=<sp/>TRUE;
                </highlight>
            </codeline>
            <codeline lineno="413">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>insert_nl_e<sp/>=<sp/>TRUE;
                </highlight>
            </codeline>
            <codeline lineno="414">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(g_ascii_strcasecmp(name,
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;title&quot;</highlight>
                <highlight class="normal">)<sp/>==<sp/>0)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="415">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>insert_nl_s<sp/>=<sp/>TRUE;
                </highlight>
            </codeline>
            <codeline lineno="416">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>insert_nl_e<sp/>=<sp/>TRUE;
                </highlight>
            </codeline>
            <codeline lineno="417">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>flag<sp/>|=
                    <sp/>
                    <ref refid="gnttextview_8h_1a271a981817202e72d3566da4d94c9ddfa44fb1f1c685640d25a63350923fd0359"
                         kindref="member">GNT_TEXT_FLAG_BOLD
                    </ref>
                    <sp/>|
                    <sp/>
                    <ref refid="gnttextview_8h_1a271a981817202e72d3566da4d94c9ddfa417fb816e5064925152e3a8c4f1699c8"
                         kindref="member">GNT_TEXT_FLAG_UNDERLINE</ref>;
                </highlight>
            </codeline>
            <codeline lineno="418">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"><sp/>{
                </highlight>
            </codeline>
            <codeline lineno="419">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>XXX:<sp/>Process<sp/>other<sp/>possible<sp/>tags<sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="420">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="421">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="422">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(insert_nl_s)
                </highlight>
            </codeline>
            <codeline lineno="423">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="gnttextview_8c_1a491ccc844a5ec91e80108ecb40b105e7" kindref="member">
                        gnt_text_view_append_text_with_flags</ref>(tv,
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;\n&quot;</highlight>
                <highlight class="normal">,<sp/>flag);
                </highlight>
            </codeline>
            <codeline lineno="424">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="425">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(ch<sp/>=<sp/>node-&gt;children;<sp/>ch;<sp/>ch<sp/>=<sp/>ch-&gt;next)
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="426">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(ch-&gt;type<sp/>==<sp/>XML_ELEMENT_NODE)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="427">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>processed<sp/>=<sp/>TRUE;
                </highlight>
            </codeline>
            <codeline lineno="428">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>util_parse_html_to_tv(ch,<sp/>tv,<sp/>flag);
                </highlight>
            </codeline>
            <codeline lineno="429">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="430">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="431">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="432">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!processed)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="433">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>content<sp/>=<sp/>(
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*)xmlNodeGetContent(node);</highlight>
            </codeline>
            <codeline lineno="434">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="gnttextview_8c_1a491ccc844a5ec91e80108ecb40b105e7" kindref="member">
                        gnt_text_view_append_text_with_flags</ref>(tv,<sp/>content,<sp/>flag);
                </highlight>
            </codeline>
            <codeline lineno="435">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>xmlFree(content);
                </highlight>
            </codeline>
            <codeline lineno="436">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="437">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="438">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(url)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="439">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*href<sp/>=<sp/>g_strdup_printf(
                </highlight>
                <highlight class="stringliteral">&quot;<sp/>(%s)&quot;
                </highlight>
                <highlight class="normal">,<sp/>url);
                </highlight>
            </codeline>
            <codeline lineno="440">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="gnttextview_8c_1a491ccc844a5ec91e80108ecb40b105e7" kindref="member">
                        gnt_text_view_append_text_with_flags</ref>(tv,<sp/>href,<sp/>flag);
                </highlight>
            </codeline>
            <codeline lineno="441">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>g_free(href);
                </highlight>
            </codeline>
            <codeline lineno="442">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>xmlFree(url);
                </highlight>
            </codeline>
            <codeline lineno="443">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="444">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="445">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(insert_nl_e)
                </highlight>
            </codeline>
            <codeline lineno="446">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="gnttextview_8c_1a491ccc844a5ec91e80108ecb40b105e7" kindref="member">
                        gnt_text_view_append_text_with_flags</ref>(tv,
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;\n&quot;</highlight>
                <highlight class="normal">,<sp/>flag);
                </highlight>
            </codeline>
            <codeline lineno="447">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="448">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
            </codeline>
            <codeline lineno="449">
                <highlight class="preprocessor"></highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="450">
                <highlight class="normal">gboolean
                    <sp/>
                    <ref refid="gntutils_8c_1acbd43d2575e53bbf75a46b07bbfdce5b" kindref="member">
                        gnt_util_parse_xhtml_to_textview</ref>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keywordtype">string</highlight>
                <highlight class="normal">,
                    <sp/>
                    <ref refid="struct___gnt_text_view" kindref="compound">GntTextView</ref>
                    <sp/>*tv)
                </highlight>
            </codeline>
            <codeline lineno="451">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="452">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#ifdef<sp/>NO_LIBXML
                </highlight>
            </codeline>
            <codeline lineno="453">
                <highlight class="preprocessor"></highlight>
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>FALSE;
                </highlight>
            </codeline>
            <codeline lineno="454">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#else</highlight>
            </codeline>
            <codeline lineno="455">
                <highlight class="preprocessor"></highlight>
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>xmlParserCtxtPtr<sp/>ctxt;
                </highlight>
            </codeline>
            <codeline lineno="456">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>xmlDocPtr<sp/>doc;
                </highlight>
            </codeline>
            <codeline lineno="457">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>xmlNodePtr<sp/>node;
                </highlight>
            </codeline>
            <codeline lineno="458">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="gnttextview_8h_1a271a981817202e72d3566da4d94c9ddf" kindref="member">GntTextFormatFlags
                    </ref>
                    <sp/>flag<sp/>=
                    <sp/>
                    <ref refid="gnttextview_8h_1a271a981817202e72d3566da4d94c9ddfa44ca22374b4f5f6078f171aeb5f2e7b1"
                         kindref="member">GNT_TEXT_FLAG_NORMAL</ref>;
                </highlight>
            </codeline>
            <codeline lineno="459">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>gboolean<sp/>ret<sp/>=<sp/>FALSE;
                </highlight>
            </codeline>
            <codeline lineno="460">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="461">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ctxt<sp/>=<sp/>xmlNewParserCtxt();
                </highlight>
            </codeline>
            <codeline lineno="462">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>doc<sp/>=<sp/>xmlCtxtReadDoc(ctxt,<sp/>(xmlChar*)
                </highlight>
                <highlight class="keywordtype">string</highlight>
                <highlight class="normal">,
                    <sp/>
                    <ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,
                    <sp/>
                    <ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>
                    XML_PARSE_NOBLANKS<sp/>|<sp/>XML_PARSE_RECOVER);
                </highlight>
            </codeline>
            <codeline lineno="463">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(doc)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="464">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>node<sp/>=<sp/>xmlDocGetRootElement(doc);
                </highlight>
            </codeline>
            <codeline lineno="465">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>util_parse_html_to_tv(node,<sp/>tv,<sp/>flag);
                </highlight>
            </codeline>
            <codeline lineno="466">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>xmlFreeDoc(doc);
                </highlight>
            </codeline>
            <codeline lineno="467">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ret<sp/>=<sp/>TRUE;
                </highlight>
            </codeline>
            <codeline lineno="468">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="469">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>xmlCleanupParser();
                </highlight>
            </codeline>
            <codeline lineno="470">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>ret;
                </highlight>
            </codeline>
            <codeline lineno="471">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
            </codeline>
            <codeline lineno="472">
                <highlight class="preprocessor"></highlight>
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="473">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="474">
                <highlight class="normal"></highlight>
                <highlight class="comment">/*<sp/>Setup<sp/>trigger<sp/>widget<sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="475" refid="struct_trigger_button" refkind="compound">
                <highlight class="normal"></highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="476">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*text;
                </highlight>
            </codeline>
            <codeline lineno="477">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="struct___gnt_widget" kindref="compound">GntWidget</ref>
                    <sp/>*<ref refid="namespacetest_1a6a35dc97cc575e3e1f108d7a19e8be11" kindref="member">button</ref>;
                </highlight>
            </codeline>
            <codeline lineno="478">
                <highlight class="normal">}
                    <sp/>
                    <ref refid="struct_trigger_button" kindref="compound">TriggerButton</ref>;
                </highlight>
            </codeline>
            <codeline lineno="479">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="480">
                <highlight class="normal"></highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="481">
                <highlight class="normal">free_trigger_button(
                    <ref refid="struct_trigger_button" kindref="compound">TriggerButton</ref>
                    <sp/>*<ref refid="gntcolors_8c_1a14c92240a8c7badaaa4e18952e560053" kindref="member">b</ref>)
                </highlight>
            </codeline>
            <codeline lineno="482">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="483">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>g_free(b-&gt;<ref refid="struct_trigger_button_1a5633b1433389cec21ade3811bbe9ca5b"
                                           kindref="member">text</ref>);
                </highlight>
            </codeline>
            <codeline lineno="484">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>g_free(b);
                </highlight>
            </codeline>
            <codeline lineno="485">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="486">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="487">
                <highlight class="normal"></highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal"><sp/>gboolean
                </highlight>
            </codeline>
            <codeline lineno="488">
                <highlight class="normal">key_pressed(
                    <ref refid="struct___gnt_widget" kindref="compound">GntWidget</ref>
                    <sp/>*widget,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*text,
                    <sp/>
                    <ref refid="struct_trigger_button" kindref="compound">TriggerButton</ref>
                    <sp/>*trig)
                </highlight>
            </codeline>
            <codeline lineno="489">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="490">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(text<sp/>&amp;&amp;<sp/>trig-&gt;
                    <ref refid="struct_trigger_button_1a5633b1433389cec21ade3811bbe9ca5b" kindref="member">text</ref>
                    <sp/>&amp;&amp;
                </highlight>
            </codeline>
            <codeline lineno="491">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>strcmp(text,<sp/>trig-&gt;<ref refid="struct_trigger_button_1a5633b1433389cec21ade3811bbe9ca5b"
                                                        kindref="member">text</ref>)<sp/>==<sp/>0)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="492">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="gntwidget_8c_1a4e1b79e2b5c6a189c9a91d08d6532c44" kindref="member">
                        gnt_widget_activate</ref>(trig-&gt;<ref
                        refid="struct_trigger_button_1a7b04ce50c804889f267059b6f9146430" kindref="member">button</ref>);
                </highlight>
            </codeline>
            <codeline lineno="493">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>TRUE;
                </highlight>
            </codeline>
            <codeline lineno="494">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="495">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>FALSE;
                </highlight>
            </codeline>
            <codeline lineno="496">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="497">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="498">
                <highlight class="normal"></highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="gntutils_8c_1ae845c3ce26e9fc38b187b8481da54ca2" kindref="member">
                        gnt_util_set_trigger_widget</ref>(
                    <ref refid="struct___gnt_widget" kindref="compound">GntWidget</ref>
                    <sp/>*wid,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*text,
                    <sp/>
                    <ref refid="struct___gnt_widget" kindref="compound">GntWidget</ref>
                    <sp/>*<ref refid="namespacetest_1a6a35dc97cc575e3e1f108d7a19e8be11" kindref="member">button</ref>)
                </highlight>
            </codeline>
            <codeline lineno="499">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="500">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="struct_trigger_button" kindref="compound">TriggerButton</ref>
                    <sp/>*tb<sp/>=<sp/>g_new0(<ref refid="struct_trigger_button" kindref="compound">TriggerButton</ref>,
                    <sp/>1);
                </highlight>
            </codeline>
            <codeline lineno="501">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>tb-&gt;
                    <ref refid="struct_trigger_button_1a5633b1433389cec21ade3811bbe9ca5b" kindref="member">text</ref>
                    <sp/>=<sp/>g_strdup(text);
                </highlight>
            </codeline>
            <codeline lineno="502">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>tb-&gt;
                    <ref refid="struct_trigger_button_1a7b04ce50c804889f267059b6f9146430" kindref="member">button</ref>
                    <sp/>=
                    <sp/>
                    <ref refid="namespacetest_1a6a35dc97cc575e3e1f108d7a19e8be11" kindref="member">button</ref>;
                </highlight>
            </codeline>
            <codeline lineno="503">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>g_signal_connect(G_OBJECT(wid),
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;key_pressed&quot;</highlight>
                <highlight class="normal">,<sp/>G_CALLBACK(key_pressed),<sp/>tb);
                </highlight>
            </codeline>
            <codeline lineno="504">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>g_signal_connect_swapped(G_OBJECT(button),
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;destroy&quot;</highlight>
                <highlight class="normal">,<sp/>G_CALLBACK(free_trigger_button),<sp/>tb);
                </highlight>
            </codeline>
            <codeline lineno="505">
                <highlight class="normal">}</highlight>
            </codeline>
        </programlisting>
        <location file="C:/Users/David/Downloads/pidgin-2.2.0.tar/pidgin-2.2.0/finch/libgnt/gntutils.c"/>
    </compounddef>
</doxygen>
