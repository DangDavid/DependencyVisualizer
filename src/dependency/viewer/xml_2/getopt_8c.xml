<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd"
         version="1.8.5">
    <compounddef id="getopt_8c" kind="file">
        <compoundname>getopt.c</compoundname>
        <includes local="no">stdio.h</includes>
        <includes refid="getopt_8h" local="yes">getopt.h</includes>
        <incdepgraph>
            <node id="61">
                <label>getopt.c</label>
                <link refid="getopt.c"/>
                <childnode refid="62" relation="include">
                </childnode>
                <childnode refid="63" relation="include">
                </childnode>
            </node>
            <node id="63">
                <label>getopt.h</label>
                <link refid="getopt_8h"/>
            </node>
            <node id="62">
                <label>stdio.h</label>
            </node>
        </incdepgraph>
        <sectiondef kind="define">
            <memberdef kind="define" id="getopt_8c_1a9bcd7db9771ff03b7e5a9fec9c489861" prot="public" static="no">
                <name>_NO_PROTO</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          line="57" column="9"
                          bodyfile="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          bodystart="57" bodyend="-1"/>
            </memberdef>
            <memberdef kind="define" id="getopt_8c_1a1b2b9d131a95440d9a0b302b1b22ff92" prot="public" static="no">
                <name>__alloca</name>
                <initializer>
                    <ref refid="getopt_8c_1aeb1df3e83fb069eaa2eb66ace3a0ea52" kindref="member">alloca</ref>
                </initializer>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          line="81" column="9"
                          bodyfile="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          bodystart="81" bodyend="-1"/>
            </memberdef>
        </sectiondef>
        <sectiondef kind="enum">
            <memberdef kind="enum" id="getopt_8c_1a06fc87d81c62e9abb8790b6e5713c55b" prot="public" static="no">
                <name>@0</name>
                <enumvalue id="getopt_8c_1a06fc87d81c62e9abb8790b6e5713c55ba0e73a0691c110b1442d8364d1d12eccc"
                           prot="public">
                    <name>REQUIRE_ORDER</name>
                    <briefdescription>
                    </briefdescription>
                    <detaileddescription>
                    </detaileddescription>
                </enumvalue>
                <enumvalue id="getopt_8c_1a06fc87d81c62e9abb8790b6e5713c55bacfdde4b47c27f4efbd832e1ac7f8a8fc"
                           prot="public">
                    <name>PERMUTE</name>
                    <briefdescription>
                    </briefdescription>
                    <detaileddescription>
                    </detaileddescription>
                </enumvalue>
                <enumvalue id="getopt_8c_1a06fc87d81c62e9abb8790b6e5713c55ba3c56550bfafe809d9214b863b69c31c5"
                           prot="public">
                    <name>RETURN_IN_ORDER</name>
                    <briefdescription>
                    </briefdescription>
                    <detaileddescription>
                    </detaileddescription>
                </enumvalue>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          line="178" column="1"
                          bodyfile="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          bodystart="177" bodyend="180"/>
            </memberdef>
        </sectiondef>
        <sectiondef kind="var">
            <memberdef kind="variable" id="getopt_8c_1ab60cc9ce211468617579bb9d1ca6bcd9" prot="public" static="no"
                       mutable="no">
                <type>char *</type>
                <definition>optarg</definition>
                <argsstring></argsstring>
                <name>optarg</name>
                <initializer>= 0</initializer>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          line="111" column="1"
                          bodyfile="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          bodystart="111" bodyend="-1"/>
            </memberdef>
            <memberdef kind="variable" id="getopt_8c_1a1222c80280fecf9e4e99f95319212c49" prot="public" static="no"
                       mutable="no">
                <type>int</type>
                <definition>optind</definition>
                <argsstring></argsstring>
                <name>optind</name>
                <initializer>= 0</initializer>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          line="126" column="1"
                          bodyfile="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          bodystart="126" bodyend="-1"/>
            </memberdef>
            <memberdef kind="variable" id="getopt_8c_1a47a40a4c365dae45f94751ad32aab530" prot="public" static="yes"
                       mutable="no">
                <type>char *</type>
                <definition>char* nextchar</definition>
                <argsstring></argsstring>
                <name>nextchar</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          line="135" column="1"
                          bodyfile="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          bodystart="135" bodyend="-1"/>
            </memberdef>
            <memberdef kind="variable" id="getopt_8c_1ae30f05ee1e2e5652f174a35c7875d25e" prot="public" static="no"
                       mutable="no">
                <type>int</type>
                <definition>int opterr</definition>
                <argsstring></argsstring>
                <name>opterr</name>
                <initializer>= 1</initializer>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          line="140" column="1"
                          bodyfile="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          bodystart="140" bodyend="-1"/>
            </memberdef>
            <memberdef kind="variable" id="getopt_8c_1a475b8db98445da73e5f62a1ef6324b95" prot="public" static="no"
                       mutable="no">
                <type>int</type>
                <definition>int optopt</definition>
                <argsstring></argsstring>
                <name>optopt</name>
                <initializer>= &apos;?&apos;</initializer>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          line="146" column="1"
                          bodyfile="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          bodystart="146" bodyend="-1"/>
            </memberdef>
            <memberdef kind="variable" id="getopt_8c_1a67a84cf4dacaa8337be68345f8b9a8cc" prot="public" static="yes"
                       mutable="no">
                <type>enum @0</type>
                <definition>enum @0 ordering</definition>
                <argsstring></argsstring>
                <name>ordering</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          line="180" column="1"/>
            </memberdef>
            <memberdef kind="variable" id="getopt_8c_1ae6c5fc6d9d7c855ea1935d44882dd9fa" prot="public" static="yes"
                       mutable="no">
                <type>char *const char *</type>
                <definition>char* const char* str</definition>
                <argsstring></argsstring>
                <name>str</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          line="199" column="1"
                          bodyfile="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          bodystart="199" bodyend="-1"/>
            </memberdef>
            <memberdef kind="variable" id="getopt_8c_1a3cda899eb92cb06bf6a861f9790ba235" prot="public" static="no"
                       mutable="no">
                <type>int</type>
                <definition>int chr</definition>
                <argsstring></argsstring>
                <name>chr</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          line="200" column="1"
                          bodyfile="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          bodystart="200" bodyend="-1"/>
            </memberdef>
            <memberdef kind="variable" id="getopt_8c_1a3dc8df1becd1202c582e995485edc73a" prot="public" static="yes"
                       mutable="no">
                <type>void const char *</type>
                <definition>void const char* from</definition>
                <argsstring></argsstring>
                <name>from</name>
                <initializer>{
                    while (*str)
                    {

                    return (char *) str;
                    str++;
                    }
                    return 0
                </initializer>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          line="213" column="1"
                          bodyfile="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          bodystart="201" bodyend="-1"/>
            </memberdef>
            <memberdef kind="variable" id="getopt_8c_1a7347696a672e26aa962713eb3ab3cdb6" prot="public" static="no"
                       mutable="no">
                <type>char *</type>
                <definition>to[i]</definition>
                <argsstring></argsstring>
                <name>to</name>
                <initializer>= from[i]</initializer>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          line="214" column="1"
                          bodyfile="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          bodystart="214" bodyend="-1"/>
            </memberdef>
            <memberdef kind="variable" id="getopt_8c_1a439227feff9d7f55384e8780cfc2eb82" prot="public" static="no"
                       mutable="no">
                <type>int</type>
                <definition>int size</definition>
                <argsstring></argsstring>
                <name>size</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          line="215" column="1"
                          bodyfile="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          bodystart="215" bodyend="-1"/>
            </memberdef>
            <memberdef kind="variable" id="getopt_8c_1ab6a93a3e8f3d8f42e51928661d84a444" prot="public" static="yes"
                       mutable="no">
                <type>int</type>
                <definition>first_nonopt</definition>
                <argsstring></argsstring>
                <name>first_nonopt</name>
                <initializer>= (
                    <ref refid="getopt_8h_1ad5e1c16213bbee2d5e8cc363309f418c" kindref="member">optind</ref>
                    - last_nonopt)
                </initializer>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          line="229" column="1"
                          bodyfile="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          bodystart="229" bodyend="-1"/>
            </memberdef>
            <memberdef kind="variable" id="getopt_8c_1a2cbb2e9aea5ab550f7902b70a103b91a" prot="public" static="yes"
                       mutable="no">
                <type>int</type>
                <definition>last_nonopt</definition>
                <argsstring></argsstring>
                <name>last_nonopt</name>
                <initializer>=
                    <ref refid="getopt_8h_1ad5e1c16213bbee2d5e8cc363309f418c" kindref="member">optind</ref>
                </initializer>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          line="230" column="1"
                          bodyfile="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          bodystart="230" bodyend="-1"/>
            </memberdef>
            <memberdef kind="variable" id="getopt_8c_1a53f75c6ccd3a8828f9aa07f4bb698ad4" prot="public" static="yes"
                       mutable="no">
                <type>void char **</type>
                <definition>char *const * argv</definition>
                <argsstring></argsstring>
                <name>argv</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          line="243" column="1"
                          bodyfile="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          bodystart="243" bodyend="-1"/>
            </memberdef>
            <memberdef kind="variable" id="getopt_8c_1a7d6942871dbca7bb8aab0f5461218d37" prot="public" static="no"
                       mutable="no">
                <type>char **</type>
                <definition>char * temp</definition>
                <argsstring></argsstring>
                <name>temp</name>
                <initializer>= (char **)
                    <ref refid="getopt_8c_1a1b2b9d131a95440d9a0b302b1b22ff92" kindref="member">__alloca</ref>
                    (nonopts_size)
                </initializer>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          line="246" column="1"
                          bodyfile="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          bodystart="246" bodyend="-1"/>
            </memberdef>
            <memberdef kind="variable" id="getopt_8c_1a899ede614ac21dd98628cc8cc682e95a" prot="public" static="no"
                       mutable="no">
                <type>int int</type>
                <definition>int int argc</definition>
                <argsstring></argsstring>
                <name>argc</name>
                <initializer>{
                    return
                    <ref refid="getopt_8h_1a60428225710059ca135c6b2a8941855f" kindref="member">_getopt_internal</ref>
                    (argc,<ref refid="getopt1_8c_1a53f75c6ccd3a8828f9aa07f4bb698ad4" kindref="member">argv</ref>,<ref
                            refid="getopt1_8c_1aad0b02dced4088eb693e2be2e96e3750" kindref="member">options</ref>,<ref
                            refid="getopt1_8c_1a3e0fdc6107db5f12d23c8af627913b5d" kindref="member">long_options</ref>,
                    <ref refid="getopt1_8c_1a30abcc84729a92d1d33f781c60da40de" kindref="member">opt_index</ref>, 0)
                </initializer>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          line="321" column="1"
                          bodyfile="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          bodystart="321" bodyend="-1"/>
            </memberdef>
            <memberdef kind="variable" id="getopt_8c_1a5417868d315874dd853f233e3ffb7ae9" prot="public" static="no"
                       mutable="no">
                <type>const char *</type>
                <definition>const char * optstring</definition>
                <argsstring></argsstring>
                <name>optstring</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          line="323" column="1"
                          bodyfile="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          bodystart="323" bodyend="-1"/>
            </memberdef>
            <memberdef kind="variable" id="getopt_8c_1a4e29b6c1cece6c0b4ded5de2accb408f" prot="public" static="no"
                       mutable="no">
                <type>struct
                    <ref refid="structoption" kindref="compound">option</ref>
                    *
                </type>
                <definition>struct option* longopts</definition>
                <argsstring></argsstring>
                <name>longopts</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          line="324" column="1"
                          bodyfile="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          bodystart="324" bodyend="-1"/>
            </memberdef>
            <memberdef kind="variable" id="getopt_8c_1ab6dd53082bcf193c98cf297297b6384d" prot="public" static="no"
                       mutable="no">
                <type>int *</type>
                <definition>int* longind</definition>
                <argsstring></argsstring>
                <name>longind</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          line="325" column="1"
                          bodyfile="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          bodystart="325" bodyend="-1"/>
            </memberdef>
            <memberdef kind="variable" id="getopt_8c_1afc95d012dd291b7e46b6628c5f69e7f8" prot="public" static="no"
                       mutable="no">
                <type>int</type>
                <definition>int long_only</definition>
                <argsstring></argsstring>
                <name>long_only</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          line="326" column="1"
                          bodyfile="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          bodystart="326" bodyend="-1"/>
            </memberdef>
            <memberdef kind="variable" id="getopt_8c_1a66b97d6dee15f33d7b6731ccf48092cf" prot="public" static="no"
                       mutable="no">
                <type>return</type>
                <definition>return c</definition>
                <argsstring></argsstring>
                <name>c</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          line="649" column="1"
                          bodyfile="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          bodystart="649" bodyend="-1"/>
            </memberdef>
        </sectiondef>
        <sectiondef kind="func">
            <memberdef kind="function" id="getopt_8c_1aeb1df3e83fb069eaa2eb66ace3a0ea52" prot="public" static="no"
                       const="no" explicit="no" inline="no" virt="non-virtual">
                <type>char *</type>
                <definition>char* alloca</definition>
                <argsstring>()</argsstring>
                <name>alloca</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          line="46" column="1"/>
            </memberdef>
            <memberdef kind="function" id="getopt_8c_1aee28fd8a0e40b6d958f7d20348e45368" prot="public" static="no"
                       const="no" explicit="no" inline="no" virt="non-virtual">
                <type>char *</type>
                <definition>char* getenv</definition>
                <argsstring>()</argsstring>
                <name>getenv</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          line="195" column="1"/>
            </memberdef>
            <memberdef kind="function" id="getopt_8c_1a01942c8c95c71028450a48bd1bf278fa" prot="public" static="no"
                       const="no" explicit="no" inline="no" virt="non-virtual">
                <type></type>
                <definition>my_bcopy</definition>
                <argsstring>((char *)&amp;argv[first_nonopt],(char *) temp, nonopts_size)</argsstring>
                <name>my_bcopy</name>
                <param>
                    <type>(char *)&amp;</type>
                    <declname>argv</declname>
                    <array>[first_nonopt]</array>
                </param>
                <param>
                    <type>(char *)</type>
                    <declname>temp</declname>
                </param>
                <param>
                    <type>nonopts_size</type>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          line="250" column="1"/>
            </memberdef>
            <memberdef kind="function" id="getopt_8c_1a50c0d50758c8e542086fce63f80ea350" prot="public" static="no"
                       const="no" explicit="no" inline="no" virt="non-virtual">
                <type></type>
                <definition>my_bcopy</definition>
                <argsstring>((char *)&amp;argv[last_nonopt],(char *)&amp;argv[first_nonopt],(optind-last_nonopt)*sizeof(char
                    *))
                </argsstring>
                <name>my_bcopy</name>
                <param>
                    <type>(char *)&amp;</type>
                    <declname>argv</declname>
                    <array>[last_nonopt]</array>
                </param>
                <param>
                    <type>(char *)&amp;</type>
                    <declname>argv</declname>
                    <array>[first_nonopt]</array>
                </param>
                <param>
                    <type>(<ref refid="getopt_8h_1ad5e1c16213bbee2d5e8cc363309f418c" kindref="member">optind</ref>
                        -last_nonopt)*sizeof(char *)
                    </type>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          line="251" column="1"/>
            </memberdef>
            <memberdef kind="function" id="getopt_8c_1a508769373e1a35c24d82cce3fbd1d832" prot="public" static="no"
                       const="no" explicit="no" inline="no" virt="non-virtual">
                <type></type>
                <definition>my_bcopy</definition>
                <argsstring>((char *) temp,(char *)&amp;argv[first_nonopt+optind-last_nonopt], nonopts_size)
                </argsstring>
                <name>my_bcopy</name>
                <param>
                    <type>(char *)</type>
                    <declname>temp</declname>
                </param>
                <param>
                    <type>(char *)&amp;</type>
                    <declname>argv</declname>
                    <array>[first_nonopt+optind-last_nonopt]</array>
                </param>
                <param>
                    <type>nonopts_size</type>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          line="253" column="1"/>
            </memberdef>
            <memberdef kind="function" id="getopt_8c_1ae4f12ebd7baef57d8da4c43547b89a87" prot="public" static="no"
                       const="no" explicit="no" inline="no" virt="non-virtual">
                <type></type>
                <definition>if</definition>
                <argsstring>(optind==0)</argsstring>
                <name>if</name>
                <param>
                    <type>
                        <ref refid="getopt_8h_1ad5e1c16213bbee2d5e8cc363309f418c" kindref="member">optind</ref>
                    </type>
                    <defval>=0</defval>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          line="337" column="1"
                          bodyfile="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          bodystart="337" bodyend="359"/>
            </memberdef>
            <memberdef kind="function" id="getopt_8c_1a738646db7a86911a92afaa2853f69a08" prot="public" static="no"
                       const="no" explicit="no" inline="no" virt="non-virtual">
                <type></type>
                <definition>if</definition>
                <argsstring>(nextchar==NULL||*nextchar== &apos;\0&apos;)</argsstring>
                <name>if</name>
                <param>
                    <type>nextchar</type>
                    <defval>=<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>
                        ||*nextchar== &apos;\0&apos;
                    </defval>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          line="361" column="1"
                          bodyfile="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          bodystart="361" bodyend="438"/>
            </memberdef>
            <memberdef kind="function" id="getopt_8c_1a62d78c7630cb25857e0f3d26c4f82956" prot="public" static="no"
                       const="no" explicit="no" inline="no" virt="non-virtual">
                <type></type>
                <definition>if</definition>
                <argsstring>(longopts!=NULL &amp;&amp;((argv[optind][0]== &apos;-&apos;&amp;&amp;(argv[optind][1]==
                    &apos;-&apos;||long_only))))
                </argsstring>
                <name>if</name>
                <param>
                    <type>longopts!</type>
                    <defval>
                        <ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>
                        &amp;&amp;((<ref refid="getopt1_8c_1a53f75c6ccd3a8828f9aa07f4bb698ad4" kindref="member">
                        argv</ref>[<ref refid="getopt_8h_1ad5e1c16213bbee2d5e8cc363309f418c" kindref="member">
                        optind</ref>][0]== &apos;-&apos;&amp;&amp;(<ref
                            refid="getopt1_8c_1a53f75c6ccd3a8828f9aa07f4bb698ad4" kindref="member">argv</ref>[<ref
                            refid="getopt_8h_1ad5e1c16213bbee2d5e8cc363309f418c" kindref="member">optind</ref>][1]==
                        &apos;-&apos;||<ref refid="getopt_8c_1afc95d012dd291b7e46b6628c5f69e7f8" kindref="member">
                        long_only</ref>)))
                    </defval>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          line="440" column="1"
                          bodyfile="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          bodystart="440" bodyend="569"/>
            </memberdef>
            <memberdef kind="function" id="getopt_8c_1ad863da7d8ec5ee2262d9b0e0c7ace534" prot="public" static="no"
                       const="no" explicit="no" inline="no" virt="non-virtual">
                <type></type>
                <definition>if</definition>
                <argsstring>(temp==NULL||c== &apos;:&apos;)</argsstring>
                <name>if</name>
                <param>
                    <type>
                        <ref refid="getopt_8c_1a7d6942871dbca7bb8aab0f5461218d37" kindref="member">temp</ref>
                    </type>
                    <defval>=<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>||
                        <ref refid="getopt_8c_1a66b97d6dee15f33d7b6731ccf48092cf" kindref="member">c</ref>== &apos;:&apos;
                    </defval>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          line="581" column="1"
                          bodyfile="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          bodystart="581" bodyend="598"/>
            </memberdef>
            <memberdef kind="function" id="getopt_8c_1a0ccb723d4f1db3259fbdcce0b80a85b7" prot="public" static="no"
                       const="no" explicit="no" inline="no" virt="non-virtual">
                <type></type>
                <definition>if</definition>
                <argsstring>(temp[1]== &apos;:&apos;)</argsstring>
                <name>if</name>
                <param>
                    <type>
                        <ref refid="getopt_8c_1a7d6942871dbca7bb8aab0f5461218d37" kindref="member">temp</ref>
                    </type>
                    <array>[1]</array>
                    <defval>= &apos;:&apos;</defval>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          line="599" column="1"
                          bodyfile="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"
                          bodystart="599" bodyend="648"/>
            </memberdef>
        </sectiondef>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <programlisting>
            <codeline lineno="1">
                <highlight class="comment">/*<sp/>Getopt<sp/>for<sp/>GNU.
                </highlight>
            </codeline>
            <codeline lineno="2">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>NOTE:<sp/>getopt<sp/>is<sp/>now<sp/>part<sp/>of<sp/>the<sp/>C<sp/>library,<sp/>so<sp/>if<sp/>
                    you<sp/>don&apos;t<sp/>know<sp/>what
                </highlight>
            </codeline>
            <codeline lineno="3">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>&quot;Keep<sp/>this<sp/>file<sp/>name-space<sp/>clean&quot;<sp/>means,<sp/>talk<sp/>to<sp/>
                    roland@gnu.ai.mit.edu
                </highlight>
            </codeline>
            <codeline lineno="4">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>before<sp/>changing<sp/>it!
                </highlight>
            </codeline>
            <codeline lineno="5">
                <highlight class="comment"></highlight>
            </codeline>
            <codeline lineno="6">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>Finch<sp/>is<sp/>the<sp/>legal<sp/>property<sp/>of<sp/>its<sp/>developers,<sp/>whose<sp/>names
                    <sp/>are<sp/>too<sp/>numerous
                </highlight>
            </codeline>
            <codeline lineno="7">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>to<sp/>list<sp/>here.
                    <sp/>
                    <sp/>Please<sp/>refer<sp/>to<sp/>the<sp/>COPYRIGHT<sp/>file<sp/>distributed<sp/>with<sp/>this
                </highlight>
            </codeline>
            <codeline lineno="8">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>source<sp/>distribution.
                </highlight>
            </codeline>
            <codeline lineno="9">
                <highlight class="comment"></highlight>
            </codeline>
            <codeline lineno="10">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>
                    and/or<sp/>modify<sp/>it
                </highlight>
            </codeline>
            <codeline lineno="11">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>
                    published<sp/>by<sp/>the
                </highlight>
            </codeline>
            <codeline lineno="12">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2,<sp/>or<sp/>(at<sp/>your<sp/>
                    option)<sp/>any
                </highlight>
            </codeline>
            <codeline lineno="13">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>later<sp/>version.
                </highlight>
            </codeline>
            <codeline lineno="14">
                <highlight class="comment"></highlight>
            </codeline>
            <codeline lineno="15">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be
                    <sp/>useful,
                </highlight>
            </codeline>
            <codeline lineno="16">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty
                    <sp/>of
                </highlight>
            </codeline>
            <codeline lineno="17">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.
                    <sp/>
                    <sp/>See<sp/>the
                </highlight>
            </codeline>
            <codeline lineno="18">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.
                </highlight>
            </codeline>
            <codeline lineno="19">
                <highlight class="comment"></highlight>
            </codeline>
            <codeline lineno="20">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>
                    Public<sp/>License
                </highlight>
            </codeline>
            <codeline lineno="21">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>
                    Software
                </highlight>
            </codeline>
            <codeline lineno="22">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>Foundation,<sp/>675<sp/>Mass<sp/>Ave,<sp/>Cambridge,<sp/>MA<sp/>02139,<sp/>USA.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="23">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="24">
                <highlight class="normal"></highlight>
                <highlight class="comment">/*<sp/>NOTE!!!
                    <sp/>
                    <sp/>AIX<sp/>requires<sp/>this<sp/>to<sp/>be<sp/>the<sp/>first<sp/>thing<sp/>in<sp/>the<sp/>file.
                </highlight>
            </codeline>
            <codeline lineno="25">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>Do<sp/>not<sp/>put<sp/>ANYTHING<sp/>before<sp/>it!
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="26">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>!defined<sp/>(__GNUC__)<sp/>&amp;&amp;<sp/>defined<sp/>(_AIX)
                </highlight>
            </codeline>
            <codeline lineno="27">
                <highlight class="preprocessor"></highlight>
                <highlight class="preprocessor"><sp/>#pragma<sp/>alloca
                </highlight>
            </codeline>
            <codeline lineno="28">
                <highlight class="preprocessor"></highlight>
                <highlight class="preprocessor">#endif</highlight>
            </codeline>
            <codeline lineno="29">
                <highlight class="preprocessor"></highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="30">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H
                </highlight>
            </codeline>
            <codeline lineno="31">
                <highlight class="preprocessor"></highlight>
                <highlight class="preprocessor">#include<sp/>&quot;config.h&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="32">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
            </codeline>
            <codeline lineno="33">
                <highlight class="preprocessor"></highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="34">
                <highlight class="normal"></highlight>
                <highlight class="comment">/*<sp/>Alver<sp/>says<sp/>we<sp/>need<sp/>this<sp/>for<sp/>IRIX.<sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="35">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>HAVE_STRING_H
                </highlight>
            </codeline>
            <codeline lineno="36">
                <highlight class="preprocessor"></highlight>
                <highlight class="preprocessor">#include<sp/>&quot;string.h&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="37">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
            </codeline>
            <codeline lineno="38">
                <highlight class="preprocessor"></highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="39">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#ifdef<sp/>__GNUC__
                </highlight>
            </codeline>
            <codeline lineno="40">
                <highlight class="preprocessor"></highlight>
                <highlight class="preprocessor">#define<sp/>alloca<sp/>__builtin_alloca
                </highlight>
            </codeline>
            <codeline lineno="41">
                <highlight class="preprocessor"></highlight>
                <highlight class="preprocessor">#else
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>not<sp/>__GNUC__<sp/>*/
                </highlight>
                <highlight class="preprocessor"></highlight>
            </codeline>
            <codeline lineno="42">
                <highlight class="preprocessor"></highlight>
                <highlight class="preprocessor">#if<sp/>defined<sp/>(HAVE_ALLOCA_H)<sp/>||<sp/>(defined(sparc)<sp/>&amp;&amp;
                    <sp/>(defined(sun)<sp/>||<sp/>(!defined(USG)<sp/>&amp;&amp;<sp/>!defined(SVR4)<sp/>&amp;&amp;<sp/>
                    !defined(__svr4__))))
                </highlight>
            </codeline>
            <codeline lineno="43">
                <highlight class="preprocessor"></highlight>
                <highlight class="preprocessor">#include<sp/>&lt;alloca.h&gt;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="44">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#else</highlight>
            </codeline>
            <codeline lineno="45">
                <highlight class="preprocessor"></highlight>
                <highlight class="preprocessor">#ifndef<sp/>_AIX
                </highlight>
            </codeline>
            <codeline lineno="46">
                <highlight class="preprocessor"></highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*
                    <ref refid="getopt_8c_1aeb1df3e83fb069eaa2eb66ace3a0ea52" kindref="member">alloca</ref>
                    <sp/>();
                </highlight>
            </codeline>
            <codeline lineno="47">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
            </codeline>
            <codeline lineno="48">
                <highlight class="preprocessor"></highlight>
                <highlight class="preprocessor">#endif
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>alloca.h<sp/>*/
                </highlight>
                <highlight class="preprocessor"></highlight>
            </codeline>
            <codeline lineno="49">
                <highlight class="preprocessor"></highlight>
                <highlight class="preprocessor">#endif
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>not<sp/>__GNUC__<sp/>*/
                </highlight>
                <highlight class="preprocessor"></highlight>
            </codeline>
            <codeline lineno="50">
                <highlight class="preprocessor"></highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="51">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>!__STDC__<sp/>&amp;&amp;<sp/>!defined(const)<sp/>&amp;&amp;<sp/>
                    IN_GCC
                </highlight>
            </codeline>
            <codeline lineno="52">
                <highlight class="preprocessor"></highlight>
                <highlight class="preprocessor">#define<sp/>const
                </highlight>
            </codeline>
            <codeline lineno="53">
                <highlight class="preprocessor"></highlight>
                <highlight class="preprocessor">#endif</highlight>
            </codeline>
            <codeline lineno="54">
                <highlight class="preprocessor"></highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="55">
                <highlight class="normal"></highlight>
                <highlight class="comment">/*<sp/>This<sp/>tells<sp/>Alpha<sp/>OSF/1<sp/>not<sp/>to<sp/>define<sp/>a
                    <sp/>getopt<sp/>prototype<sp/>in<sp/>&lt;stdio.h&gt;.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="56">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#ifndef<sp/>_NO_PROTO
                </highlight>
            </codeline>
            <codeline lineno="57">
                <highlight class="preprocessor"></highlight>
                <highlight class="preprocessor">#define<sp/>_NO_PROTO
                </highlight>
            </codeline>
            <codeline lineno="58">
                <highlight class="preprocessor"></highlight>
                <highlight class="preprocessor">#endif</highlight>
            </codeline>
            <codeline lineno="59">
                <highlight class="preprocessor"></highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="60">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="61">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="62">
                <highlight class="normal"></highlight>
                <highlight class="comment">/*<sp/>Comment<sp/>out<sp/>all<sp/>this<sp/>code<sp/>if<sp/>we<sp/>are<sp/>
                    using<sp/>the<sp/>GNU<sp/>C<sp/>Library,<sp/>and<sp/>are<sp/>not
                </highlight>
            </codeline>
            <codeline lineno="63">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>actually<sp/>compiling<sp/>the<sp/>library<sp/>itself.
                    <sp/>
                    <sp/>This<sp/>code<sp/>is<sp/>part<sp/>of<sp/>the<sp/>GNU<sp/>C
                </highlight>
            </codeline>
            <codeline lineno="64">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>Library,<sp/>but<sp/>also<sp/>included<sp/>in<sp/>many<sp/>other<sp/>GNU<sp/>distributions.
                    <sp/>
                    <sp/>Compiling
                </highlight>
            </codeline>
            <codeline lineno="65">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>and<sp/>linking<sp/>in<sp/>this<sp/>code<sp/>is<sp/>a<sp/>waste<sp/>when<sp/>using<sp/>the<sp/>
                    GNU<sp/>C<sp/>library
                </highlight>
            </codeline>
            <codeline lineno="66">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>(especially<sp/>if<sp/>it<sp/>is<sp/>a<sp/>shared<sp/>library).
                    <sp/>
                    <sp/>Rather<sp/>than<sp/>having<sp/>every<sp/>GNU
                </highlight>
            </codeline>
            <codeline lineno="67">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>program<sp/>understand<sp/>`configure<sp/>--with-gnu-libc&apos;<sp/>and<sp/>omit<sp/>the<sp/>
                    object<sp/>files,
                </highlight>
            </codeline>
            <codeline lineno="68">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>it<sp/>is<sp/>simpler<sp/>to<sp/>just<sp/>do<sp/>this<sp/>in<sp/>the<sp/>source<sp/>for<sp/>
                    each<sp/>such<sp/>file.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="69">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="70">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>defined<sp/>(_LIBC)<sp/>||<sp/>!defined<sp/>(__GNU_LIBRARY__)
                </highlight>
            </codeline>
            <codeline lineno="71">
                <highlight class="preprocessor"></highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="72">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="73">
                <highlight class="normal"></highlight>
                <highlight class="comment">/*<sp/>This<sp/>needs<sp/>to<sp/>come<sp/>after<sp/>some<sp/>library<sp/>
                    #include
                </highlight>
            </codeline>
            <codeline lineno="74">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>to<sp/>get<sp/>__GNU_LIBRARY__<sp/>defined.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="75">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#ifdef
                    <sp/>
                    <sp/>__GNU_LIBRARY__
                </highlight>
            </codeline>
            <codeline lineno="76">
                <highlight class="preprocessor"></highlight>
                <highlight class="preprocessor">#undef
                    <sp/>
                    <sp/>alloca
                </highlight>
            </codeline>
            <codeline lineno="77">
                <highlight class="preprocessor"></highlight>
                <highlight class="comment">/*<sp/>Don&apos;t<sp/>include<sp/>stdlib.h<sp/>for<sp/>non-GNU<sp/>C<sp/>
                    libraries<sp/>because<sp/>some<sp/>of<sp/>them
                </highlight>
            </codeline>
            <codeline lineno="78">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>contain<sp/>conflicting<sp/>prototypes<sp/>for<sp/>getopt.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="79">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="80">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#else
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>Not<sp/>GNU<sp/>C<sp/>library.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="preprocessor"></highlight>
            </codeline>
            <codeline lineno="81">
                <highlight class="preprocessor"></highlight>
                <highlight class="preprocessor">#define<sp/>__alloca
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>alloca
                </highlight>
            </codeline>
            <codeline lineno="82">
                <highlight class="preprocessor"></highlight>
                <highlight class="preprocessor">#endif
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>GNU<sp/>C<sp/>library.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="preprocessor"></highlight>
            </codeline>
            <codeline lineno="83">
                <highlight class="preprocessor"></highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="84">
                <highlight class="normal"></highlight>
                <highlight class="comment">/*<sp/>If<sp/>GETOPT_COMPAT<sp/>is<sp/>defined,<sp/>`+&apos;<sp/>as<sp/>well
                    <sp/>as<sp/>`--&apos;<sp/>can<sp/>introduce<sp/>a
                </highlight>
            </codeline>
            <codeline lineno="85">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>long-named<sp/>option.
                    <sp/>
                    <sp/>Because<sp/>this<sp/>is<sp/>not<sp/>POSIX.2<sp/>compliant,<sp/>it<sp/>is
                </highlight>
            </codeline>
            <codeline lineno="86">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>being<sp/>phased<sp/>out.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="87">
                <highlight class="normal"></highlight>
                <highlight class="comment">/*<sp/>#define<sp/>GETOPT_COMPAT<sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="88">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="89">
                <highlight class="normal"></highlight>
                <highlight class="comment">/*<sp/>This<sp/>version<sp/>of<sp/>`getopt&apos;<sp/>appears<sp/>to<sp/>the
                    <sp/>caller<sp/>like<sp/>standard<sp/>Unix<sp/>`getopt&apos;
                </highlight>
            </codeline>
            <codeline lineno="90">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>but<sp/>it<sp/>behaves<sp/>differently<sp/>for<sp/>the<sp/>user,<sp/>since<sp/>it<sp/>allows
                    <sp/>the<sp/>user
                </highlight>
            </codeline>
            <codeline lineno="91">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>to<sp/>intersperse<sp/>the<sp/>options<sp/>with<sp/>the<sp/>other<sp/>arguments.
                </highlight>
            </codeline>
            <codeline lineno="92">
                <highlight class="comment"></highlight>
            </codeline>
            <codeline lineno="93">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>As<sp/>`getopt&apos;<sp/>works,<sp/>it<sp/>permutes<sp/>the<sp/>elements<sp/>of<sp/>ARGV<sp/>so
                    <sp/>that,
                </highlight>
            </codeline>
            <codeline lineno="94">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>when<sp/>it<sp/>is<sp/>done,<sp/>all<sp/>the<sp/>options<sp/>precede<sp/>everything<sp/>else.
                    <sp/>
                    <sp/>Thus
                </highlight>
            </codeline>
            <codeline lineno="95">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>all<sp/>application<sp/>programs<sp/>are<sp/>extended<sp/>to<sp/>handle<sp/>flexible<sp/>
                    argument<sp/>order.
                </highlight>
            </codeline>
            <codeline lineno="96">
                <highlight class="comment"></highlight>
            </codeline>
            <codeline lineno="97">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>Setting<sp/>the<sp/>environment<sp/>variable<sp/>POSIXLY_CORRECT<sp/>disables<sp/>permutation.
                </highlight>
            </codeline>
            <codeline lineno="98">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>Then<sp/>the<sp/>behavior<sp/>is<sp/>completely<sp/>standard.
                </highlight>
            </codeline>
            <codeline lineno="99">
                <highlight class="comment"></highlight>
            </codeline>
            <codeline lineno="100">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>GNU<sp/>application<sp/>programs<sp/>can<sp/>use<sp/>a<sp/>third<sp/>alternative<sp/>mode<sp/>
                    in<sp/>which
                </highlight>
            </codeline>
            <codeline lineno="101">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>they<sp/>can<sp/>distinguish<sp/>the<sp/>relative<sp/>order<sp/>of<sp/>options<sp/>and<sp/>
                    other<sp/>arguments.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="102">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="103">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&quot;<ref refid="getopt_8h" kindref="compound">
                    getopt.h</ref>&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="104">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="105">
                <highlight class="normal"></highlight>
                <highlight class="comment">/*<sp/>For<sp/>communication<sp/>from<sp/>`getopt&apos;<sp/>to<sp/>the<sp/>
                    caller.
                </highlight>
            </codeline>
            <codeline lineno="106">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>When<sp/>`getopt&apos;<sp/>finds<sp/>an<sp/>option<sp/>that<sp/>takes<sp/>an<sp/>argument,
                </highlight>
            </codeline>
            <codeline lineno="107">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>the<sp/>argument<sp/>value<sp/>is<sp/>returned<sp/>here.
                </highlight>
            </codeline>
            <codeline lineno="108">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>Also,<sp/>when<sp/>`ordering&apos;<sp/>is<sp/>RETURN_IN_ORDER,
                </highlight>
            </codeline>
            <codeline lineno="109">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>each<sp/>non-option<sp/>ARGV-element<sp/>is<sp/>returned<sp/>here.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="110">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="111">
                <highlight class="normal"></highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*
                    <ref refid="getopt_8c_1ab60cc9ce211468617579bb9d1ca6bcd9" kindref="member">optarg</ref>
                    <sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="112">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="113">
                <highlight class="normal"></highlight>
                <highlight class="comment">/*<sp/>Index<sp/>in<sp/>ARGV<sp/>of<sp/>the<sp/>next<sp/>element<sp/>to<sp/>
                    be<sp/>scanned.
                </highlight>
            </codeline>
            <codeline lineno="114">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>This<sp/>is<sp/>used<sp/>for<sp/>communication<sp/>to<sp/>and<sp/>from<sp/>the<sp/>caller
                </highlight>
            </codeline>
            <codeline lineno="115">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>and<sp/>for<sp/>communication<sp/>between<sp/>successive<sp/>calls<sp/>to<sp/>`getopt&apos;.
                </highlight>
            </codeline>
            <codeline lineno="116">
                <highlight class="comment"></highlight>
            </codeline>
            <codeline lineno="117">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>On<sp/>entry<sp/>to<sp/>`getopt&apos;,<sp/>zero<sp/>means<sp/>this<sp/>is<sp/>the<sp/>first
                    <sp/>call;<sp/>initialize.
                </highlight>
            </codeline>
            <codeline lineno="118">
                <highlight class="comment"></highlight>
            </codeline>
            <codeline lineno="119">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>When<sp/>`getopt&apos;<sp/>returns<sp/>EOF,<sp/>this<sp/>is<sp/>the<sp/>index<sp/>of<sp/>the
                    <sp/>first<sp/>of<sp/>the
                </highlight>
            </codeline>
            <codeline lineno="120">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>non-option<sp/>elements<sp/>that<sp/>the<sp/>caller<sp/>should<sp/>itself<sp/>scan.
                </highlight>
            </codeline>
            <codeline lineno="121">
                <highlight class="comment"></highlight>
            </codeline>
            <codeline lineno="122">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>Otherwise,<sp/>`optind&apos;<sp/>communicates<sp/>from<sp/>one<sp/>call<sp/>to<sp/>the<sp/>next
                </highlight>
            </codeline>
            <codeline lineno="123">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>how<sp/>much<sp/>of<sp/>ARGV<sp/>has<sp/>been<sp/>scanned<sp/>so<sp/>far.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="124">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="125">
                <highlight class="normal"></highlight>
                <highlight class="comment">/*<sp/>XXX<sp/>1003.2<sp/>says<sp/>this<sp/>must<sp/>be<sp/>1<sp/>before<sp/>
                    any<sp/>call.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="126">
                <highlight class="normal"></highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="getopt_8c_1a1222c80280fecf9e4e99f95319212c49" kindref="member">optind</ref>
                    <sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="127">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="128">
                <highlight class="normal"></highlight>
                <highlight class="comment">/*<sp/>The<sp/>next<sp/>char<sp/>to<sp/>be<sp/>scanned<sp/>in<sp/>the<sp/>
                    option-element
                </highlight>
            </codeline>
            <codeline lineno="129">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>in<sp/>which<sp/>the<sp/>last<sp/>option<sp/>character<sp/>we<sp/>returned<sp/>was<sp/>found.
                </highlight>
            </codeline>
            <codeline lineno="130">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>This<sp/>allows<sp/>us<sp/>to<sp/>pick<sp/>up<sp/>the<sp/>scan<sp/>where<sp/>we<sp/>left<sp/>
                    off.
                </highlight>
            </codeline>
            <codeline lineno="131">
                <highlight class="comment"></highlight>
            </codeline>
            <codeline lineno="132">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>If<sp/>this<sp/>is<sp/>zero,<sp/>or<sp/>a<sp/>null<sp/>string,<sp/>it<sp/>means<sp/>resume<sp/>
                    the<sp/>scan
                </highlight>
            </codeline>
            <codeline lineno="133">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>by<sp/>advancing<sp/>to<sp/>the<sp/>next<sp/>ARGV-element.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="134">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="135">
                <highlight class="normal"></highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*nextchar;
                </highlight>
            </codeline>
            <codeline lineno="136">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="137">
                <highlight class="normal"></highlight>
                <highlight class="comment">/*<sp/>Callers<sp/>store<sp/>zero<sp/>here<sp/>to<sp/>inhibit<sp/>the<sp/>
                    error<sp/>message
                </highlight>
            </codeline>
            <codeline lineno="138">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>for<sp/>unrecognized<sp/>options.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="139">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="140">
                <highlight class="normal"></highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="getopt_8c_1ae30f05ee1e2e5652f174a35c7875d25e" kindref="member">opterr</ref>
                    <sp/>=<sp/>1;
                </highlight>
            </codeline>
            <codeline lineno="141">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="142">
                <highlight class="normal"></highlight>
                <highlight class="comment">/*<sp/>Set<sp/>to<sp/>an<sp/>option<sp/>character<sp/>which<sp/>was<sp/>
                    unrecognized.
                </highlight>
            </codeline>
            <codeline lineno="143">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>This<sp/>must<sp/>be<sp/>initialized<sp/>on<sp/>some<sp/>systems<sp/>to<sp/>avoid<sp/>linking
                    <sp/>in<sp/>the
                </highlight>
            </codeline>
            <codeline lineno="144">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>system&apos;s<sp/>own<sp/>getopt<sp/>implementation.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="145">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="146">
                <highlight class="normal"></highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="getopt_8c_1a475b8db98445da73e5f62a1ef6324b95" kindref="member">optopt</ref>
                    <sp/>=
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;?&apos;</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="147">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="148">
                <highlight class="normal"></highlight>
                <highlight class="comment">/*<sp/>Describe<sp/>how<sp/>to<sp/>deal<sp/>with<sp/>options<sp/>that<sp/>
                    follow<sp/>non-option<sp/>ARGV-elements.
                </highlight>
            </codeline>
            <codeline lineno="149">
                <highlight class="comment"></highlight>
            </codeline>
            <codeline lineno="150">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>If<sp/>the<sp/>caller<sp/>did<sp/>not<sp/>specify<sp/>anything,
                </highlight>
            </codeline>
            <codeline lineno="151">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>the<sp/>default<sp/>is<sp/>REQUIRE_ORDER<sp/>if<sp/>the<sp/>environment<sp/>variable
                </highlight>
            </codeline>
            <codeline lineno="152">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>POSIXLY_CORRECT<sp/>is<sp/>defined,<sp/>PERMUTE<sp/>otherwise.
                </highlight>
            </codeline>
            <codeline lineno="153">
                <highlight class="comment"></highlight>
            </codeline>
            <codeline lineno="154">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>REQUIRE_ORDER<sp/>means<sp/>don&apos;t<sp/>recognize<sp/>them<sp/>as<sp/>options;
                </highlight>
            </codeline>
            <codeline lineno="155">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>stop<sp/>option<sp/>processing<sp/>when<sp/>the<sp/>first<sp/>non-option<sp/>is<sp/>seen.
                </highlight>
            </codeline>
            <codeline lineno="156">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>This<sp/>is<sp/>what<sp/>Unix<sp/>does.
                </highlight>
            </codeline>
            <codeline lineno="157">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>This<sp/>mode<sp/>of<sp/>operation<sp/>is<sp/>selected<sp/>by<sp/>either<sp/>setting<sp/>the
                    <sp/>environment
                </highlight>
            </codeline>
            <codeline lineno="158">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>variable<sp/>POSIXLY_CORRECT,<sp/>or<sp/>using<sp/>`+&apos;<sp/>as<sp/>the<sp/>first<sp/>
                    character
                </highlight>
            </codeline>
            <codeline lineno="159">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>of<sp/>the<sp/>list<sp/>of<sp/>option<sp/>characters.
                </highlight>
            </codeline>
            <codeline lineno="160">
                <highlight class="comment"></highlight>
            </codeline>
            <codeline lineno="161">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>PERMUTE<sp/>is<sp/>the<sp/>default.
                    <sp/>
                    <sp/>We<sp/>permute<sp/>the<sp/>contents<sp/>of<sp/>ARGV<sp/>as<sp/>we<sp/>scan,
                </highlight>
            </codeline>
            <codeline lineno="162">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>so<sp/>that<sp/>eventually<sp/>all<sp/>the<sp/>non-options<sp/>are<sp/>at<sp/>the<sp/>end.
                    <sp/>
                    <sp/>This<sp/>allows<sp/>options
                </highlight>
            </codeline>
            <codeline lineno="163">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>to<sp/>be<sp/>given<sp/>in<sp/>any<sp/>order,<sp/>even<sp/>with<sp/>programs<sp/>that<sp/>were
                    <sp/>not<sp/>written<sp/>to
                </highlight>
            </codeline>
            <codeline lineno="164">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>expect<sp/>this.
                </highlight>
            </codeline>
            <codeline lineno="165">
                <highlight class="comment"></highlight>
            </codeline>
            <codeline lineno="166">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>RETURN_IN_ORDER<sp/>is<sp/>an<sp/>option<sp/>available<sp/>to<sp/>programs<sp/>that<sp/>were
                    <sp/>written
                </highlight>
            </codeline>
            <codeline lineno="167">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>to<sp/>expect<sp/>options<sp/>and<sp/>other<sp/>ARGV-elements<sp/>in<sp/>any<sp/>order<sp/>and
                    <sp/>that<sp/>care<sp/>about
                </highlight>
            </codeline>
            <codeline lineno="168">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>the<sp/>ordering<sp/>of<sp/>the<sp/>two.
                    <sp/>
                    <sp/>We<sp/>describe<sp/>each<sp/>non-option<sp/>ARGV-element
                </highlight>
            </codeline>
            <codeline lineno="169">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>as<sp/>if<sp/>it<sp/>were<sp/>the<sp/>argument<sp/>of<sp/>an<sp/>option<sp/>with<sp/>character
                    <sp/>code<sp/>1.
                </highlight>
            </codeline>
            <codeline lineno="170">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>Using<sp/>`-&apos;<sp/>as<sp/>the<sp/>first<sp/>character<sp/>of<sp/>the<sp/>list<sp/>of<sp/>
                    option<sp/>characters
                </highlight>
            </codeline>
            <codeline lineno="171">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>selects<sp/>this<sp/>mode<sp/>of<sp/>operation.
                </highlight>
            </codeline>
            <codeline lineno="172">
                <highlight class="comment"></highlight>
            </codeline>
            <codeline lineno="173">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>The<sp/>special<sp/>argument<sp/>`--&apos;<sp/>forces<sp/>an<sp/>end<sp/>of<sp/>option-scanning
                    <sp/>regardless
                </highlight>
            </codeline>
            <codeline lineno="174">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>of<sp/>the<sp/>value<sp/>of<sp/>`ordering&apos;.
                    <sp/>
                    <sp/>In<sp/>the<sp/>case<sp/>of<sp/>RETURN_IN_ORDER,<sp/>only
                </highlight>
            </codeline>
            <codeline lineno="175">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>`--&apos;<sp/>can<sp/>cause<sp/>`getopt&apos;<sp/>to<sp/>return<sp/>EOF<sp/>with<sp/>`optind&apos;
                    <sp/>!=<sp/>ARGC.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="176">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="177">
                <highlight class="normal"></highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">enum</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="178">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="179">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <ref refid="getopt_8c_1a06fc87d81c62e9abb8790b6e5713c55ba0e73a0691c110b1442d8364d1d12eccc"
                         kindref="member">REQUIRE_ORDER</ref>,
                    <sp/>
                    <ref refid="getopt_8c_1a06fc87d81c62e9abb8790b6e5713c55bacfdde4b47c27f4efbd832e1ac7f8a8fc"
                         kindref="member">PERMUTE</ref>,
                    <sp/>
                    <ref refid="getopt_8c_1a06fc87d81c62e9abb8790b6e5713c55ba3c56550bfafe809d9214b863b69c31c5"
                         kindref="member">RETURN_IN_ORDER
                    </ref>
                </highlight>
            </codeline>
            <codeline lineno="180">
                <highlight class="normal">}<sp/>ordering;
                </highlight>
            </codeline>
            <codeline lineno="181">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="182">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#ifdef
                    <sp/>
                    <sp/>__GNU_LIBRARY__
                </highlight>
            </codeline>
            <codeline lineno="183">
                <highlight class="preprocessor"></highlight>
                <highlight class="comment">/*<sp/>We<sp/>want<sp/>to<sp/>avoid<sp/>inclusion<sp/>of<sp/>string.h<sp/>
                    with<sp/>non-GNU<sp/>libraries
                </highlight>
            </codeline>
            <codeline lineno="184">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>because<sp/>there<sp/>are<sp/>many<sp/>ways<sp/>it<sp/>can<sp/>cause<sp/>trouble.
                </highlight>
            </codeline>
            <codeline lineno="185">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>On<sp/>some<sp/>systems,<sp/>it<sp/>contains<sp/>special<sp/>magic<sp/>macros<sp/>that<sp/>don&apos;t
                    <sp/>work
                </highlight>
            </codeline>
            <codeline lineno="186">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>in<sp/>GCC.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="187">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&lt;string.h&gt;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="188">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#define<sp/>my_index
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>strchr
                </highlight>
            </codeline>
            <codeline lineno="189">
                <highlight class="preprocessor"></highlight>
                <highlight class="preprocessor">#define<sp/>my_bcopy(src,<sp/>dst,<sp/>n)
                    <sp/>
                    <sp/>
                    <sp/>memcpy<sp/>((dst),<sp/>(src),<sp/>(n))
                </highlight>
            </codeline>
            <codeline lineno="190">
                <highlight class="preprocessor"></highlight>
                <highlight class="preprocessor">#else</highlight>
            </codeline>
            <codeline lineno="191">
                <highlight class="preprocessor"></highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="192">
                <highlight class="normal"></highlight>
                <highlight class="comment">/*<sp/>Avoid<sp/>depending<sp/>on<sp/>library<sp/>functions<sp/>or<sp/>files
                </highlight>
            </codeline>
            <codeline lineno="193">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>whose<sp/>names<sp/>are<sp/>inconsistent.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="194">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="195">
                <highlight class="normal"></highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*
                    <ref refid="getopt_8c_1aee28fd8a0e40b6d958f7d20348e45368" kindref="member">getenv</ref>
                    <sp/>();
                </highlight>
            </codeline>
            <codeline lineno="196">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="197">
                <highlight class="normal"></highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
            </codeline>
            <codeline lineno="198">
                <highlight class="normal">my_index<sp/>(str,
                    <sp/>
                    <ref refid="getopt_8c_1a3cda899eb92cb06bf6a861f9790ba235" kindref="member">chr</ref>)
                </highlight>
            </codeline>
            <codeline lineno="199">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>const
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*str;
                </highlight>
            </codeline>
            <codeline lineno="200">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="getopt_8c_1a3cda899eb92cb06bf6a861f9790ba235" kindref="member">chr</ref>;
                </highlight>
            </codeline>
            <codeline lineno="201">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="202">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">while</highlight>
                <highlight class="normal"><sp/>(*str)
                </highlight>
            </codeline>
            <codeline lineno="203">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="204">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(*str<sp/>==<sp/>chr)
                </highlight>
            </codeline>
            <codeline lineno="205">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*)<sp/>str;
                </highlight>
            </codeline>
            <codeline lineno="206">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>str++;
                </highlight>
            </codeline>
            <codeline lineno="207">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="208">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="209">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="210">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="211">
                <highlight class="normal"></highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="212">
                <highlight class="normal">
                    <ref refid="getopt_8c_1a01942c8c95c71028450a48bd1bf278fa" kindref="member">my_bcopy</ref>
                    <sp/>(from,
                    <sp/>
                    <ref refid="getopt_8c_1a7347696a672e26aa962713eb3ab3cdb6" kindref="member">to</ref>,
                    <sp/>
                    <ref refid="getopt_8c_1a439227feff9d7f55384e8780cfc2eb82" kindref="member">size</ref>)
                </highlight>
            </codeline>
            <codeline lineno="213">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>const
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*from;
                </highlight>
            </codeline>
            <codeline lineno="214">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*<ref refid="getopt_8c_1a7347696a672e26aa962713eb3ab3cdb6"
                                                     kindref="member">to</ref>;
                </highlight>
            </codeline>
            <codeline lineno="215">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="getopt_8c_1a439227feff9d7f55384e8780cfc2eb82" kindref="member">size</ref>;
                </highlight>
            </codeline>
            <codeline lineno="216">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="217">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>i;
                </highlight>
            </codeline>
            <codeline lineno="218">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;
                    <sp/>
                    <ref refid="getopt_8c_1a439227feff9d7f55384e8780cfc2eb82" kindref="member">size</ref>;<sp/>i++)
                </highlight>
            </codeline>
            <codeline lineno="219">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>to[i]<sp/>=<sp/>from[i];
                </highlight>
            </codeline>
            <codeline lineno="220">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="221">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>GNU<sp/>C<sp/>library.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="preprocessor"></highlight>
            </codeline>
            <codeline lineno="222">
                <highlight class="preprocessor"></highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="223">
                <highlight class="normal"></highlight>
                <highlight class="comment">/*<sp/>Handle<sp/>permutation<sp/>of<sp/>arguments.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="224">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="225">
                <highlight class="normal"></highlight>
                <highlight class="comment">/*<sp/>Describe<sp/>the<sp/>part<sp/>of<sp/>ARGV<sp/>that<sp/>contains<sp/>
                    non-options<sp/>that<sp/>have
                </highlight>
            </codeline>
            <codeline lineno="226">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>been<sp/>skipped.
                    <sp/>
                    <sp/>`first_nonopt&apos;<sp/>is<sp/>the<sp/>index<sp/>in<sp/>ARGV<sp/>of<sp/>the<sp/>first<sp/>of
                    <sp/>them;
                </highlight>
            </codeline>
            <codeline lineno="227">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>`last_nonopt&apos;<sp/>is<sp/>the<sp/>index<sp/>after<sp/>the<sp/>last<sp/>of<sp/>them.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="228">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="229">
                <highlight class="normal"></highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>first_nonopt;
                </highlight>
            </codeline>
            <codeline lineno="230">
                <highlight class="normal"></highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>last_nonopt;
                </highlight>
            </codeline>
            <codeline lineno="231">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="232">
                <highlight class="normal"></highlight>
                <highlight class="comment">/*<sp/>Exchange<sp/>two<sp/>adjacent<sp/>subsequences<sp/>of<sp/>ARGV.
                </highlight>
            </codeline>
            <codeline lineno="233">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>One<sp/>subsequence<sp/>is<sp/>elements<sp/>[first_nonopt,last_nonopt)
                </highlight>
            </codeline>
            <codeline lineno="234">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>which<sp/>contains<sp/>all<sp/>the<sp/>non-options<sp/>that<sp/>have<sp/>been<sp/>skipped<sp/>
                    so<sp/>far.
                </highlight>
            </codeline>
            <codeline lineno="235">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>The<sp/>other<sp/>is<sp/>elements<sp/>[last_nonopt,optind),<sp/>which<sp/>contains<sp/>all
                </highlight>
            </codeline>
            <codeline lineno="236">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>the<sp/>options<sp/>processed<sp/>since<sp/>those<sp/>non-options<sp/>were<sp/>skipped.
                </highlight>
            </codeline>
            <codeline lineno="237">
                <highlight class="comment"></highlight>
            </codeline>
            <codeline lineno="238">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>`first_nonopt&apos;<sp/>and<sp/>`last_nonopt&apos;<sp/>are<sp/>relocated<sp/>so<sp/>that<sp/>
                    they<sp/>describe
                </highlight>
            </codeline>
            <codeline lineno="239">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>the<sp/>new<sp/>indices<sp/>of<sp/>the<sp/>non-options<sp/>in<sp/>ARGV<sp/>after<sp/>they<sp/>
                    are<sp/>moved.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="240">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="241">
                <highlight class="normal"></highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="242">
                <highlight class="normal">exchange<sp/>(<ref refid="getopt1_8c_1a53f75c6ccd3a8828f9aa07f4bb698ad4"
                                                             kindref="member">argv</ref>)
                </highlight>
            </codeline>
            <codeline lineno="243">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>char<sp/>**<ref refid="getopt1_8c_1a53f75c6ccd3a8828f9aa07f4bb698ad4" kindref="member">
                    argv</ref>;
                </highlight>
            </codeline>
            <codeline lineno="244">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="245">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>nonopts_size<sp/>=<sp/>(last_nonopt<sp/>-<sp/>first_nonopt)<sp/>*
                    <sp/>
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*);
                </highlight>
            </codeline>
            <codeline lineno="246">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>**
                    <ref refid="getopt_8c_1a7d6942871dbca7bb8aab0f5461218d37" kindref="member">temp</ref>
                    <sp/>=<sp/>(
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>**)
                    <sp/>
                    <ref refid="getopt_8c_1a1b2b9d131a95440d9a0b302b1b22ff92" kindref="member">__alloca</ref>
                    <sp/>(nonopts_size);
                </highlight>
            </codeline>
            <codeline lineno="247">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="248">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>Interchange<sp/>the<sp/>two<sp/>blocks<sp/>of<sp/>data<sp/>in<sp/>
                    ARGV.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="249">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="250">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <ref refid="getopt_8c_1a01942c8c95c71028450a48bd1bf278fa" kindref="member">my_bcopy</ref>
                    <sp/>((
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*)<sp/>&amp;argv[first_nonopt],<sp/>(
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*)<sp/>temp,<sp/>nonopts_size);
                </highlight>
            </codeline>
            <codeline lineno="251">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <ref refid="getopt_8c_1a01942c8c95c71028450a48bd1bf278fa" kindref="member">my_bcopy</ref>
                    <sp/>((
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*)<sp/>&amp;argv[last_nonopt],<sp/>(
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*)<sp/>&amp;argv[first_nonopt],
                </highlight>
            </codeline>
            <codeline lineno="252">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>(
                    <ref refid="getopt_8c_1a1222c80280fecf9e4e99f95319212c49" kindref="member">optind</ref>
                    <sp/>-<sp/>last_nonopt)<sp/>*
                    <sp/>
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*));
                </highlight>
            </codeline>
            <codeline lineno="253">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <ref refid="getopt_8c_1a01942c8c95c71028450a48bd1bf278fa" kindref="member">my_bcopy</ref>
                    <sp/>((
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*)<sp/>temp,
                </highlight>
            </codeline>
            <codeline lineno="254">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>(
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*)<sp/>&amp;argv[first_nonopt<sp/>+
                    <sp/>
                    <ref refid="getopt_8c_1a1222c80280fecf9e4e99f95319212c49" kindref="member">optind</ref>
                    <sp/>-<sp/>last_nonopt],
                </highlight>
            </codeline>
            <codeline lineno="255">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>nonopts_size);
                </highlight>
            </codeline>
            <codeline lineno="256">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="257">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>Update<sp/>records<sp/>for<sp/>the<sp/>slots<sp/>the<sp/>non-options
                    <sp/>now<sp/>occupy.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="258">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="259">
                <highlight class="normal">
                    <sp/>
                    <sp/>first_nonopt<sp/>+=<sp/>(
                    <ref refid="getopt_8c_1a1222c80280fecf9e4e99f95319212c49" kindref="member">optind</ref>
                    <sp/>-<sp/>last_nonopt);
                </highlight>
            </codeline>
            <codeline lineno="260">
                <highlight class="normal">
                    <sp/>
                    <sp/>last_nonopt<sp/>=
                    <sp/>
                    <ref refid="getopt_8c_1a1222c80280fecf9e4e99f95319212c49" kindref="member">optind</ref>;
                </highlight>
            </codeline>
            <codeline lineno="261">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="262">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="263">
                <highlight class="normal"></highlight>
                <highlight class="comment">/*<sp/>Scan<sp/>elements<sp/>of<sp/>ARGV<sp/>(whose<sp/>length<sp/>is<sp/>
                    ARGC)<sp/>for<sp/>option<sp/>characters
                </highlight>
            </codeline>
            <codeline lineno="264">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>given<sp/>in<sp/>OPTSTRING.
                </highlight>
            </codeline>
            <codeline lineno="265">
                <highlight class="comment"></highlight>
            </codeline>
            <codeline lineno="266">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>If<sp/>an<sp/>element<sp/>of<sp/>ARGV<sp/>starts<sp/>with<sp/>&apos;-&apos;,<sp/>and<sp/>is
                    <sp/>not<sp/>exactly<sp/>&quot;-&quot;<sp/>or<sp/>&quot;--&quot;,
                </highlight>
            </codeline>
            <codeline lineno="267">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>then<sp/>it<sp/>is<sp/>an<sp/>option<sp/>element.
                    <sp/>
                    <sp/>The<sp/>characters<sp/>of<sp/>this<sp/>element
                </highlight>
            </codeline>
            <codeline lineno="268">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>(aside<sp/>from<sp/>the<sp/>initial<sp/>&apos;-&apos;)<sp/>are<sp/>option<sp/>characters.
                    <sp/>
                    <sp/>If<sp/>`getopt&apos;
                </highlight>
            </codeline>
            <codeline lineno="269">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>is<sp/>called<sp/>repeatedly,<sp/>it<sp/>returns<sp/>successively<sp/>each<sp/>of<sp/>the<sp/>
                    option<sp/>characters
                </highlight>
            </codeline>
            <codeline lineno="270">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>from<sp/>each<sp/>of<sp/>the<sp/>option<sp/>elements.
                </highlight>
            </codeline>
            <codeline lineno="271">
                <highlight class="comment"></highlight>
            </codeline>
            <codeline lineno="272">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>If<sp/>`getopt&apos;<sp/>finds<sp/>another<sp/>option<sp/>character,<sp/>it<sp/>returns<sp/>
                    that<sp/>character,
                </highlight>
            </codeline>
            <codeline lineno="273">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>updating<sp/>`optind&apos;<sp/>and<sp/>`nextchar&apos;<sp/>so<sp/>that<sp/>the<sp/>next<sp/>
                    call<sp/>to<sp/>`getopt&apos;<sp/>can
                </highlight>
            </codeline>
            <codeline lineno="274">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>resume<sp/>the<sp/>scan<sp/>with<sp/>the<sp/>following<sp/>option<sp/>character<sp/>or<sp/>
                    ARGV-element.
                </highlight>
            </codeline>
            <codeline lineno="275">
                <highlight class="comment"></highlight>
            </codeline>
            <codeline lineno="276">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>If<sp/>there<sp/>are<sp/>no<sp/>more<sp/>option<sp/>characters,<sp/>`getopt&apos;<sp/>returns
                    <sp/>`EOF&apos;.
                </highlight>
            </codeline>
            <codeline lineno="277">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>Then<sp/>`optind&apos;<sp/>is<sp/>the<sp/>index<sp/>in<sp/>ARGV<sp/>of<sp/>the<sp/>first<sp/>
                    ARGV-element
                </highlight>
            </codeline>
            <codeline lineno="278">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>that<sp/>is<sp/>not<sp/>an<sp/>option.
                    <sp/>
                    <sp/>(The<sp/>ARGV-elements<sp/>have<sp/>been<sp/>permuted
                </highlight>
            </codeline>
            <codeline lineno="279">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>so<sp/>that<sp/>those<sp/>that<sp/>are<sp/>not<sp/>options<sp/>now<sp/>come<sp/>last.)
                </highlight>
            </codeline>
            <codeline lineno="280">
                <highlight class="comment"></highlight>
            </codeline>
            <codeline lineno="281">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>OPTSTRING<sp/>is<sp/>a<sp/>string<sp/>containing<sp/>the<sp/>legitimate<sp/>option<sp/>
                    characters.
                </highlight>
            </codeline>
            <codeline lineno="282">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>If<sp/>an<sp/>option<sp/>character<sp/>is<sp/>seen<sp/>that<sp/>is<sp/>not<sp/>listed<sp/>in
                    <sp/>OPTSTRING,
                </highlight>
            </codeline>
            <codeline lineno="283">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>return<sp/>&apos;?&apos;<sp/>after<sp/>printing<sp/>an<sp/>error<sp/>message.
                    <sp/>
                    <sp/>If<sp/>you<sp/>set<sp/>`opterr&apos;<sp/>to
                </highlight>
            </codeline>
            <codeline lineno="284">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>zero,<sp/>the<sp/>error<sp/>message<sp/>is<sp/>suppressed<sp/>but<sp/>we<sp/>still<sp/>return
                    <sp/>&apos;?&apos;.
                </highlight>
            </codeline>
            <codeline lineno="285">
                <highlight class="comment"></highlight>
            </codeline>
            <codeline lineno="286">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>If<sp/>a<sp/>char<sp/>in<sp/>OPTSTRING<sp/>is<sp/>followed<sp/>by<sp/>a<sp/>colon,<sp/>that
                    <sp/>means<sp/>it<sp/>wants<sp/>an<sp/>arg,
                </highlight>
            </codeline>
            <codeline lineno="287">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>so<sp/>the<sp/>following<sp/>text<sp/>in<sp/>the<sp/>same<sp/>ARGV-element,<sp/>or<sp/>the<sp/>
                    text<sp/>of<sp/>the<sp/>following
                </highlight>
            </codeline>
            <codeline lineno="288">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>ARGV-element,<sp/>is<sp/>returned<sp/>in<sp/>`optarg&apos;.
                    <sp/>
                    <sp/>Two<sp/>colons<sp/>mean<sp/>an<sp/>option<sp/>that
                </highlight>
            </codeline>
            <codeline lineno="289">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>wants<sp/>an<sp/>optional<sp/>arg;<sp/>if<sp/>there<sp/>is<sp/>text<sp/>in<sp/>the<sp/>current
                    <sp/>ARGV-element,
                </highlight>
            </codeline>
            <codeline lineno="290">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>it<sp/>is<sp/>returned<sp/>in<sp/>`optarg&apos;,<sp/>otherwise<sp/>`optarg&apos;<sp/>is<sp/>set
                    <sp/>to<sp/>zero.
                </highlight>
            </codeline>
            <codeline lineno="291">
                <highlight class="comment"></highlight>
            </codeline>
            <codeline lineno="292">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>If<sp/>OPTSTRING<sp/>starts<sp/>with<sp/>`-&apos;<sp/>or<sp/>`+&apos;,<sp/>it<sp/>requests<sp/>
                    different<sp/>methods<sp/>of
                </highlight>
            </codeline>
            <codeline lineno="293">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>handling<sp/>the<sp/>non-option<sp/>ARGV-elements.
                </highlight>
            </codeline>
            <codeline lineno="294">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>See<sp/>the<sp/>comments<sp/>about<sp/>RETURN_IN_ORDER<sp/>and<sp/>REQUIRE_ORDER,<sp/>above.
                </highlight>
            </codeline>
            <codeline lineno="295">
                <highlight class="comment"></highlight>
            </codeline>
            <codeline lineno="296">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>Long-named<sp/>options<sp/>begin<sp/>with<sp/>`--&apos;<sp/>instead<sp/>of<sp/>`-&apos;.
                </highlight>
            </codeline>
            <codeline lineno="297">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>Their<sp/>names<sp/>may<sp/>be<sp/>abbreviated<sp/>as<sp/>long<sp/>as<sp/>the<sp/>abbreviation
                    <sp/>is<sp/>unique
                </highlight>
            </codeline>
            <codeline lineno="298">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>or<sp/>is<sp/>an<sp/>exact<sp/>match<sp/>for<sp/>some<sp/>defined<sp/>option.
                    <sp/>
                    <sp/>If<sp/>they<sp/>have<sp/>an
                </highlight>
            </codeline>
            <codeline lineno="299">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>argument,<sp/>it<sp/>follows<sp/>the<sp/>option<sp/>name<sp/>in<sp/>the<sp/>same<sp/>
                    ARGV-element,<sp/>separated
                </highlight>
            </codeline>
            <codeline lineno="300">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>from<sp/>the<sp/>option<sp/>name<sp/>by<sp/>a<sp/>`=&apos;,<sp/>or<sp/>else<sp/>the<sp/>in<sp/>
                    next<sp/>ARGV-element.
                </highlight>
            </codeline>
            <codeline lineno="301">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>When<sp/>`getopt&apos;<sp/>finds<sp/>a<sp/>long-named<sp/>option,<sp/>it<sp/>returns<sp/>0<sp/>
                    if<sp/>that<sp/>option&apos;s
                </highlight>
            </codeline>
            <codeline lineno="302">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>`flag&apos;<sp/>field<sp/>is<sp/>nonzero,<sp/>the<sp/>value<sp/>of<sp/>the<sp/>option&apos;s
                    <sp/>`val&apos;<sp/>field
                </highlight>
            </codeline>
            <codeline lineno="303">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>if<sp/>the<sp/>`flag&apos;<sp/>field<sp/>is<sp/>zero.
                </highlight>
            </codeline>
            <codeline lineno="304">
                <highlight class="comment"></highlight>
            </codeline>
            <codeline lineno="305">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>The<sp/>elements<sp/>of<sp/>ARGV<sp/>aren&apos;t<sp/>really<sp/>const,<sp/>because<sp/>we<sp/>
                    permute<sp/>them.
                </highlight>
            </codeline>
            <codeline lineno="306">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>But<sp/>we<sp/>pretend<sp/>they&apos;re<sp/>const<sp/>in<sp/>the<sp/>prototype<sp/>to<sp/>be
                    <sp/>compatible
                </highlight>
            </codeline>
            <codeline lineno="307">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>with<sp/>other<sp/>systems.
                </highlight>
            </codeline>
            <codeline lineno="308">
                <highlight class="comment"></highlight>
            </codeline>
            <codeline lineno="309">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>LONGOPTS<sp/>is<sp/>a<sp/>vector<sp/>of<sp/>`struct<sp/>option&apos;<sp/>terminated<sp/>by<sp/>
                    an
                </highlight>
            </codeline>
            <codeline lineno="310">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>element<sp/>containing<sp/>a<sp/>name<sp/>which<sp/>is<sp/>zero.
                </highlight>
            </codeline>
            <codeline lineno="311">
                <highlight class="comment"></highlight>
            </codeline>
            <codeline lineno="312">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>LONGIND<sp/>returns<sp/>the<sp/>index<sp/>in<sp/>LONGOPT<sp/>of<sp/>the<sp/>long-named<sp/>
                    option<sp/>found.
                </highlight>
            </codeline>
            <codeline lineno="313">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>It<sp/>is<sp/>only<sp/>valid<sp/>when<sp/>a<sp/>long-named<sp/>option<sp/>has<sp/>been<sp/>
                    found<sp/>by<sp/>the<sp/>most
                </highlight>
            </codeline>
            <codeline lineno="314">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>recent<sp/>call.
                </highlight>
            </codeline>
            <codeline lineno="315">
                <highlight class="comment"></highlight>
            </codeline>
            <codeline lineno="316">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>If<sp/>LONG_ONLY<sp/>is<sp/>nonzero,<sp/>&apos;-&apos;<sp/>as<sp/>well<sp/>as<sp/>&apos;--&apos;
                    <sp/>can<sp/>introduce
                </highlight>
            </codeline>
            <codeline lineno="317">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>long-named<sp/>options.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="318">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="319">
                <highlight class="normal"></highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="320">
                <highlight class="normal">
                    <ref refid="getopt_8h_1a60428225710059ca135c6b2a8941855f" kindref="member">_getopt_internal</ref>
                    <sp/>(<ref refid="getopt_8c_1a899ede614ac21dd98628cc8cc682e95a" kindref="member">argc</ref>,<sp/>
                    argv,
                    <sp/>
                    <ref refid="getopt_8c_1a5417868d315874dd853f233e3ffb7ae9" kindref="member">optstring</ref>,
                    <sp/>
                    <ref refid="getopt_8c_1a4e29b6c1cece6c0b4ded5de2accb408f" kindref="member">longopts</ref>,
                    <sp/>
                    <ref refid="getopt_8c_1ab6dd53082bcf193c98cf297297b6384d" kindref="member">longind</ref>,
                    <sp/>
                    <ref refid="getopt_8c_1afc95d012dd291b7e46b6628c5f69e7f8" kindref="member">long_only</ref>)
                </highlight>
            </codeline>
            <codeline lineno="321">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>int
                    <sp/>
                    <ref refid="getopt_8c_1a899ede614ac21dd98628cc8cc682e95a" kindref="member">argc</ref>;
                </highlight>
            </codeline>
            <codeline lineno="322">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*const<sp/>*argv;
                </highlight>
            </codeline>
            <codeline lineno="323">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>const
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*<ref refid="getopt_8c_1a5417868d315874dd853f233e3ffb7ae9"
                                                     kindref="member">optstring</ref>;
                </highlight>
            </codeline>
            <codeline lineno="324">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>const<sp/>struct
                    <sp/>
                    <ref refid="structoption" kindref="compound">option</ref>
                    <sp/>*<ref refid="getopt_8c_1a4e29b6c1cece6c0b4ded5de2accb408f" kindref="member">longopts</ref>;
                </highlight>
            </codeline>
            <codeline lineno="325">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>*<ref refid="getopt_8c_1ab6dd53082bcf193c98cf297297b6384d"
                                                     kindref="member">longind</ref>;
                </highlight>
            </codeline>
            <codeline lineno="326">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="getopt_8c_1afc95d012dd291b7e46b6628c5f69e7f8" kindref="member">long_only</ref>;
                </highlight>
            </codeline>
            <codeline lineno="327">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="328">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>option_index;
                </highlight>
            </codeline>
            <codeline lineno="329">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="330">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <ref refid="getopt_8c_1ab60cc9ce211468617579bb9d1ca6bcd9" kindref="member">optarg</ref>
                    <sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="331">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="332">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>Initialize<sp/>the<sp/>internal<sp/>data<sp/>when<sp/>the<sp/>first
                    <sp/>call<sp/>is<sp/>made.
                </highlight>
            </codeline>
            <codeline lineno="333">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Start<sp/>processing<sp/>options<sp/>with<sp/>ARGV-element<sp/>1<sp/>(since<sp/>ARGV-element
                    <sp/>0
                </highlight>
            </codeline>
            <codeline lineno="334">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>is<sp/>the<sp/>program<sp/>name);<sp/>the<sp/>sequence<sp/>of<sp/>previously<sp/>skipped
                </highlight>
            </codeline>
            <codeline lineno="335">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>non-option<sp/>ARGV-elements<sp/>is<sp/>empty.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="336">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="337">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(
                    <ref refid="getopt_8c_1a1222c80280fecf9e4e99f95319212c49" kindref="member">optind</ref>
                    <sp/>==<sp/>0)
                </highlight>
            </codeline>
            <codeline lineno="338">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="339">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>first_nonopt<sp/>=<sp/>last_nonopt<sp/>=
                    <sp/>
                    <ref refid="getopt_8c_1a1222c80280fecf9e4e99f95319212c49" kindref="member">optind</ref>
                    <sp/>=<sp/>1;
                </highlight>
            </codeline>
            <codeline lineno="340">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="341">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>nextchar<sp/>=
                    <sp/>
                    <ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;
                </highlight>
            </codeline>
            <codeline lineno="342">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="343">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>Determine<sp/>how<sp/>to<sp/>handle<sp/>the<sp/>ordering<sp/>of<sp/>
                    options<sp/>and<sp/>nonoptions.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="344">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="345">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(optstring[0]<sp/>==
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;-&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="346">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="347">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ordering<sp/>=
                    <sp/>
                    <ref refid="getopt_8c_1a06fc87d81c62e9abb8790b6e5713c55ba3c56550bfafe809d9214b863b69c31c5"
                         kindref="member">RETURN_IN_ORDER</ref>;
                </highlight>
            </codeline>
            <codeline lineno="348">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>++<ref refid="getopt_8c_1a5417868d315874dd853f233e3ffb7ae9" kindref="member">optstring</ref>;
                </highlight>
            </codeline>
            <codeline lineno="349">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="350">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(optstring[0]<sp/>==
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;+&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="351">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="352">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ordering<sp/>=
                    <sp/>
                    <ref refid="getopt_8c_1a06fc87d81c62e9abb8790b6e5713c55ba0e73a0691c110b1442d8364d1d12eccc"
                         kindref="member">REQUIRE_ORDER</ref>;
                </highlight>
            </codeline>
            <codeline lineno="353">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>++<ref refid="getopt_8c_1a5417868d315874dd853f233e3ffb7ae9" kindref="member">optstring</ref>;
                </highlight>
            </codeline>
            <codeline lineno="354">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="355">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(
                    <ref refid="getopt_8c_1aee28fd8a0e40b6d958f7d20348e45368" kindref="member">getenv</ref>
                    <sp/>(
                </highlight>
                <highlight class="stringliteral">&quot;POSIXLY_CORRECT&quot;</highlight>
                <highlight class="normal">)<sp/>!=
                    <sp/>
                    <ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)
                </highlight>
            </codeline>
            <codeline lineno="356">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ordering<sp/>=
                    <sp/>
                    <ref refid="getopt_8c_1a06fc87d81c62e9abb8790b6e5713c55ba0e73a0691c110b1442d8364d1d12eccc"
                         kindref="member">REQUIRE_ORDER</ref>;
                </highlight>
            </codeline>
            <codeline lineno="357">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="358">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ordering<sp/>=
                    <sp/>
                    <ref refid="getopt_8c_1a06fc87d81c62e9abb8790b6e5713c55bacfdde4b47c27f4efbd832e1ac7f8a8fc"
                         kindref="member">PERMUTE</ref>;
                </highlight>
            </codeline>
            <codeline lineno="359">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="360">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="361">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(nextchar<sp/>==
                    <sp/>
                    <ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>
                    <sp/>||<sp/>*nextchar<sp/>==
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\0&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="362">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="363">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(ordering<sp/>==
                    <sp/>
                    <ref refid="getopt_8c_1a06fc87d81c62e9abb8790b6e5713c55bacfdde4b47c27f4efbd832e1ac7f8a8fc"
                         kindref="member">PERMUTE</ref>)
                </highlight>
            </codeline>
            <codeline lineno="364">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="365">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>If<sp/>we<sp/>have<sp/>just<sp/>processed<sp/>some<sp/>options<sp/>
                    following<sp/>some<sp/>non-options,
                </highlight>
            </codeline>
            <codeline lineno="366">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>exchange<sp/>them<sp/>so<sp/>that<sp/>the<sp/>options<sp/>come<sp/>first.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="367">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="368">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(first_nonopt<sp/>!=<sp/>last_nonopt<sp/>&amp;&amp;<sp/>last_nonopt<sp/>
                    !=
                    <sp/>
                    <ref refid="getopt_8c_1a1222c80280fecf9e4e99f95319212c49" kindref="member">optind</ref>)
                </highlight>
            </codeline>
            <codeline lineno="369">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>exchange<sp/>((
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>**)<sp/>argv);
                </highlight>
            </codeline>
            <codeline lineno="370">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(last_nonopt<sp/>!=
                    <sp/>
                    <ref refid="getopt_8c_1a1222c80280fecf9e4e99f95319212c49" kindref="member">optind</ref>)
                </highlight>
            </codeline>
            <codeline lineno="371">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>first_nonopt<sp/>=
                    <sp/>
                    <ref refid="getopt_8c_1a1222c80280fecf9e4e99f95319212c49" kindref="member">optind</ref>;
                </highlight>
            </codeline>
            <codeline lineno="372">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="373">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>Now<sp/>skip<sp/>any<sp/>additional<sp/>non-options
                </highlight>
            </codeline>
            <codeline lineno="374">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>and<sp/>extend<sp/>the<sp/>range<sp/>of<sp/>non-options<sp/>previously<sp/>skipped.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="375">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="376">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">while</highlight>
                <highlight class="normal"><sp/>(
                    <ref refid="getopt_8c_1a1222c80280fecf9e4e99f95319212c49" kindref="member">optind</ref>
                    <sp/>&lt;<sp/>argc
                </highlight>
            </codeline>
            <codeline lineno="377">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>&amp;&amp;<sp/>(argv[<ref refid="getopt_8c_1a1222c80280fecf9e4e99f95319212c49"
                                                   kindref="member">optind</ref>][0]<sp/>!=
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;-&apos;</highlight>
                <highlight class="normal"><sp/>||<sp/>argv[<ref refid="getopt_8c_1a1222c80280fecf9e4e99f95319212c49"
                                                                kindref="member">optind</ref>][1]<sp/>==
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\0&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="378">
                <highlight class="normal">#ifdef<sp/>GETOPT_COMPAT
                </highlight>
            </codeline>
            <codeline lineno="379">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>&amp;&amp;<sp/>(longopts<sp/>==
                    <sp/>
                    <ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>
                </highlight>
            </codeline>
            <codeline lineno="380">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>||<sp/>argv[<ref refid="getopt_8c_1a1222c80280fecf9e4e99f95319212c49" kindref="member">
                    optind</ref>][0]<sp/>!=
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;+&apos;</highlight>
                <highlight class="normal"><sp/>||<sp/>argv[<ref refid="getopt_8c_1a1222c80280fecf9e4e99f95319212c49"
                                                                kindref="member">optind</ref>][1]<sp/>==
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\0&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="381">
                <highlight class="normal">#endif
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>GETOPT_COMPAT<sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="382">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>)
                </highlight>
            </codeline>
            <codeline lineno="383">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="getopt_8c_1a1222c80280fecf9e4e99f95319212c49" kindref="member">optind</ref>++;
                </highlight>
            </codeline>
            <codeline lineno="384">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>last_nonopt<sp/>=
                    <sp/>
                    <ref refid="getopt_8c_1a1222c80280fecf9e4e99f95319212c49" kindref="member">optind</ref>;
                </highlight>
            </codeline>
            <codeline lineno="385">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="386">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="387">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>Special<sp/>ARGV-element<sp/>`--&apos;<sp/>means<sp/>premature<sp/>end
                    <sp/>of<sp/>options.
                </highlight>
            </codeline>
            <codeline lineno="388">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Skip<sp/>it<sp/>like<sp/>a<sp/>null<sp/>option,
                </highlight>
            </codeline>
            <codeline lineno="389">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>then<sp/>exchange<sp/>with<sp/>previous<sp/>non-options<sp/>as<sp/>if<sp/>it<sp/>were<sp/>an
                    <sp/>option,
                </highlight>
            </codeline>
            <codeline lineno="390">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>then<sp/>skip<sp/>everything<sp/>else<sp/>like<sp/>a<sp/>non-option.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="391">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="392">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(
                    <ref refid="getopt_8c_1a1222c80280fecf9e4e99f95319212c49" kindref="member">optind</ref>
                    <sp/>!=<sp/>argc<sp/>&amp;&amp;<sp/>!strcmp<sp/>(argv[<ref
                            refid="getopt_8c_1a1222c80280fecf9e4e99f95319212c49" kindref="member">optind</ref>],
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;--&quot;</highlight>
                <highlight class="normal">))</highlight>
            </codeline>
            <codeline lineno="393">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="394">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>optind++;
                </highlight>
            </codeline>
            <codeline lineno="395">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="396">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(first_nonopt<sp/>!=<sp/>last_nonopt<sp/>&amp;&amp;<sp/>last_nonopt<sp/>
                    !=<sp/>optind)
                </highlight>
            </codeline>
            <codeline lineno="397">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>exchange<sp/>((
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>**)<sp/>argv);
                </highlight>
            </codeline>
            <codeline lineno="398">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(first_nonopt<sp/>==<sp/>last_nonopt)
                </highlight>
            </codeline>
            <codeline lineno="399">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>first_nonopt<sp/>=
                    <sp/>
                    <ref refid="getopt_8c_1a1222c80280fecf9e4e99f95319212c49" kindref="member">optind</ref>;
                </highlight>
            </codeline>
            <codeline lineno="400">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>last_nonopt<sp/>=
                    <sp/>
                    <ref refid="getopt_8c_1a899ede614ac21dd98628cc8cc682e95a" kindref="member">argc</ref>;
                </highlight>
            </codeline>
            <codeline lineno="401">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="402">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>optind<sp/>=
                    <sp/>
                    <ref refid="getopt_8c_1a899ede614ac21dd98628cc8cc682e95a" kindref="member">argc</ref>;
                </highlight>
            </codeline>
            <codeline lineno="403">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="404">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="405">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>If<sp/>we<sp/>have<sp/>done<sp/>all<sp/>the<sp/>ARGV-elements,<sp/>
                    stop<sp/>the<sp/>scan
                </highlight>
            </codeline>
            <codeline lineno="406">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>and<sp/>back<sp/>over<sp/>any<sp/>non-options<sp/>that<sp/>we<sp/>skipped<sp/>and<sp/>permuted.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="407">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="408">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(optind<sp/>==<sp/>argc)
                </highlight>
            </codeline>
            <codeline lineno="409">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="410">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>Set<sp/>the<sp/>next-arg-index<sp/>to<sp/>point<sp/>at<sp/>the<sp/>
                    non-options
                </highlight>
            </codeline>
            <codeline lineno="411">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>that<sp/>we<sp/>previously<sp/>skipped,<sp/>so<sp/>the<sp/>caller<sp/>will<sp/>digest<sp/>them.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="412">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(first_nonopt<sp/>!=<sp/>last_nonopt)
                </highlight>
            </codeline>
            <codeline lineno="413">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>optind<sp/>=<sp/>first_nonopt;
                </highlight>
            </codeline>
            <codeline lineno="414">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>EOF;
                </highlight>
            </codeline>
            <codeline lineno="415">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="416">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="417">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>If<sp/>we<sp/>have<sp/>come<sp/>to<sp/>a<sp/>non-option<sp/>and<sp/>
                    did<sp/>not<sp/>permute<sp/>it,
                </highlight>
            </codeline>
            <codeline lineno="418">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>either<sp/>stop<sp/>the<sp/>scan<sp/>or<sp/>describe<sp/>it<sp/>to<sp/>the<sp/>caller<sp/>and
                    <sp/>pass<sp/>it<sp/>by.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="419">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="420">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>((argv[optind][0]<sp/>!=
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;-&apos;</highlight>
                <highlight class="normal"><sp/>||<sp/>argv[optind][1]<sp/>==
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\0&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="421">
                <highlight class="normal">#ifdef<sp/>GETOPT_COMPAT
                </highlight>
            </codeline>
            <codeline lineno="422">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>&amp;&amp;<sp/>(longopts<sp/>==
                    <sp/>
                    <ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>
                </highlight>
            </codeline>
            <codeline lineno="423">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>||<sp/>argv[optind][0]<sp/>!=
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;+&apos;</highlight>
                <highlight class="normal"><sp/>||<sp/>argv[optind][1]<sp/>==
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\0&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="424">
                <highlight class="normal">#endif
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>GETOPT_COMPAT<sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="425">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>)
                </highlight>
            </codeline>
            <codeline lineno="426">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="427">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(ordering<sp/>==
                    <sp/>
                    <ref refid="getopt_8c_1a06fc87d81c62e9abb8790b6e5713c55ba0e73a0691c110b1442d8364d1d12eccc"
                         kindref="member">REQUIRE_ORDER</ref>)
                </highlight>
            </codeline>
            <codeline lineno="428">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>EOF;
                </highlight>
            </codeline>
            <codeline lineno="429">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="getopt_8c_1ab60cc9ce211468617579bb9d1ca6bcd9" kindref="member">optarg</ref>
                    <sp/>=<sp/>argv[optind++];
                </highlight>
            </codeline>
            <codeline lineno="430">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>1;
                </highlight>
            </codeline>
            <codeline lineno="431">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="432">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="433">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>We<sp/>have<sp/>found<sp/>another<sp/>option-ARGV-element.
                </highlight>
            </codeline>
            <codeline lineno="434">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Start<sp/>decoding<sp/>its<sp/>characters.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="435">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="436">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>nextchar<sp/>=<sp/>(argv[<ref refid="getopt_8c_1a1222c80280fecf9e4e99f95319212c49"
                                                       kindref="member">optind</ref>]<sp/>+<sp/>1
                </highlight>
            </codeline>
            <codeline lineno="437">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>+<sp/>(longopts<sp/>!=
                    <sp/>
                    <ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>
                    <sp/>&amp;&amp;<sp/>argv[<ref refid="getopt_8c_1a1222c80280fecf9e4e99f95319212c49" kindref="member">
                    optind</ref>][1]<sp/>==
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;-&apos;</highlight>
                <highlight class="normal">));</highlight>
            </codeline>
            <codeline lineno="438">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="439">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="440">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(longopts<sp/>!=
                    <sp/>
                    <ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>
                </highlight>
            </codeline>
            <codeline lineno="441">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>&amp;&amp;<sp/>((argv[optind][0]<sp/>==
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;-&apos;</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="442">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>&amp;&amp;<sp/>(argv[optind][1]<sp/>==
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;-&apos;</highlight>
                <highlight class="normal"><sp/>||<sp/>long_only))
                </highlight>
            </codeline>
            <codeline lineno="443">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#ifdef<sp/>GETOPT_COMPAT
                </highlight>
            </codeline>
            <codeline lineno="444">
                <highlight class="preprocessor"></highlight>
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>||<sp/>argv[<ref refid="getopt_8c_1a1222c80280fecf9e4e99f95319212c49" kindref="member">
                    optind</ref>][0]<sp/>==
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;+&apos;</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="445">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>GETOPT_COMPAT<sp/>*/
                </highlight>
                <highlight class="preprocessor"></highlight>
            </codeline>
            <codeline lineno="446">
                <highlight class="preprocessor"></highlight>
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>))
                </highlight>
            </codeline>
            <codeline lineno="447">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="448">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="structoption" kindref="compound">option</ref>
                    <sp/>*p;
                </highlight>
            </codeline>
            <codeline lineno="449">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*s<sp/>=<sp/>nextchar;
                </highlight>
            </codeline>
            <codeline lineno="450">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>exact<sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="451">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>ambig<sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="452">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="structoption" kindref="compound">option</ref>
                    <sp/>*pfound<sp/>=
                    <sp/>
                    <ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;
                </highlight>
            </codeline>
            <codeline lineno="453">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>indfound;
                </highlight>
            </codeline>
            <codeline lineno="454">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="455">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">while</highlight>
                <highlight class="normal"><sp/>(*s<sp/>&amp;&amp;<sp/>*s<sp/>!=
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;=&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="456">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>s++;
                </highlight>
            </codeline>
            <codeline lineno="457">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="458">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>Test<sp/>all<sp/>options<sp/>for<sp/>either<sp/>exact<sp/>match<sp/>or
                    <sp/>abbreviated<sp/>matches.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="459">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(p<sp/>=<sp/>longopts,<sp/>option_index<sp/>=<sp/>0;<sp/>p-&gt;<ref
                        refid="structoption_1a5ac083a645d964373f022d03df4849c8" kindref="member">name</ref>;
                </highlight>
            </codeline>
            <codeline lineno="460">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>p++,<sp/>option_index++)
                </highlight>
            </codeline>
            <codeline lineno="461">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!strncmp<sp/>(p-&gt;<ref
                        refid="structoption_1a5ac083a645d964373f022d03df4849c8" kindref="member">name</ref>,<sp/>
                    nextchar,<sp/>s<sp/>-<sp/>nextchar))
                </highlight>
            </codeline>
            <codeline lineno="462">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="463">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(s<sp/>-<sp/>nextchar<sp/>==<sp/>strlen<sp/>(p-&gt;<ref
                        refid="structoption_1a5ac083a645d964373f022d03df4849c8" kindref="member">name</ref>))
                </highlight>
            </codeline>
            <codeline lineno="464">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="465">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>Exact<sp/>match<sp/>found.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="466">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>pfound<sp/>=<sp/>p;
                </highlight>
            </codeline>
            <codeline lineno="467">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>indfound<sp/>=<sp/>option_index;
                </highlight>
            </codeline>
            <codeline lineno="468">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>exact<sp/>=<sp/>1;
                </highlight>
            </codeline>
            <codeline lineno="469">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">break</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="470">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="471">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(pfound<sp/>==
                    <sp/>
                    <ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)
                </highlight>
            </codeline>
            <codeline lineno="472">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="473">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>First<sp/>nonexact<sp/>match<sp/>found.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="474">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>pfound<sp/>=<sp/>p;
                </highlight>
            </codeline>
            <codeline lineno="475">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>indfound<sp/>=<sp/>option_index;
                </highlight>
            </codeline>
            <codeline lineno="476">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="477">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="478">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>Second<sp/>nonexact<sp/>match<sp/>found.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="479">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ambig<sp/>=<sp/>1;
                </highlight>
            </codeline>
            <codeline lineno="480">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="481">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="482">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(ambig<sp/>&amp;&amp;<sp/>!exact)
                </highlight>
            </codeline>
            <codeline lineno="483">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="484">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(<ref refid="getopt_8c_1ae30f05ee1e2e5652f174a35c7875d25e"
                                                     kindref="member">opterr</ref>)
                </highlight>
            </codeline>
            <codeline lineno="485">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>fprintf<sp/>(stderr,
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;%s:<sp/>option<sp/>`%s&apos;<sp/>is<sp/>ambiguous\n&quot;
                </highlight>
                <highlight class="normal">,</highlight>
            </codeline>
            <codeline lineno="486">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>argv[0],<sp/>argv[optind]);
                </highlight>
            </codeline>
            <codeline lineno="487">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>nextchar<sp/>+=<sp/>strlen<sp/>(nextchar);
                </highlight>
            </codeline>
            <codeline lineno="488">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>optind++;
                </highlight>
            </codeline>
            <codeline lineno="489">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;?&apos;</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="490">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="491">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="492">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(pfound<sp/>!=
                    <sp/>
                    <ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)
                </highlight>
            </codeline>
            <codeline lineno="493">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="494">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>option_index<sp/>=<sp/>indfound;
                </highlight>
            </codeline>
            <codeline lineno="495">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>optind++;
                </highlight>
            </codeline>
            <codeline lineno="496">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(*s)
                </highlight>
            </codeline>
            <codeline lineno="497">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="498">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>Don&apos;t<sp/>test<sp/>has_arg<sp/>with<sp/>&gt;,<sp/>because<sp/>
                    some<sp/>C<sp/>compilers<sp/>don&apos;t
                </highlight>
            </codeline>
            <codeline lineno="499">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>allow<sp/>it<sp/>to<sp/>be<sp/>used<sp/>on<sp/>enums.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="500">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(pfound-&gt;<ref refid="structoption_1afd57c1e532cb0bc43cc77ac7b4dd3350"
                                                                kindref="member">has_arg</ref>)
                </highlight>
            </codeline>
            <codeline lineno="501">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="getopt_8c_1ab60cc9ce211468617579bb9d1ca6bcd9" kindref="member">optarg</ref>
                    <sp/>=<sp/>s<sp/>+<sp/>1;
                </highlight>
            </codeline>
            <codeline lineno="502">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="503">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="504">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(<ref refid="getopt_8c_1ae30f05ee1e2e5652f174a35c7875d25e"
                                                     kindref="member">opterr</ref>)
                </highlight>
            </codeline>
            <codeline lineno="505">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="506">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(argv[optind<sp/>-<sp/>1][1]<sp/>==
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;-&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="507">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>--option<sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="508">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>fprintf<sp/>(stderr,
                </highlight>
            </codeline>
            <codeline lineno="509">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;%s:<sp/>option<sp/>`--%s&apos;<sp/>doesn&apos;t<sp/>allow<sp/>an
                    <sp/>argument\n&quot;
                </highlight>
                <highlight class="normal">,</highlight>
            </codeline>
            <codeline lineno="510">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>argv[0],<sp/>pfound-&gt;<ref refid="structoption_1a5ac083a645d964373f022d03df4849c8"
                                                      kindref="member">name</ref>);
                </highlight>
            </codeline>
            <codeline lineno="511">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="512">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>+option<sp/>or<sp/>-option<sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="513">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>fprintf<sp/>(stderr,
                </highlight>
            </codeline>
            <codeline lineno="514">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;%s:<sp/>option<sp/>`%c%s&apos;<sp/>doesn&apos;t<sp/>allow<sp/>an
                    <sp/>argument\n&quot;
                </highlight>
                <highlight class="normal">,</highlight>
            </codeline>
            <codeline lineno="515">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>argv[0],<sp/>argv[optind<sp/>-<sp/>1][0],<sp/>pfound-&gt;<ref
                        refid="structoption_1a5ac083a645d964373f022d03df4849c8" kindref="member">name</ref>);
                </highlight>
            </codeline>
            <codeline lineno="516">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="517">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>nextchar<sp/>+=<sp/>strlen<sp/>(nextchar);
                </highlight>
            </codeline>
            <codeline lineno="518">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;?&apos;</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="519">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="520">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="521">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(pfound-&gt;
                    <ref refid="structoption_1afd57c1e532cb0bc43cc77ac7b4dd3350" kindref="member">has_arg</ref>
                    <sp/>==<sp/>1)
                </highlight>
            </codeline>
            <codeline lineno="522">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="523">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(optind<sp/>&lt;<sp/>argc)
                </highlight>
            </codeline>
            <codeline lineno="524">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="getopt_8c_1ab60cc9ce211468617579bb9d1ca6bcd9" kindref="member">optarg</ref>
                    <sp/>=<sp/>argv[optind++];
                </highlight>
            </codeline>
            <codeline lineno="525">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="526">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="527">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(<ref refid="getopt_8c_1ae30f05ee1e2e5652f174a35c7875d25e"
                                                     kindref="member">opterr</ref>)
                </highlight>
            </codeline>
            <codeline lineno="528">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>fprintf<sp/>(stderr,
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;%s:<sp/>option<sp/>`%s&apos;<sp/>requires<sp/>an<sp/>argument\n&quot;
                </highlight>
                <highlight class="normal">,</highlight>
            </codeline>
            <codeline lineno="529">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>argv[0],<sp/>argv[optind<sp/>-<sp/>1]);
                </highlight>
            </codeline>
            <codeline lineno="530">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>nextchar<sp/>+=<sp/>strlen<sp/>(nextchar);
                </highlight>
            </codeline>
            <codeline lineno="531">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>optstring[0]<sp/>==
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;:&apos;</highlight>
                <highlight class="normal"><sp/>?
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;:&apos;</highlight>
                <highlight class="normal"><sp/>:
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;?&apos;</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="532">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="533">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="534">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>nextchar<sp/>+=<sp/>strlen<sp/>(nextchar);
                </highlight>
            </codeline>
            <codeline lineno="535">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(longind<sp/>!=
                    <sp/>
                    <ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)
                </highlight>
            </codeline>
            <codeline lineno="536">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*longind<sp/>=<sp/>option_index;
                </highlight>
            </codeline>
            <codeline lineno="537">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(pfound-&gt;<ref refid="structoption_1a4f1a91bc2d61b12ffb90ff2857d6a4d8"
                                                                kindref="member">flag</ref>)
                </highlight>
            </codeline>
            <codeline lineno="538">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="539">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*(pfound-&gt;<ref refid="structoption_1a4f1a91bc2d61b12ffb90ff2857d6a4d8" kindref="member">
                    flag</ref>)<sp/>=<sp/>pfound-&gt;<ref refid="structoption_1aa0ccb5ee6d882ee3605ff47745c6467b"
                                                          kindref="member">val</ref>;
                </highlight>
            </codeline>
            <codeline lineno="540">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="541">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="542">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>pfound-&gt;<ref refid="structoption_1aa0ccb5ee6d882ee3605ff47745c6467b"
                                                               kindref="member">val</ref>;
                </highlight>
            </codeline>
            <codeline lineno="543">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="544">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>Can&apos;t<sp/>find<sp/>it<sp/>as<sp/>a<sp/>long<sp/>option.
                    <sp/>
                    <sp/>If<sp/>this<sp/>is<sp/>not<sp/>getopt_long_only,
                </highlight>
            </codeline>
            <codeline lineno="545">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>or<sp/>the<sp/>option<sp/>starts<sp/>with<sp/>&apos;--&apos;<sp/>or<sp/>is<sp/>not<sp/>a<sp/>
                    valid<sp/>short
                </highlight>
            </codeline>
            <codeline lineno="546">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>option,<sp/>then<sp/>it&apos;s<sp/>an<sp/>error.
                </highlight>
            </codeline>
            <codeline lineno="547">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Otherwise<sp/>interpret<sp/>it<sp/>as<sp/>a<sp/>short<sp/>option.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="548">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!long_only<sp/>||<sp/>argv[optind][1]<sp/>==
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;-&apos;</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="549">
                <highlight class="normal">#ifdef<sp/>GETOPT_COMPAT
                </highlight>
            </codeline>
            <codeline lineno="550">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>||<sp/>argv[optind][0]<sp/>==
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;+&apos;</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="551">
                <highlight class="normal">#endif
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>GETOPT_COMPAT<sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="552">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>||<sp/>my_index<sp/>(optstring,<sp/>*nextchar)<sp/>==
                    <sp/>
                    <ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)
                </highlight>
            </codeline>
            <codeline lineno="553">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="554">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(<ref refid="getopt_8c_1ae30f05ee1e2e5652f174a35c7875d25e"
                                                     kindref="member">opterr</ref>)
                </highlight>
            </codeline>
            <codeline lineno="555">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="556">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(argv[optind][1]<sp/>==
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;-&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="557">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>--option<sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="558">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>fprintf<sp/>(stderr,
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;%s:<sp/>unrecognized<sp/>option<sp/>`--%s&apos;\n&quot;
                </highlight>
                <highlight class="normal">,</highlight>
            </codeline>
            <codeline lineno="559">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>argv[0],<sp/>nextchar);
                </highlight>
            </codeline>
            <codeline lineno="560">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="561">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>+option<sp/>or<sp/>-option<sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="562">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>fprintf<sp/>(stderr,
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;%s:<sp/>unrecognized<sp/>option<sp/>`%c%s&apos;\n&quot;
                </highlight>
                <highlight class="normal">,</highlight>
            </codeline>
            <codeline lineno="563">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>argv[0],<sp/>argv[optind][0],<sp/>nextchar);
                </highlight>
            </codeline>
            <codeline lineno="564">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="565">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>nextchar<sp/>=<sp/>(
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*)
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;&quot;</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="566">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>optind++;
                </highlight>
            </codeline>
            <codeline lineno="567">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;?&apos;</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="568">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="569">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="570">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="571">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>Look<sp/>at<sp/>and<sp/>handle<sp/>the<sp/>next<sp/>option-character.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="572">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="573">
                <highlight class="normal">
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="574">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="getopt_8c_1a66b97d6dee15f33d7b6731ccf48092cf" kindref="member">c</ref>
                    <sp/>=<sp/>*nextchar++;
                </highlight>
            </codeline>
            <codeline lineno="575">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*temp<sp/>=<sp/>my_index<sp/>(optstring,<sp/>c);
                </highlight>
            </codeline>
            <codeline lineno="576">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="577">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>Increment<sp/>`optind&apos;<sp/>when<sp/>we<sp/>start<sp/>to<sp/>
                    process<sp/>its<sp/>last<sp/>character.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="578">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(*nextchar<sp/>==
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\0&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="579">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>++<ref refid="getopt_8c_1a1222c80280fecf9e4e99f95319212c49" kindref="member">optind</ref>;
                </highlight>
            </codeline>
            <codeline lineno="580">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="581">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(temp<sp/>==
                    <sp/>
                    <ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>
                    <sp/>||<sp/>c<sp/>==
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;:&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="582">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="583">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(<ref refid="getopt_8c_1ae30f05ee1e2e5652f174a35c7875d25e"
                                                     kindref="member">opterr</ref>)
                </highlight>
            </codeline>
            <codeline lineno="584">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="585">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>0
                </highlight>
            </codeline>
            <codeline lineno="586">
                <highlight class="preprocessor"></highlight>
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(c<sp/>&lt;<sp/>040<sp/>||<sp/>c<sp/>&gt;=<sp/>0177)
                </highlight>
            </codeline>
            <codeline lineno="587">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>fprintf<sp/>(stderr,
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;%s:<sp/>unrecognized<sp/>option,<sp/>character<sp/>code<sp/>0%o\n&quot;
                </highlight>
                <highlight class="normal">,</highlight>
            </codeline>
            <codeline lineno="588">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>argv[0],<sp/>c);
                </highlight>
            </codeline>
            <codeline lineno="589">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="590">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>fprintf<sp/>(stderr,
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;%s:<sp/>unrecognized<sp/>option<sp/>`-%c&apos;\n&quot;
                </highlight>
                <highlight class="normal">,<sp/>argv[0],<sp/>c);
                </highlight>
            </codeline>
            <codeline lineno="591">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#else</highlight>
            </codeline>
            <codeline lineno="592">
                <highlight class="preprocessor"></highlight>
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>1003.2<sp/>specifies<sp/>the<sp/>format<sp/>of<sp/>this<sp/>message.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="593">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>fprintf<sp/>(stderr,
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;%s:<sp/>illegal<sp/>option<sp/>--<sp/>%c\n&quot;
                </highlight>
                <highlight class="normal">,<sp/>argv[0],<sp/>c);
                </highlight>
            </codeline>
            <codeline lineno="594">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
            </codeline>
            <codeline lineno="595">
                <highlight class="preprocessor"></highlight>
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="596">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="getopt_8c_1a475b8db98445da73e5f62a1ef6324b95" kindref="member">optopt</ref>
                    <sp/>=
                    <sp/>
                    <ref refid="getopt_8c_1a66b97d6dee15f33d7b6731ccf48092cf" kindref="member">c</ref>;
                </highlight>
            </codeline>
            <codeline lineno="597">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;?&apos;</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="598">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="599">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(temp[1]<sp/>==
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;:&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="600">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="601">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(temp[2]<sp/>==
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;:&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="602">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="603">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>This<sp/>is<sp/>an<sp/>option<sp/>that<sp/>accepts<sp/>an<sp/>argument
                    <sp/>optionally.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="604">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(*nextchar<sp/>!=
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\0&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="605">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="606">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="getopt_8c_1ab60cc9ce211468617579bb9d1ca6bcd9" kindref="member">optarg</ref>
                    <sp/>=<sp/>nextchar;
                </highlight>
            </codeline>
            <codeline lineno="607">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>optind++;
                </highlight>
            </codeline>
            <codeline lineno="608">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="609">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="610">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="getopt_8c_1ab60cc9ce211468617579bb9d1ca6bcd9" kindref="member">optarg</ref>
                    <sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="611">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>nextchar<sp/>=
                    <sp/>
                    <ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;
                </highlight>
            </codeline>
            <codeline lineno="612">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="613">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="614">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="615">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>This<sp/>is<sp/>an<sp/>option<sp/>that<sp/>requires<sp/>an<sp/>
                    argument.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="616">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(*nextchar<sp/>!=
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\0&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="617">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="618">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="getopt_8c_1ab60cc9ce211468617579bb9d1ca6bcd9" kindref="member">optarg</ref>
                    <sp/>=<sp/>nextchar;
                </highlight>
            </codeline>
            <codeline lineno="619">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>If<sp/>we<sp/>end<sp/>this<sp/>ARGV-element<sp/>by<sp/>taking<sp/>the
                    <sp/>rest<sp/>as<sp/>an<sp/>arg,
                </highlight>
            </codeline>
            <codeline lineno="620">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>we<sp/>must<sp/>advance<sp/>to<sp/>the<sp/>next<sp/>element<sp/>now.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="621">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>optind++;
                </highlight>
            </codeline>
            <codeline lineno="622">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="623">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(optind<sp/>==<sp/>argc)
                </highlight>
            </codeline>
            <codeline lineno="624">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="625">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(<ref refid="getopt_8c_1ae30f05ee1e2e5652f174a35c7875d25e"
                                                     kindref="member">opterr</ref>)
                </highlight>
            </codeline>
            <codeline lineno="626">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="627">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>0
                </highlight>
            </codeline>
            <codeline lineno="628">
                <highlight class="preprocessor"></highlight>
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>fprintf<sp/>(stderr,
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;%s:<sp/>option<sp/>`-%c&apos;<sp/>requires<sp/>an<sp/>argument\n&quot;
                </highlight>
                <highlight class="normal">,</highlight>
            </codeline>
            <codeline lineno="629">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>argv[0],<sp/>c);
                </highlight>
            </codeline>
            <codeline lineno="630">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#else</highlight>
            </codeline>
            <codeline lineno="631">
                <highlight class="preprocessor"></highlight>
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>1003.2<sp/>specifies<sp/>the<sp/>format<sp/>of<sp/>this<sp/>message.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="632">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>fprintf<sp/>(stderr,
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;%s:<sp/>option<sp/>requires<sp/>an<sp/>argument<sp/>--<sp/>%c\n&quot;
                </highlight>
                <highlight class="normal">,</highlight>
            </codeline>
            <codeline lineno="633">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>argv[0],<sp/>c);
                </highlight>
            </codeline>
            <codeline lineno="634">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
            </codeline>
            <codeline lineno="635">
                <highlight class="preprocessor"></highlight>
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="636">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="getopt_8c_1a475b8db98445da73e5f62a1ef6324b95" kindref="member">optopt</ref>
                    <sp/>=
                    <sp/>
                    <ref refid="getopt_8c_1a66b97d6dee15f33d7b6731ccf48092cf" kindref="member">c</ref>;
                </highlight>
            </codeline>
            <codeline lineno="637">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(optstring[0]<sp/>==
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;:&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="638">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>c<sp/>=
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;:&apos;</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="639">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="640">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>c<sp/>=
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;?&apos;</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="641">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="642">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="643">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>We<sp/>already<sp/>incremented<sp/>`optind&apos;<sp/>once;
                </highlight>
            </codeline>
            <codeline lineno="644">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>increment<sp/>it<sp/>again<sp/>when<sp/>taking<sp/>next<sp/>ARGV-elt<sp/>as<sp/>argument.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="645">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="getopt_8c_1ab60cc9ce211468617579bb9d1ca6bcd9" kindref="member">optarg</ref>
                    <sp/>=<sp/>argv[optind++];
                </highlight>
            </codeline>
            <codeline lineno="646">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>nextchar<sp/>=
                    <sp/>
                    <ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;
                </highlight>
            </codeline>
            <codeline lineno="647">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="648">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="649">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="getopt_8c_1a66b97d6dee15f33d7b6731ccf48092cf" kindref="member">c</ref>;
                </highlight>
            </codeline>
            <codeline lineno="650">
                <highlight class="normal">
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="651">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="652">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="653">
                <highlight class="normal"></highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="654">
                <highlight class="normal">
                    <ref refid="getopt_8h_1a6c5b232cca42dab05f40b47f69715f8b" kindref="member">getopt</ref>
                    <sp/>(argc,<sp/>argv,<sp/>optstring)
                </highlight>
            </codeline>
            <codeline lineno="655">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>int<sp/>argc;
                </highlight>
            </codeline>
            <codeline lineno="656">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*const<sp/>*argv;
                </highlight>
            </codeline>
            <codeline lineno="657">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>const
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*optstring;
                </highlight>
            </codeline>
            <codeline lineno="658">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="659">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="getopt_8h_1a60428225710059ca135c6b2a8941855f" kindref="member">_getopt_internal</ref>
                    <sp/>(argc,<sp/>argv,<sp/>optstring,
                </highlight>
            </codeline>
            <codeline lineno="660">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">struct</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="structoption" kindref="compound">option</ref>
                    <sp/>*)<sp/>0,
                </highlight>
            </codeline>
            <codeline lineno="661">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>(
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>*)<sp/>0,
                </highlight>
            </codeline>
            <codeline lineno="662">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>0);
                </highlight>
            </codeline>
            <codeline lineno="663">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="664">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="665">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>_LIBC<sp/>or<sp/>not<sp/>__GNU_LIBRARY__.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="preprocessor"></highlight>
            </codeline>
            <codeline lineno="666">
                <highlight class="preprocessor"></highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="667">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#ifdef<sp/>TEST
                </highlight>
            </codeline>
            <codeline lineno="668">
                <highlight class="preprocessor"></highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="669">
                <highlight class="normal"></highlight>
                <highlight class="comment">/*<sp/>Compile<sp/>with<sp/>-DTEST<sp/>to<sp/>make<sp/>an<sp/>executable<sp/>
                    for<sp/>use<sp/>in<sp/>testing
                </highlight>
            </codeline>
            <codeline lineno="670">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>the<sp/>above<sp/>definition<sp/>of<sp/>`getopt&apos;.
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="671">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="672">
                <highlight class="normal"></highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="673">
                <highlight class="normal">
                    <ref refid="finch_8c_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>
                    <sp/>(argc,<sp/>argv)
                </highlight>
            </codeline>
            <codeline lineno="674">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>int<sp/>argc;
                </highlight>
            </codeline>
            <codeline lineno="675">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>**argv;
                </highlight>
            </codeline>
            <codeline lineno="676">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="677">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="getopt_8c_1a66b97d6dee15f33d7b6731ccf48092cf" kindref="member">c</ref>;
                </highlight>
            </codeline>
            <codeline lineno="678">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>digit_optind<sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="679">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="680">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">while</highlight>
                <highlight class="normal"><sp/>(1)
                </highlight>
            </codeline>
            <codeline lineno="681">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="682">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>this_option_optind<sp/>=<sp/>optind<sp/>?<sp/>optind<sp/>:<sp/>1;
                </highlight>
            </codeline>
            <codeline lineno="683">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="684">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>c<sp/>=
                    <sp/>
                    <ref refid="getopt_8h_1a6c5b232cca42dab05f40b47f69715f8b" kindref="member">getopt</ref>
                    <sp/>(argc,<sp/>argv,
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;abc:d:0123456789&quot;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="685">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(c<sp/>==<sp/>EOF)
                </highlight>
            </codeline>
            <codeline lineno="686">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">break</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="687">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="688">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">switch</highlight>
                <highlight class="normal"><sp/>(c)
                </highlight>
            </codeline>
            <codeline lineno="689">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="690">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;0&apos;</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="691">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;1&apos;</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="692">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;2&apos;</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="693">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;3&apos;</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="694">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;4&apos;</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="695">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;5&apos;</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="696">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;6&apos;</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="697">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;7&apos;</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="698">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;8&apos;</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="699">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;9&apos;</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="700">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(digit_optind<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>digit_optind<sp/>!=<sp/>
                    this_option_optind)
                </highlight>
            </codeline>
            <codeline lineno="701">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>printf<sp/>(
                </highlight>
                <highlight class="stringliteral">&quot;digits<sp/>occur<sp/>in<sp/>two<sp/>different<sp/>
                    argv-elements.\n&quot;
                </highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="702">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>digit_optind<sp/>=<sp/>this_option_optind;
                </highlight>
            </codeline>
            <codeline lineno="703">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>printf<sp/>(
                </highlight>
                <highlight class="stringliteral">&quot;option<sp/>%c\n&quot;
                </highlight>
                <highlight class="normal">,<sp/>c);
                </highlight>
            </codeline>
            <codeline lineno="704">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">break</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="705">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="706">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;a&apos;</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="707">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>printf<sp/>(
                </highlight>
                <highlight class="stringliteral">&quot;option<sp/>a\n&quot;
                </highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="708">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">break</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="709">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="710">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;b&apos;</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="711">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>printf<sp/>(
                </highlight>
                <highlight class="stringliteral">&quot;option<sp/>b\n&quot;
                </highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="712">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">break</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="713">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="714">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;c&apos;</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="715">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>printf<sp/>(
                </highlight>
                <highlight class="stringliteral">&quot;option<sp/>c<sp/>with<sp/>value<sp/>`%s&apos;\n&quot;
                </highlight>
                <highlight class="normal">,
                    <sp/>
                    <ref refid="getopt_8c_1ab60cc9ce211468617579bb9d1ca6bcd9" kindref="member">optarg</ref>);
                </highlight>
            </codeline>
            <codeline lineno="716">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">break</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="717">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="718">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;?&apos;</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="719">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">break</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="720">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="721">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">default</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="722">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>printf<sp/>(
                </highlight>
                <highlight class="stringliteral">&quot;??<sp/>getopt<sp/>returned<sp/>character<sp/>code<sp/>0%o<sp/>
                    ??\n&quot;
                </highlight>
                <highlight class="normal">,<sp/>c);
                </highlight>
            </codeline>
            <codeline lineno="723">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="724">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="725">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="726">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(optind<sp/>&lt;<sp/>argc)
                </highlight>
            </codeline>
            <codeline lineno="727">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="728">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>printf<sp/>(
                </highlight>
                <highlight class="stringliteral">&quot;non-option<sp/>ARGV-elements:<sp/>&quot;
                </highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="729">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">while</highlight>
                <highlight class="normal"><sp/>(optind<sp/>&lt;<sp/>argc)
                </highlight>
            </codeline>
            <codeline lineno="730">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>printf<sp/>(
                </highlight>
                <highlight class="stringliteral">&quot;%s<sp/>&quot;
                </highlight>
                <highlight class="normal">,<sp/>argv[optind++]);
                </highlight>
            </codeline>
            <codeline lineno="731">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>printf<sp/>(
                </highlight>
                <highlight class="stringliteral">&quot;\n&quot;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="732">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="733">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="734">
                <highlight class="normal">
                    <sp/>
                    <sp/>exit<sp/>(0);
                </highlight>
            </codeline>
            <codeline lineno="735">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="736">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="737">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>TEST<sp/>*/
                </highlight>
                <highlight class="preprocessor"></highlight>
            </codeline>
        </programlisting>
        <location file="C:/Users/David/Downloads/pidgin-2.0.0.tar/pidgin-2.0.0/pidgin-2.0.0/finch/getopt.c"/>
    </compounddef>
</doxygen>
